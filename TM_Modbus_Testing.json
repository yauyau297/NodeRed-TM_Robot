[
    {
        "id": "3e719391aa11bc87",
        "type": "tab",
        "label": "Test",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "650b7b59c9d93975",
        "type": "tab",
        "label": "FT0 (TM221699)",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "85d4e4ab83afdb00",
        "type": "tab",
        "label": "Auto Screw (TM221695)",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "797529b4f5ae078c",
        "type": "tab",
        "label": "Carrier Link (TM009437)",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "790b46a78b33b4e0",
        "type": "modbus-client",
        "name": "Testing_Client",
        "clienttype": "tcp",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "failureLogEnabled": true,
        "tcpHost": "127.0.0.1",
        "tcpPort": "10502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "serialAsciiResponseStartDelimiter": "0x3A",
        "unit_id": 1,
        "commandDelay": 1,
        "clientTimeout": 1000,
        "reconnectOnTimeout": true,
        "reconnectTimeout": 2000,
        "parallelUnitIdsAllowed": true,
        "showWarnings": true,
        "showLogs": true
    },
    {
        "id": "760d9cae393ba79c",
        "type": "ui_tab",
        "name": "Home",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "451e526c3b661b2b",
        "type": "ui_base",
        "theme": {
            "name": "theme-dark",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#00ff4c",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#097479",
                    "value": "#00ff4c",
                    "edited": true
                },
                "page-titlebar-backgroundColor": {
                    "value": "#00ff4c",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#111111",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#4dff82",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#555555",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#eeeeee",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#00ff4c",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#333333",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "TM Robot Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "91d7be0a61b111d0",
        "type": "ui_group",
        "name": "Control Box DI",
        "tab": "760d9cae393ba79c",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "2c3c732d933c34fe",
        "type": "ui_group",
        "name": "Control Box DO",
        "tab": "760d9cae393ba79c",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "633574fbb8c86600",
        "type": "modbus-client",
        "name": "FT0 (TM221699)",
        "clienttype": "tcp",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "failureLogEnabled": true,
        "tcpHost": "172.20.113.151",
        "tcpPort": "502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "serialAsciiResponseStartDelimiter": "0x3A",
        "unit_id": "1",
        "commandDelay": "1",
        "clientTimeout": "1000",
        "reconnectOnTimeout": true,
        "reconnectTimeout": "2000",
        "parallelUnitIdsAllowed": true,
        "showWarnings": true,
        "showLogs": true
    },
    {
        "id": "f5e59be3ef794208",
        "type": "modbus-client",
        "name": "Auto Screw (TM221695)",
        "clienttype": "tcp",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "failureLogEnabled": true,
        "tcpHost": "172.20.113.152",
        "tcpPort": "502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "serialAsciiResponseStartDelimiter": "0x3A",
        "unit_id": "1",
        "commandDelay": "1",
        "clientTimeout": "1000",
        "reconnectOnTimeout": true,
        "reconnectTimeout": "2000",
        "parallelUnitIdsAllowed": true,
        "showWarnings": true,
        "showLogs": true
    },
    {
        "id": "ecc596d6ac74e6fb",
        "type": "modbus-client",
        "name": "EDA AOI (TM220018)",
        "clienttype": "tcp",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "failureLogEnabled": true,
        "tcpHost": "172.20.113.153",
        "tcpPort": "502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "serialAsciiResponseStartDelimiter": "0x3A",
        "unit_id": "1",
        "commandDelay": "1",
        "clientTimeout": "1000",
        "reconnectOnTimeout": true,
        "reconnectTimeout": "2000",
        "parallelUnitIdsAllowed": true,
        "showWarnings": true,
        "showLogs": true
    },
    {
        "id": "6734c92f7677d61f",
        "type": "modbus-client",
        "name": "Carrier Link (TM009437)",
        "clienttype": "tcp",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "failureLogEnabled": true,
        "tcpHost": "172.20.113.154",
        "tcpPort": "502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "serialAsciiResponseStartDelimiter": "0x3A",
        "unit_id": "1",
        "commandDelay": "1",
        "clientTimeout": "1000",
        "reconnectOnTimeout": true,
        "reconnectTimeout": "2000",
        "parallelUnitIdsAllowed": true,
        "showWarnings": true,
        "showLogs": true
    },
    {
        "id": "01b8b17aa75a70e2",
        "type": "modbus-client",
        "name": "Stick Capacity Lable (TM000305)",
        "clienttype": "tcp",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "failureLogEnabled": true,
        "tcpHost": "172.20.113.155",
        "tcpPort": "502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "serialAsciiResponseStartDelimiter": "0x3A",
        "unit_id": "1",
        "commandDelay": "1",
        "clientTimeout": "1000",
        "reconnectOnTimeout": true,
        "reconnectTimeout": "2000",
        "parallelUnitIdsAllowed": true,
        "showWarnings": true,
        "showLogs": true
    },
    {
        "id": "55d10d24a66fae95",
        "type": "modbus-client",
        "name": "UPC Printing (TM000302)",
        "clienttype": "tcp",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "failureLogEnabled": true,
        "tcpHost": "172.20.113.156",
        "tcpPort": "502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "serialAsciiResponseStartDelimiter": "0x3A",
        "unit_id": "1",
        "commandDelay": "1",
        "clientTimeout": "1000",
        "reconnectOnTimeout": true,
        "reconnectTimeout": "2000",
        "parallelUnitIdsAllowed": true,
        "showWarnings": true,
        "showLogs": true
    },
    {
        "id": "c1b666a9f821261c",
        "type": "modbus-client",
        "name": "Giftbox AOI (TM007858)",
        "clienttype": "tcp",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "failureLogEnabled": true,
        "tcpHost": "172.20.113.157",
        "tcpPort": "502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "serialAsciiResponseStartDelimiter": "0x3A",
        "unit_id": "1",
        "commandDelay": "1",
        "clientTimeout": "1000",
        "reconnectOnTimeout": true,
        "reconnectTimeout": "2000",
        "parallelUnitIdsAllowed": true,
        "showWarnings": true,
        "showLogs": true
    },
    {
        "id": "28187319fd37419c",
        "type": "modbus-client",
        "name": "CID Printing (TM000308)",
        "clienttype": "tcp",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "failureLogEnabled": true,
        "tcpHost": "172.20.113.158",
        "tcpPort": "502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "serialAsciiResponseStartDelimiter": "0x3A",
        "unit_id": "1",
        "commandDelay": "1",
        "clientTimeout": "1000",
        "reconnectOnTimeout": true,
        "reconnectTimeout": "2000",
        "parallelUnitIdsAllowed": true,
        "showWarnings": true,
        "showLogs": true
    },
    {
        "id": "1df5a6a0e611800d",
        "type": "modbus-client",
        "name": "Weighting (TM221036)",
        "clienttype": "tcp",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "failureLogEnabled": true,
        "tcpHost": "172.20.113.159",
        "tcpPort": "502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "serialAsciiResponseStartDelimiter": "0x3A",
        "unit_id": "1",
        "commandDelay": "1",
        "clientTimeout": "1000",
        "reconnectOnTimeout": true,
        "reconnectTimeout": "2000",
        "parallelUnitIdsAllowed": true,
        "showWarnings": true,
        "showLogs": true
    },
    {
        "id": "a5e8fc7f7dd8950c",
        "type": "modbus-client",
        "name": "Palletizing",
        "clienttype": "tcp",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "failureLogEnabled": true,
        "tcpHost": "172.20.113.160",
        "tcpPort": "502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "serialAsciiResponseStartDelimiter": "0x3A",
        "unit_id": "1",
        "commandDelay": "1",
        "clientTimeout": "1000",
        "reconnectOnTimeout": true,
        "reconnectTimeout": "2000",
        "parallelUnitIdsAllowed": true,
        "showWarnings": true,
        "showLogs": true
    },
    {
        "id": "4f5119ebc1699fee",
        "type": "modbus-client",
        "name": "Folding Carton (TM000485)",
        "clienttype": "tcp",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "failureLogEnabled": true,
        "tcpHost": "172.20.113.161",
        "tcpPort": "502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "serialAsciiResponseStartDelimiter": "0x3A",
        "unit_id": "1",
        "commandDelay": "1",
        "clientTimeout": "1000",
        "reconnectOnTimeout": true,
        "reconnectTimeout": "2000",
        "parallelUnitIdsAllowed": true,
        "showWarnings": true,
        "showLogs": true
    },
    {
        "id": "143fc83b76fb46b8",
        "type": "ui_group",
        "name": "Robot Status",
        "tab": "760d9cae393ba79c",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "45f726a5a6b56c1d",
        "type": "ui_group",
        "name": "Robot Stick",
        "tab": "760d9cae393ba79c",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "45dd7e80d88634c0",
        "type": "ui_group",
        "name": "Robot Coordinate Base",
        "tab": "760d9cae393ba79c",
        "order": 5,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "c214b9226c55f0c7",
        "type": "ui_group",
        "name": "Run Setting",
        "tab": "760d9cae393ba79c",
        "order": 6,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "d376b50894f039fc",
        "type": "ui_tab",
        "name": "FT0 (TM221699)",
        "icon": "dashboard",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "160b054de19c16ca",
        "type": "ui_tab",
        "name": "Auto Screw (TM221695)",
        "icon": "dashboard",
        "order": 3,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "7284816feded1e05",
        "type": "ui_tab",
        "name": "EDA AOI",
        "icon": "dashboard",
        "order": 4,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "e46a2e5a9932ba04",
        "type": "ui_tab",
        "name": "Carrier Link",
        "icon": "dashboard",
        "order": 5,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "8d4ca71f09712cf9",
        "type": "ui_tab",
        "name": "Stick Capacity Label",
        "icon": "dashboard",
        "order": 6,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "88d40a57ac84f147",
        "type": "ui_tab",
        "name": "UPC Printing",
        "icon": "dashboard",
        "order": 7,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "03f9128ab62d0c3d",
        "type": "ui_tab",
        "name": "Giftbox AOI",
        "icon": "dashboard",
        "order": 8,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "d1ac99564db33052",
        "type": "ui_tab",
        "name": "CID Printing",
        "icon": "dashboard",
        "order": 9,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "ff3e22b263caf66a",
        "type": "ui_tab",
        "name": "Weighting",
        "icon": "dashboard",
        "order": 10,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "0060e45f1ba848b6",
        "type": "ui_tab",
        "name": "Palletizing",
        "icon": "dashboard",
        "order": 11,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "d27ea1c7a148ea94",
        "type": "ui_tab",
        "name": "Folding Carton",
        "icon": "dashboard",
        "order": 12,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "15e91c6a49858dbe",
        "type": "ui_group",
        "name": "Control Box DO",
        "tab": "d376b50894f039fc",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "672267fe886bf70a",
        "type": "ui_group",
        "name": "Control Box DI",
        "tab": "d376b50894f039fc",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "6bcf4b0cf09afeb7",
        "type": "ui_group",
        "name": "Robot Status",
        "tab": "760d9cae393ba79c",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "016faf227ce9f64f",
        "type": "ui_group",
        "name": "Robot Stick",
        "tab": "d376b50894f039fc",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "ad0816508d07cd0b",
        "type": "ui_group",
        "name": "Control Box DO",
        "tab": "160b054de19c16ca",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "604aa2c5ba4d8d7b",
        "type": "ui_group",
        "name": "Control Box DI",
        "tab": "160b054de19c16ca",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "423958eef1c8a98a",
        "type": "ui_group",
        "name": "Robot Status",
        "tab": "160b054de19c16ca",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "21817acc68fe5be5",
        "type": "ui_group",
        "name": "Robot Stick",
        "tab": "160b054de19c16ca",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "d5dc0b76938ae317",
        "type": "ui_group",
        "name": "Robot Status",
        "tab": "d376b50894f039fc",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "9efb5e34ea4e1de5",
        "type": "ui_group",
        "name": "Control Box DO",
        "tab": "e46a2e5a9932ba04",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "4ab021b052368581",
        "type": "ui_group",
        "name": "Control Box DI",
        "tab": "e46a2e5a9932ba04",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "2adb62999c91256c",
        "type": "ui_group",
        "name": "Robot Status",
        "tab": "e46a2e5a9932ba04",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "45b5965ca4769fae",
        "type": "ui_group",
        "name": "Robot Stick",
        "tab": "e46a2e5a9932ba04",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "0a6e490917f98fd4",
        "type": "modbus-server",
        "z": "3e719391aa11bc87",
        "name": "Testing_Server",
        "logEnabled": false,
        "hostname": "0.0.0.0",
        "serverPort": 10502,
        "responseDelay": 100,
        "delayUnit": "ms",
        "coilsBufferSize": 10000,
        "holdingBufferSize": 10000,
        "inputBufferSize": 10000,
        "discreteBufferSize": 10000,
        "showErrors": false,
        "x": 200,
        "y": 60,
        "wires": [
            [],
            [],
            [],
            [],
            []
        ]
    },
    {
        "id": "6516612361df45be",
        "type": "ui_switch",
        "z": "3e719391aa11bc87",
        "name": "",
        "label": "DO 0 : ",
        "tooltip": "",
        "group": "2c3c732d933c34fe",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 590,
        "y": 220,
        "wires": [
            [
                "e6744dcc25962174",
                "0c6718037ea411c7"
            ]
        ]
    },
    {
        "id": "167af9d99b4b25e5",
        "type": "ui_switch",
        "z": "3e719391aa11bc87",
        "name": "",
        "label": "DO 1 : ",
        "tooltip": "",
        "group": "2c3c732d933c34fe",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 590,
        "y": 320,
        "wires": [
            [
                "45bf214e184ecaae",
                "da5397055df98249"
            ]
        ]
    },
    {
        "id": "df576f2623df1bb6",
        "type": "ui_switch",
        "z": "3e719391aa11bc87",
        "name": "",
        "label": "DO 2 : ",
        "tooltip": "",
        "group": "2c3c732d933c34fe",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 590,
        "y": 420,
        "wires": [
            [
                "f1b0e57f0fa23890",
                "2112c169030c78f9"
            ]
        ]
    },
    {
        "id": "1d0685695da25429",
        "type": "ui_switch",
        "z": "3e719391aa11bc87",
        "name": "",
        "label": "DO 3 : ",
        "tooltip": "",
        "group": "2c3c732d933c34fe",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 590,
        "y": 520,
        "wires": [
            [
                "9f183bd249a0a133",
                "1467f4a5dacad0ae"
            ]
        ]
    },
    {
        "id": "3f362829d4463b98",
        "type": "ui_switch",
        "z": "3e719391aa11bc87",
        "name": "",
        "label": "DO 4 : ",
        "tooltip": "",
        "group": "2c3c732d933c34fe",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 590,
        "y": 620,
        "wires": [
            [
                "4d86457c5d1da0b9",
                "94cdfe3a39b9921b"
            ]
        ]
    },
    {
        "id": "46e16b7129f8c4c7",
        "type": "ui_switch",
        "z": "3e719391aa11bc87",
        "name": "",
        "label": "DO 5 : ",
        "tooltip": "",
        "group": "2c3c732d933c34fe",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 590,
        "y": 720,
        "wires": [
            [
                "92582f8ce71faddd",
                "3157bb4562e09715"
            ]
        ]
    },
    {
        "id": "26a95cc69a88f8c0",
        "type": "ui_switch",
        "z": "3e719391aa11bc87",
        "name": "",
        "label": "DO 6 : ",
        "tooltip": "",
        "group": "2c3c732d933c34fe",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 590,
        "y": 820,
        "wires": [
            [
                "6c11ec6d5f7c0304",
                "69a32e02e2cda6ac"
            ]
        ]
    },
    {
        "id": "0b0a0d557f23e3dc",
        "type": "ui_switch",
        "z": "3e719391aa11bc87",
        "name": "",
        "label": "DO 7 : ",
        "tooltip": "",
        "group": "2c3c732d933c34fe",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 590,
        "y": 920,
        "wires": [
            [
                "ebb285f588907c35",
                "ad2f80178e3c8c68"
            ]
        ]
    },
    {
        "id": "9e575ce0d34da01c",
        "type": "ui_switch",
        "z": "3e719391aa11bc87",
        "name": "",
        "label": "DO 8 : ",
        "tooltip": "",
        "group": "2c3c732d933c34fe",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 590,
        "y": 1020,
        "wires": [
            [
                "8f40b6287cdeafe7",
                "0e9e59be6f3c15d3"
            ]
        ]
    },
    {
        "id": "f603bb3e76d83a57",
        "type": "ui_switch",
        "z": "3e719391aa11bc87",
        "name": "",
        "label": "DO 9 : ",
        "tooltip": "",
        "group": "2c3c732d933c34fe",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 590,
        "y": 1120,
        "wires": [
            [
                "53197e66b5958834",
                "462bcdda0edab346"
            ]
        ]
    },
    {
        "id": "1b8a1ca03563dec1",
        "type": "ui_switch",
        "z": "3e719391aa11bc87",
        "name": "",
        "label": "DO 10 : ",
        "tooltip": "",
        "group": "2c3c732d933c34fe",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 600,
        "y": 1220,
        "wires": [
            [
                "b34c65db7656cb64",
                "b9c3a4a3972bec73"
            ]
        ]
    },
    {
        "id": "ca1bdd2539f99d38",
        "type": "ui_switch",
        "z": "3e719391aa11bc87",
        "name": "",
        "label": "DO 11 : ",
        "tooltip": "",
        "group": "2c3c732d933c34fe",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 600,
        "y": 1320,
        "wires": [
            [
                "2c846d256a6cab00",
                "d905363ce3014888"
            ]
        ]
    },
    {
        "id": "2fbe6b6d49113d07",
        "type": "ui_switch",
        "z": "3e719391aa11bc87",
        "name": "",
        "label": "DO 12 : ",
        "tooltip": "",
        "group": "2c3c732d933c34fe",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 600,
        "y": 1420,
        "wires": [
            [
                "4101f59535e52bfb"
            ]
        ]
    },
    {
        "id": "2b3641d5e4717a47",
        "type": "ui_switch",
        "z": "3e719391aa11bc87",
        "name": "",
        "label": "DO 13 : ",
        "tooltip": "",
        "group": "2c3c732d933c34fe",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 600,
        "y": 1520,
        "wires": [
            [
                "8f4729bbd3e55c23",
                "2f8aefda7b4a3c08"
            ]
        ]
    },
    {
        "id": "f920f3337f11ce9f",
        "type": "ui_switch",
        "z": "3e719391aa11bc87",
        "name": "",
        "label": "DO 14 : ",
        "tooltip": "",
        "group": "2c3c732d933c34fe",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 600,
        "y": 1620,
        "wires": [
            [
                "12750a340d04ea9d",
                "53753bdaab9743de"
            ]
        ]
    },
    {
        "id": "e1590bba975eaf2d",
        "type": "ui_switch",
        "z": "3e719391aa11bc87",
        "name": "",
        "label": "DO 15 : ",
        "tooltip": "",
        "group": "2c3c732d933c34fe",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 600,
        "y": 1720,
        "wires": [
            [
                "08c376424963b35a",
                "9eb98072715e7bdc"
            ]
        ]
    },
    {
        "id": "20320c48758c460f",
        "type": "inject",
        "z": "3e719391aa11bc87",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[true, false, false, false, false]",
        "payloadType": "json",
        "x": 390,
        "y": 60,
        "wires": [
            [
                "2637e5df7de91ec6"
            ]
        ]
    },
    {
        "id": "ae510ce51537458c",
        "type": "debug",
        "z": "3e719391aa11bc87",
        "name": "debug 1",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 780,
        "y": 60,
        "wires": []
    },
    {
        "id": "2637e5df7de91ec6",
        "type": "function",
        "z": "3e719391aa11bc87",
        "name": "function 1",
        "func": "msg.payload = msg.payload[0];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 60,
        "wires": [
            [
                "ae510ce51537458c"
            ]
        ]
    },
    {
        "id": "335bc4b037aaa1b1",
        "type": "function",
        "z": "3e719391aa11bc87",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    //return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 220,
        "wires": [
            [
                "5f242ded4239cfa9",
                "6516612361df45be"
            ]
        ]
    },
    {
        "id": "5e30c71430f671c2",
        "type": "function",
        "z": "3e719391aa11bc87",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 320,
        "wires": [
            [
                "167af9d99b4b25e5",
                "7b2d7e15ec3c42a0"
            ]
        ]
    },
    {
        "id": "ee3e49b27244867b",
        "type": "modbus-read",
        "z": "3e719391aa11bc87",
        "name": "DO 0 Read",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "0",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "790b46a78b33b4e0",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 260,
        "y": 220,
        "wires": [
            [
                "335bc4b037aaa1b1",
                "16dacb9621b36742"
            ],
            []
        ]
    },
    {
        "id": "aff87f0a445c8a90",
        "type": "modbus-read",
        "z": "3e719391aa11bc87",
        "name": "DO 1 Read",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "1",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "790b46a78b33b4e0",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 260,
        "y": 320,
        "wires": [
            [
                "5e30c71430f671c2",
                "0d9647c3fa8124b0"
            ],
            []
        ]
    },
    {
        "id": "822b1417fba61f98",
        "type": "modbus-read",
        "z": "3e719391aa11bc87",
        "name": "DO 2 Read",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "0",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "790b46a78b33b4e0",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 260,
        "y": 420,
        "wires": [
            [
                "44cac44d1e98bf37",
                "98b7678c3120bbba"
            ],
            []
        ]
    },
    {
        "id": "ae92e7e4dfce9d2c",
        "type": "modbus-read",
        "z": "3e719391aa11bc87",
        "name": "DO 3 Read",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "3",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "790b46a78b33b4e0",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 260,
        "y": 520,
        "wires": [
            [
                "29304317ef033a04",
                "f92f67621386c205"
            ],
            []
        ]
    },
    {
        "id": "b0ab8fbca12c41db",
        "type": "modbus-read",
        "z": "3e719391aa11bc87",
        "name": "DO 4 Read",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "4",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "790b46a78b33b4e0",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 260,
        "y": 620,
        "wires": [
            [
                "b45784a72e7fc124",
                "e3e0f5cdb53328aa"
            ],
            []
        ]
    },
    {
        "id": "daa29785d543b871",
        "type": "modbus-read",
        "z": "3e719391aa11bc87",
        "name": "DO 5 Read",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "0",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "790b46a78b33b4e0",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 260,
        "y": 720,
        "wires": [
            [
                "60ff463fb1e13893",
                "3c4a52a4b2ea2606"
            ],
            []
        ]
    },
    {
        "id": "37b13f79548cf3fb",
        "type": "modbus-read",
        "z": "3e719391aa11bc87",
        "name": "DO 6 Read",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "6",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "790b46a78b33b4e0",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 260,
        "y": 820,
        "wires": [
            [
                "469cc0c7809e503a",
                "bbc39a8e05be6456"
            ],
            []
        ]
    },
    {
        "id": "5dff13191fd0ad3e",
        "type": "modbus-read",
        "z": "3e719391aa11bc87",
        "name": "DO 7 Read",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "7",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "790b46a78b33b4e0",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 260,
        "y": 920,
        "wires": [
            [
                "b61bf74fef5a97ad",
                "2ff8e40334631d62"
            ],
            []
        ]
    },
    {
        "id": "e90e6b09d12c3107",
        "type": "modbus-read",
        "z": "3e719391aa11bc87",
        "name": "DO 8 Read",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "8",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "790b46a78b33b4e0",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 260,
        "y": 1020,
        "wires": [
            [
                "e9572e19a4a164e5",
                "a4bf97ecd5a9dca9"
            ],
            []
        ]
    },
    {
        "id": "b46fd18620343f07",
        "type": "modbus-read",
        "z": "3e719391aa11bc87",
        "name": "DO 9 Read",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "9",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "790b46a78b33b4e0",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 260,
        "y": 1120,
        "wires": [
            [
                "e896d977b286572d",
                "2d91bda09585a05e"
            ],
            []
        ]
    },
    {
        "id": "a3095b727766efc5",
        "type": "modbus-read",
        "z": "3e719391aa11bc87",
        "name": "DO 10 Read",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "10",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "790b46a78b33b4e0",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 270,
        "y": 1220,
        "wires": [
            [
                "8d1f960698075d47",
                "3832f8b5038b3a0b"
            ],
            []
        ]
    },
    {
        "id": "faf9b591c8950119",
        "type": "modbus-read",
        "z": "3e719391aa11bc87",
        "name": "DO 11 Read",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "11",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "790b46a78b33b4e0",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 270,
        "y": 1320,
        "wires": [
            [
                "8d26aa10a60533e1",
                "fad604374668459d"
            ],
            []
        ]
    },
    {
        "id": "4362e51d8e8ea631",
        "type": "modbus-read",
        "z": "3e719391aa11bc87",
        "name": "DO 12 Read",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "12",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "790b46a78b33b4e0",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 270,
        "y": 1420,
        "wires": [
            [
                "a86f83c318c22b71"
            ],
            []
        ]
    },
    {
        "id": "0c84aab77ac3fa11",
        "type": "modbus-read",
        "z": "3e719391aa11bc87",
        "name": "DO 13 Read",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "13",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "790b46a78b33b4e0",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 270,
        "y": 1520,
        "wires": [
            [
                "627528914b0d0e52",
                "e390ce69d445ca2c"
            ],
            []
        ]
    },
    {
        "id": "c7746775dd8372c9",
        "type": "modbus-read",
        "z": "3e719391aa11bc87",
        "name": "DO 14 Read",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "14",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "790b46a78b33b4e0",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 270,
        "y": 1620,
        "wires": [
            [
                "ce1c59e2a4f7ac28",
                "356562f4f5ec616c"
            ],
            []
        ]
    },
    {
        "id": "05bfa882469412fa",
        "type": "modbus-read",
        "z": "3e719391aa11bc87",
        "name": "DO 15 Read",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "15",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "790b46a78b33b4e0",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 270,
        "y": 1720,
        "wires": [
            [
                "424214a9a3ef5056",
                "6a6574fa17f129e8"
            ],
            []
        ]
    },
    {
        "id": "44cac44d1e98bf37",
        "type": "function",
        "z": "3e719391aa11bc87",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 420,
        "wires": [
            [
                "df576f2623df1bb6",
                "c5c9e3bba7e99162"
            ]
        ]
    },
    {
        "id": "29304317ef033a04",
        "type": "function",
        "z": "3e719391aa11bc87",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 520,
        "wires": [
            [
                "1d0685695da25429",
                "65505135ae150561"
            ]
        ]
    },
    {
        "id": "b45784a72e7fc124",
        "type": "function",
        "z": "3e719391aa11bc87",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 620,
        "wires": [
            [
                "3f362829d4463b98",
                "68cfe9837bea31a2"
            ]
        ]
    },
    {
        "id": "60ff463fb1e13893",
        "type": "function",
        "z": "3e719391aa11bc87",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 720,
        "wires": [
            [
                "46e16b7129f8c4c7",
                "01f25fbfc0cb71cb"
            ]
        ]
    },
    {
        "id": "469cc0c7809e503a",
        "type": "function",
        "z": "3e719391aa11bc87",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 820,
        "wires": [
            [
                "26a95cc69a88f8c0",
                "d01f141c0cbdb629"
            ]
        ]
    },
    {
        "id": "b61bf74fef5a97ad",
        "type": "function",
        "z": "3e719391aa11bc87",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 920,
        "wires": [
            [
                "0b0a0d557f23e3dc",
                "01de5abcf84ec8b3"
            ]
        ]
    },
    {
        "id": "e9572e19a4a164e5",
        "type": "function",
        "z": "3e719391aa11bc87",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 1020,
        "wires": [
            [
                "9e575ce0d34da01c",
                "5d64dfcc1435bfbc"
            ]
        ]
    },
    {
        "id": "e896d977b286572d",
        "type": "function",
        "z": "3e719391aa11bc87",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 1120,
        "wires": [
            [
                "f603bb3e76d83a57",
                "569fec8ed82584c0"
            ]
        ]
    },
    {
        "id": "8d1f960698075d47",
        "type": "function",
        "z": "3e719391aa11bc87",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 1220,
        "wires": [
            [
                "1b8a1ca03563dec1",
                "b006b5a768aae8e5"
            ]
        ]
    },
    {
        "id": "8d26aa10a60533e1",
        "type": "function",
        "z": "3e719391aa11bc87",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 1320,
        "wires": [
            [
                "ca1bdd2539f99d38",
                "d1e2948c0f3dc7b1"
            ]
        ]
    },
    {
        "id": "a86f83c318c22b71",
        "type": "function",
        "z": "3e719391aa11bc87",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 1420,
        "wires": [
            [
                "2fbe6b6d49113d07"
            ]
        ]
    },
    {
        "id": "627528914b0d0e52",
        "type": "function",
        "z": "3e719391aa11bc87",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 1520,
        "wires": [
            [
                "2b3641d5e4717a47",
                "b9dc93c69cd8c7cb"
            ]
        ]
    },
    {
        "id": "ce1c59e2a4f7ac28",
        "type": "function",
        "z": "3e719391aa11bc87",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 1620,
        "wires": [
            [
                "f920f3337f11ce9f",
                "980d6c353977a4bf"
            ]
        ]
    },
    {
        "id": "424214a9a3ef5056",
        "type": "function",
        "z": "3e719391aa11bc87",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 1720,
        "wires": [
            [
                "e1590bba975eaf2d",
                "d275f404bc3a7a9e"
            ]
        ]
    },
    {
        "id": "e6744dcc25962174",
        "type": "modbus-write",
        "z": "3e719391aa11bc87",
        "name": "DO 0 Write",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "0",
        "quantity": "1",
        "server": "790b46a78b33b4e0",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 750,
        "y": 220,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "45bf214e184ecaae",
        "type": "modbus-write",
        "z": "3e719391aa11bc87",
        "name": "DO 1 Write",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "1",
        "quantity": "1",
        "server": "790b46a78b33b4e0",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 750,
        "y": 320,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "f1b0e57f0fa23890",
        "type": "modbus-write",
        "z": "3e719391aa11bc87",
        "name": "DO 2 Write",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "2",
        "quantity": "1",
        "server": "790b46a78b33b4e0",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 750,
        "y": 420,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "9f183bd249a0a133",
        "type": "modbus-write",
        "z": "3e719391aa11bc87",
        "name": "DO 3 Write",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "3",
        "quantity": "1",
        "server": "790b46a78b33b4e0",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 750,
        "y": 520,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "4d86457c5d1da0b9",
        "type": "modbus-write",
        "z": "3e719391aa11bc87",
        "name": "DO 4 Write",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "4",
        "quantity": "1",
        "server": "790b46a78b33b4e0",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 750,
        "y": 620,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "92582f8ce71faddd",
        "type": "modbus-write",
        "z": "3e719391aa11bc87",
        "name": "DO 5 Write",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "5",
        "quantity": "1",
        "server": "790b46a78b33b4e0",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 750,
        "y": 720,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "6c11ec6d5f7c0304",
        "type": "modbus-write",
        "z": "3e719391aa11bc87",
        "name": "DO 6 Write",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "6",
        "quantity": "1",
        "server": "790b46a78b33b4e0",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 750,
        "y": 820,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "ebb285f588907c35",
        "type": "modbus-write",
        "z": "3e719391aa11bc87",
        "name": "DO 7 Write",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "7",
        "quantity": "1",
        "server": "790b46a78b33b4e0",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 750,
        "y": 920,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "8f40b6287cdeafe7",
        "type": "modbus-write",
        "z": "3e719391aa11bc87",
        "name": "DO 8 Write",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "8",
        "quantity": "1",
        "server": "790b46a78b33b4e0",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 750,
        "y": 1020,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "53197e66b5958834",
        "type": "modbus-write",
        "z": "3e719391aa11bc87",
        "name": "DO 9 Write",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "9",
        "quantity": "1",
        "server": "790b46a78b33b4e0",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 750,
        "y": 1120,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "b34c65db7656cb64",
        "type": "modbus-write",
        "z": "3e719391aa11bc87",
        "name": "DO 10 Write",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "10",
        "quantity": "1",
        "server": "790b46a78b33b4e0",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 750,
        "y": 1220,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "2c846d256a6cab00",
        "type": "modbus-write",
        "z": "3e719391aa11bc87",
        "name": "DO 11 Write",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "11",
        "quantity": "1",
        "server": "790b46a78b33b4e0",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 750,
        "y": 1320,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "4101f59535e52bfb",
        "type": "modbus-write",
        "z": "3e719391aa11bc87",
        "name": "DO 12 Write",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "12",
        "quantity": "1",
        "server": "790b46a78b33b4e0",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 750,
        "y": 1420,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "8f4729bbd3e55c23",
        "type": "modbus-write",
        "z": "3e719391aa11bc87",
        "name": "DO 13 Write",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "13",
        "quantity": "1",
        "server": "790b46a78b33b4e0",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 750,
        "y": 1520,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "12750a340d04ea9d",
        "type": "modbus-write",
        "z": "3e719391aa11bc87",
        "name": "DO 14 Write",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "14",
        "quantity": "1",
        "server": "790b46a78b33b4e0",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 750,
        "y": 1620,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "08c376424963b35a",
        "type": "modbus-write",
        "z": "3e719391aa11bc87",
        "name": "DO 15 Write",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "15",
        "quantity": "1",
        "server": "790b46a78b33b4e0",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 750,
        "y": 1720,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "5f242ded4239cfa9",
        "type": "debug",
        "z": "3e719391aa11bc87",
        "name": "debug 2",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 600,
        "y": 180,
        "wires": []
    },
    {
        "id": "16dacb9621b36742",
        "type": "debug",
        "z": "3e719391aa11bc87",
        "name": "debug 3",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 440,
        "y": 180,
        "wires": []
    },
    {
        "id": "1b1a012ae6d56c79",
        "type": "comment",
        "z": "3e719391aa11bc87",
        "name": "ControlBox DO Robot",
        "info": "# This is ControlBox Output Setting",
        "x": 280,
        "y": 140,
        "wires": []
    },
    {
        "id": "0c6718037ea411c7",
        "type": "debug",
        "z": "3e719391aa11bc87",
        "name": "debug 4",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 760,
        "y": 180,
        "wires": []
    },
    {
        "id": "7b2d7e15ec3c42a0",
        "type": "debug",
        "z": "3e719391aa11bc87",
        "name": "debug 5",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 600,
        "y": 280,
        "wires": []
    },
    {
        "id": "0d9647c3fa8124b0",
        "type": "debug",
        "z": "3e719391aa11bc87",
        "name": "debug 6",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 440,
        "y": 280,
        "wires": []
    },
    {
        "id": "da5397055df98249",
        "type": "debug",
        "z": "3e719391aa11bc87",
        "name": "debug 7",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 760,
        "y": 280,
        "wires": []
    },
    {
        "id": "c5c9e3bba7e99162",
        "type": "debug",
        "z": "3e719391aa11bc87",
        "name": "debug 8",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 600,
        "y": 380,
        "wires": []
    },
    {
        "id": "98b7678c3120bbba",
        "type": "debug",
        "z": "3e719391aa11bc87",
        "name": "debug 9",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 440,
        "y": 380,
        "wires": []
    },
    {
        "id": "2112c169030c78f9",
        "type": "debug",
        "z": "3e719391aa11bc87",
        "name": "debug 10",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 760,
        "y": 380,
        "wires": []
    },
    {
        "id": "65505135ae150561",
        "type": "debug",
        "z": "3e719391aa11bc87",
        "name": "debug 11",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 600,
        "y": 480,
        "wires": []
    },
    {
        "id": "f92f67621386c205",
        "type": "debug",
        "z": "3e719391aa11bc87",
        "name": "debug 12",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 440,
        "y": 480,
        "wires": []
    },
    {
        "id": "1467f4a5dacad0ae",
        "type": "debug",
        "z": "3e719391aa11bc87",
        "name": "debug 13",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 760,
        "y": 480,
        "wires": []
    },
    {
        "id": "68cfe9837bea31a2",
        "type": "debug",
        "z": "3e719391aa11bc87",
        "name": "debug 14",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 600,
        "y": 580,
        "wires": []
    },
    {
        "id": "e3e0f5cdb53328aa",
        "type": "debug",
        "z": "3e719391aa11bc87",
        "name": "debug 15",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 440,
        "y": 580,
        "wires": []
    },
    {
        "id": "94cdfe3a39b9921b",
        "type": "debug",
        "z": "3e719391aa11bc87",
        "name": "debug 16",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 760,
        "y": 580,
        "wires": []
    },
    {
        "id": "01f25fbfc0cb71cb",
        "type": "debug",
        "z": "3e719391aa11bc87",
        "name": "debug 17",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 600,
        "y": 680,
        "wires": []
    },
    {
        "id": "3c4a52a4b2ea2606",
        "type": "debug",
        "z": "3e719391aa11bc87",
        "name": "debug 18",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 440,
        "y": 680,
        "wires": []
    },
    {
        "id": "3157bb4562e09715",
        "type": "debug",
        "z": "3e719391aa11bc87",
        "name": "debug 19",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 760,
        "y": 680,
        "wires": []
    },
    {
        "id": "d01f141c0cbdb629",
        "type": "debug",
        "z": "3e719391aa11bc87",
        "name": "debug 20",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 600,
        "y": 780,
        "wires": []
    },
    {
        "id": "bbc39a8e05be6456",
        "type": "debug",
        "z": "3e719391aa11bc87",
        "name": "debug 21",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 440,
        "y": 780,
        "wires": []
    },
    {
        "id": "69a32e02e2cda6ac",
        "type": "debug",
        "z": "3e719391aa11bc87",
        "name": "debug 22",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 760,
        "y": 780,
        "wires": []
    },
    {
        "id": "01de5abcf84ec8b3",
        "type": "debug",
        "z": "3e719391aa11bc87",
        "name": "debug 23",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 600,
        "y": 880,
        "wires": []
    },
    {
        "id": "2ff8e40334631d62",
        "type": "debug",
        "z": "3e719391aa11bc87",
        "name": "debug 24",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 440,
        "y": 880,
        "wires": []
    },
    {
        "id": "ad2f80178e3c8c68",
        "type": "debug",
        "z": "3e719391aa11bc87",
        "name": "debug 25",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 760,
        "y": 880,
        "wires": []
    },
    {
        "id": "5d64dfcc1435bfbc",
        "type": "debug",
        "z": "3e719391aa11bc87",
        "name": "debug 26",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 600,
        "y": 980,
        "wires": []
    },
    {
        "id": "a4bf97ecd5a9dca9",
        "type": "debug",
        "z": "3e719391aa11bc87",
        "name": "debug 27",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 440,
        "y": 980,
        "wires": []
    },
    {
        "id": "0e9e59be6f3c15d3",
        "type": "debug",
        "z": "3e719391aa11bc87",
        "name": "debug 28",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 760,
        "y": 980,
        "wires": []
    },
    {
        "id": "569fec8ed82584c0",
        "type": "debug",
        "z": "3e719391aa11bc87",
        "name": "debug 29",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 600,
        "y": 1080,
        "wires": []
    },
    {
        "id": "2d91bda09585a05e",
        "type": "debug",
        "z": "3e719391aa11bc87",
        "name": "debug 30",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 440,
        "y": 1080,
        "wires": []
    },
    {
        "id": "462bcdda0edab346",
        "type": "debug",
        "z": "3e719391aa11bc87",
        "name": "debug 31",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 760,
        "y": 1080,
        "wires": []
    },
    {
        "id": "b006b5a768aae8e5",
        "type": "debug",
        "z": "3e719391aa11bc87",
        "name": "debug 32",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 600,
        "y": 1180,
        "wires": []
    },
    {
        "id": "3832f8b5038b3a0b",
        "type": "debug",
        "z": "3e719391aa11bc87",
        "name": "debug 33",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 440,
        "y": 1180,
        "wires": []
    },
    {
        "id": "b9c3a4a3972bec73",
        "type": "debug",
        "z": "3e719391aa11bc87",
        "name": "debug 34",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 760,
        "y": 1180,
        "wires": []
    },
    {
        "id": "d1e2948c0f3dc7b1",
        "type": "debug",
        "z": "3e719391aa11bc87",
        "name": "debug 35",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 600,
        "y": 1280,
        "wires": []
    },
    {
        "id": "fad604374668459d",
        "type": "debug",
        "z": "3e719391aa11bc87",
        "name": "debug 36",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 440,
        "y": 1280,
        "wires": []
    },
    {
        "id": "d905363ce3014888",
        "type": "debug",
        "z": "3e719391aa11bc87",
        "name": "debug 37",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 760,
        "y": 1280,
        "wires": []
    },
    {
        "id": "f76c50b397e87fef",
        "type": "debug",
        "z": "3e719391aa11bc87",
        "name": "debug 38",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 600,
        "y": 1380,
        "wires": []
    },
    {
        "id": "da86738d58feff35",
        "type": "debug",
        "z": "3e719391aa11bc87",
        "name": "debug 39",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 440,
        "y": 1380,
        "wires": []
    },
    {
        "id": "b3a41eeb1dc98715",
        "type": "debug",
        "z": "3e719391aa11bc87",
        "name": "debug 40",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 760,
        "y": 1380,
        "wires": []
    },
    {
        "id": "b9dc93c69cd8c7cb",
        "type": "debug",
        "z": "3e719391aa11bc87",
        "name": "debug 41",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 600,
        "y": 1480,
        "wires": []
    },
    {
        "id": "e390ce69d445ca2c",
        "type": "debug",
        "z": "3e719391aa11bc87",
        "name": "debug 42",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 440,
        "y": 1480,
        "wires": []
    },
    {
        "id": "2f8aefda7b4a3c08",
        "type": "debug",
        "z": "3e719391aa11bc87",
        "name": "debug 43",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 760,
        "y": 1480,
        "wires": []
    },
    {
        "id": "980d6c353977a4bf",
        "type": "debug",
        "z": "3e719391aa11bc87",
        "name": "debug 44",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 600,
        "y": 1580,
        "wires": []
    },
    {
        "id": "356562f4f5ec616c",
        "type": "debug",
        "z": "3e719391aa11bc87",
        "name": "debug 45",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 440,
        "y": 1580,
        "wires": []
    },
    {
        "id": "53753bdaab9743de",
        "type": "debug",
        "z": "3e719391aa11bc87",
        "name": "debug 46",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 760,
        "y": 1580,
        "wires": []
    },
    {
        "id": "d275f404bc3a7a9e",
        "type": "debug",
        "z": "3e719391aa11bc87",
        "name": "debug 47",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 600,
        "y": 1680,
        "wires": []
    },
    {
        "id": "6a6574fa17f129e8",
        "type": "debug",
        "z": "3e719391aa11bc87",
        "name": "debug 48",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 440,
        "y": 1680,
        "wires": []
    },
    {
        "id": "9eb98072715e7bdc",
        "type": "debug",
        "z": "3e719391aa11bc87",
        "name": "debug 49",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 760,
        "y": 1680,
        "wires": []
    },
    {
        "id": "4a10f47617f0ee9e",
        "type": "modbus-read",
        "z": "3e719391aa11bc87",
        "name": "DI 0 Read",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Input",
        "adr": "0",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "790b46a78b33b4e0",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 1000,
        "y": 220,
        "wires": [
            [
                "d525f3634c6e179b",
                "537a6e4e19ebcb04"
            ],
            []
        ]
    },
    {
        "id": "d525f3634c6e179b",
        "type": "function",
        "z": "3e719391aa11bc87",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    //return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1180,
        "y": 220,
        "wires": [
            [
                "a4a7a4d6a2ccb8eb",
                "8c2252318b989ce0"
            ]
        ]
    },
    {
        "id": "3f45c2f4b2744618",
        "type": "modbus-read",
        "z": "3e719391aa11bc87",
        "name": "DI 1 Read",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Input",
        "adr": "1",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "790b46a78b33b4e0",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 1000,
        "y": 320,
        "wires": [
            [
                "5398cf264f9362a4",
                "66b97891f70fc080"
            ],
            []
        ]
    },
    {
        "id": "5398cf264f9362a4",
        "type": "function",
        "z": "3e719391aa11bc87",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    //return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1180,
        "y": 320,
        "wires": [
            [
                "c8d3dc1fe462b362",
                "d095ef99baa9fe39"
            ]
        ]
    },
    {
        "id": "9ce97cee66f2f555",
        "type": "modbus-read",
        "z": "3e719391aa11bc87",
        "name": "DI 2 Read",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Input",
        "adr": "2",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "790b46a78b33b4e0",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 1000,
        "y": 420,
        "wires": [
            [
                "7ed61b004031033a",
                "f5cf736743a99d62"
            ],
            []
        ]
    },
    {
        "id": "7ed61b004031033a",
        "type": "function",
        "z": "3e719391aa11bc87",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    //return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1180,
        "y": 420,
        "wires": [
            [
                "95f34e242c8a7230",
                "c61b0cd589e5b21e"
            ]
        ]
    },
    {
        "id": "626b44fc87e46bf2",
        "type": "modbus-read",
        "z": "3e719391aa11bc87",
        "name": "DI 3 Read",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Input",
        "adr": "3",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "790b46a78b33b4e0",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 1000,
        "y": 520,
        "wires": [
            [
                "d2cfaca72b56b8fb",
                "1ac8ed2b7febc771"
            ],
            []
        ]
    },
    {
        "id": "d2cfaca72b56b8fb",
        "type": "function",
        "z": "3e719391aa11bc87",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    //return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1180,
        "y": 520,
        "wires": [
            [
                "bfbe70f2523bea11",
                "d0ce285bf7ae2593"
            ]
        ]
    },
    {
        "id": "de3234892d9f76f1",
        "type": "modbus-read",
        "z": "3e719391aa11bc87",
        "name": "DI 4 Read",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Input",
        "adr": "4",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "790b46a78b33b4e0",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 1000,
        "y": 620,
        "wires": [
            [
                "9b80b57a2095d719",
                "ec090489691b6d2a"
            ],
            []
        ]
    },
    {
        "id": "9b80b57a2095d719",
        "type": "function",
        "z": "3e719391aa11bc87",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    //return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1180,
        "y": 620,
        "wires": [
            [
                "9b347d04cdd85624",
                "5e4923dd6655ff09"
            ]
        ]
    },
    {
        "id": "ee663ba58d675605",
        "type": "modbus-read",
        "z": "3e719391aa11bc87",
        "name": "DI 5 Read",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Input",
        "adr": "5",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "790b46a78b33b4e0",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 1000,
        "y": 720,
        "wires": [
            [
                "f23b160935b98aea",
                "aea2162baa403b3b"
            ],
            []
        ]
    },
    {
        "id": "f23b160935b98aea",
        "type": "function",
        "z": "3e719391aa11bc87",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    //return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1180,
        "y": 720,
        "wires": [
            [
                "56ead80283d33a3a",
                "a2c9db110c76ecc8"
            ]
        ]
    },
    {
        "id": "80c3c7448c5f7ac6",
        "type": "modbus-read",
        "z": "3e719391aa11bc87",
        "name": "DI 6 Read",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Input",
        "adr": "6",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "790b46a78b33b4e0",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 1000,
        "y": 820,
        "wires": [
            [
                "e9372f2518cb1eee",
                "dadefe24bfecb6b5"
            ],
            []
        ]
    },
    {
        "id": "e9372f2518cb1eee",
        "type": "function",
        "z": "3e719391aa11bc87",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    //return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1180,
        "y": 820,
        "wires": [
            [
                "1ecd1af87942d002",
                "9bb5625427ebdda0"
            ]
        ]
    },
    {
        "id": "3cf77603058f052b",
        "type": "modbus-read",
        "z": "3e719391aa11bc87",
        "name": "DI 7 Read",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Input",
        "adr": "7",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "790b46a78b33b4e0",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 1000,
        "y": 920,
        "wires": [
            [
                "f8dd67fe148d9a4b",
                "ea3453afd0e0afea"
            ],
            []
        ]
    },
    {
        "id": "f8dd67fe148d9a4b",
        "type": "function",
        "z": "3e719391aa11bc87",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    //return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1180,
        "y": 920,
        "wires": [
            [
                "366949a4fc021992",
                "c73ec34864f1a5c0"
            ]
        ]
    },
    {
        "id": "c9a3528d726b867b",
        "type": "modbus-read",
        "z": "3e719391aa11bc87",
        "name": "DI 8 Read",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Input",
        "adr": "8",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "790b46a78b33b4e0",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 1000,
        "y": 1020,
        "wires": [
            [
                "77fbec74a31b1abd",
                "9d55f1e25930e20c"
            ],
            []
        ]
    },
    {
        "id": "77fbec74a31b1abd",
        "type": "function",
        "z": "3e719391aa11bc87",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    //return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1180,
        "y": 1020,
        "wires": [
            [
                "711dba365612f98d",
                "804bba9d5d88e628"
            ]
        ]
    },
    {
        "id": "5908aa3b966d9ee9",
        "type": "modbus-read",
        "z": "3e719391aa11bc87",
        "name": "DI 9 Read",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Input",
        "adr": "9",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "790b46a78b33b4e0",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 1000,
        "y": 1120,
        "wires": [
            [
                "a1b18b33b600d3ff",
                "58bd384fbf354f17"
            ],
            []
        ]
    },
    {
        "id": "a1b18b33b600d3ff",
        "type": "function",
        "z": "3e719391aa11bc87",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    //return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1180,
        "y": 1120,
        "wires": [
            [
                "79275ba953c1f7e3",
                "a5194ceca73f62cf"
            ]
        ]
    },
    {
        "id": "6e11f0ebd6e51f01",
        "type": "modbus-read",
        "z": "3e719391aa11bc87",
        "name": "DI 10 Read",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Input",
        "adr": "10",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "790b46a78b33b4e0",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 1010,
        "y": 1220,
        "wires": [
            [
                "0f72babf30b21356"
            ],
            []
        ]
    },
    {
        "id": "0f72babf30b21356",
        "type": "function",
        "z": "3e719391aa11bc87",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    //return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1180,
        "y": 1220,
        "wires": [
            [
                "a1ee7d4abb170111"
            ]
        ]
    },
    {
        "id": "b420274deffdd091",
        "type": "modbus-read",
        "z": "3e719391aa11bc87",
        "name": "DI 11 Read",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Input",
        "adr": "11",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "790b46a78b33b4e0",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 1000,
        "y": 1320,
        "wires": [
            [
                "f7120275a29c62da",
                "1a05e7b00c0701ba"
            ],
            []
        ]
    },
    {
        "id": "f7120275a29c62da",
        "type": "function",
        "z": "3e719391aa11bc87",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    //return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1180,
        "y": 1320,
        "wires": [
            [
                "bbe61439a84c4139",
                "5dcd21c565e3a630"
            ]
        ]
    },
    {
        "id": "3c56a2ca58d529d6",
        "type": "modbus-read",
        "z": "3e719391aa11bc87",
        "name": "DI 12 Read",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Input",
        "adr": "12",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "790b46a78b33b4e0",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 1010,
        "y": 1420,
        "wires": [
            [
                "ade43d63d7451d8a",
                "cc954fe525345573"
            ],
            []
        ]
    },
    {
        "id": "ade43d63d7451d8a",
        "type": "function",
        "z": "3e719391aa11bc87",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    //return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1180,
        "y": 1420,
        "wires": [
            [
                "c98158cb97a4d121",
                "e03a2171d170e84f"
            ]
        ]
    },
    {
        "id": "b65b11cdd9b9642d",
        "type": "modbus-read",
        "z": "3e719391aa11bc87",
        "name": "DI 13 Read",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Input",
        "adr": "13",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "790b46a78b33b4e0",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 1010,
        "y": 1520,
        "wires": [
            [
                "f5f7f2d4485c8c93",
                "d626d56663481b3b"
            ],
            []
        ]
    },
    {
        "id": "f5f7f2d4485c8c93",
        "type": "function",
        "z": "3e719391aa11bc87",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    //return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1180,
        "y": 1520,
        "wires": [
            [
                "7f396fdb297ca233",
                "70dfa49413c25842"
            ]
        ]
    },
    {
        "id": "73b75630f64f8a24",
        "type": "modbus-read",
        "z": "3e719391aa11bc87",
        "name": "DI 14 Read",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Input",
        "adr": "14",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "790b46a78b33b4e0",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 1010,
        "y": 1620,
        "wires": [
            [
                "0bbc94553a78db51",
                "4d3f982acd7264d9"
            ],
            []
        ]
    },
    {
        "id": "0bbc94553a78db51",
        "type": "function",
        "z": "3e719391aa11bc87",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    //return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1180,
        "y": 1620,
        "wires": [
            [
                "319da1b6d0e1c2bc",
                "bec461703c1ad2f2"
            ]
        ]
    },
    {
        "id": "336e06fc453d1a87",
        "type": "modbus-read",
        "z": "3e719391aa11bc87",
        "name": "DI 15 Read",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Input",
        "adr": "15",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "790b46a78b33b4e0",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 1010,
        "y": 1720,
        "wires": [
            [
                "ac7af41e634b1086",
                "17d806bac0b3d84a"
            ],
            []
        ]
    },
    {
        "id": "ac7af41e634b1086",
        "type": "function",
        "z": "3e719391aa11bc87",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    //return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1180,
        "y": 1720,
        "wires": [
            [
                "e83811a7131dcdc8",
                "6c0de6cdaa86a952"
            ]
        ]
    },
    {
        "id": "2e4c75343041763a",
        "type": "ui_text",
        "z": "3e719391aa11bc87",
        "group": "91d7be0a61b111d0",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "DI 0 : ",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1570,
        "y": 220,
        "wires": []
    },
    {
        "id": "a4a7a4d6a2ccb8eb",
        "type": "change",
        "z": "3e719391aa11bc87",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "bool",
                "to": "Working",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "bool",
                "to": "Not Working",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1380,
        "y": 220,
        "wires": [
            [
                "2e4c75343041763a"
            ]
        ]
    },
    {
        "id": "86e4211d19afead0",
        "type": "ui_text",
        "z": "3e719391aa11bc87",
        "group": "91d7be0a61b111d0",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "DI 1 : ",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1570,
        "y": 320,
        "wires": []
    },
    {
        "id": "c8d3dc1fe462b362",
        "type": "change",
        "z": "3e719391aa11bc87",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "bool",
                "to": "Working",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "bool",
                "to": "Not Working",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1380,
        "y": 320,
        "wires": [
            [
                "86e4211d19afead0"
            ]
        ]
    },
    {
        "id": "996aa3025a40012e",
        "type": "ui_text",
        "z": "3e719391aa11bc87",
        "group": "91d7be0a61b111d0",
        "order": 16,
        "width": "0",
        "height": "0",
        "name": "",
        "label": "DI 2 : ",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1570,
        "y": 420,
        "wires": []
    },
    {
        "id": "95f34e242c8a7230",
        "type": "change",
        "z": "3e719391aa11bc87",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "bool",
                "to": "Working",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "bool",
                "to": "Not Working",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1380,
        "y": 420,
        "wires": [
            [
                "996aa3025a40012e"
            ]
        ]
    },
    {
        "id": "98fe2563e7cfbbac",
        "type": "ui_text",
        "z": "3e719391aa11bc87",
        "group": "91d7be0a61b111d0",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "DI 3 : ",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1570,
        "y": 520,
        "wires": []
    },
    {
        "id": "bfbe70f2523bea11",
        "type": "change",
        "z": "3e719391aa11bc87",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "bool",
                "to": "Working",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "bool",
                "to": "Not Working",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1380,
        "y": 520,
        "wires": [
            [
                "98fe2563e7cfbbac"
            ]
        ]
    },
    {
        "id": "928f588bdb1a7a46",
        "type": "ui_text",
        "z": "3e719391aa11bc87",
        "group": "91d7be0a61b111d0",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "DI 4 : ",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1570,
        "y": 620,
        "wires": []
    },
    {
        "id": "9b347d04cdd85624",
        "type": "change",
        "z": "3e719391aa11bc87",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "bool",
                "to": "Working",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "bool",
                "to": "Not Working",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1380,
        "y": 620,
        "wires": [
            [
                "928f588bdb1a7a46"
            ]
        ]
    },
    {
        "id": "3f4dba6b93a061a5",
        "type": "ui_text",
        "z": "3e719391aa11bc87",
        "group": "91d7be0a61b111d0",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "DI 5 : ",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1570,
        "y": 720,
        "wires": []
    },
    {
        "id": "56ead80283d33a3a",
        "type": "change",
        "z": "3e719391aa11bc87",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "bool",
                "to": "Working",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "bool",
                "to": "Not Working",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1380,
        "y": 720,
        "wires": [
            [
                "3f4dba6b93a061a5"
            ]
        ]
    },
    {
        "id": "0b5a59606ba1249a",
        "type": "ui_text",
        "z": "3e719391aa11bc87",
        "group": "91d7be0a61b111d0",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "DI 6 : ",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1570,
        "y": 820,
        "wires": []
    },
    {
        "id": "1ecd1af87942d002",
        "type": "change",
        "z": "3e719391aa11bc87",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "bool",
                "to": "Working",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "bool",
                "to": "Not Working",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1380,
        "y": 820,
        "wires": [
            [
                "0b5a59606ba1249a"
            ]
        ]
    },
    {
        "id": "9f4e61a15cfc23d1",
        "type": "ui_text",
        "z": "3e719391aa11bc87",
        "group": "91d7be0a61b111d0",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "DI 7 : ",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1570,
        "y": 920,
        "wires": []
    },
    {
        "id": "366949a4fc021992",
        "type": "change",
        "z": "3e719391aa11bc87",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "bool",
                "to": "Working",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "bool",
                "to": "Not Working",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1380,
        "y": 920,
        "wires": [
            [
                "9f4e61a15cfc23d1"
            ]
        ]
    },
    {
        "id": "d4de82250f60ad45",
        "type": "ui_text",
        "z": "3e719391aa11bc87",
        "group": "91d7be0a61b111d0",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "DI 8 : ",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1570,
        "y": 1020,
        "wires": []
    },
    {
        "id": "711dba365612f98d",
        "type": "change",
        "z": "3e719391aa11bc87",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "bool",
                "to": "Working",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "bool",
                "to": "Not Working",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1380,
        "y": 1020,
        "wires": [
            [
                "d4de82250f60ad45"
            ]
        ]
    },
    {
        "id": "34eb5c7ce038807b",
        "type": "ui_text",
        "z": "3e719391aa11bc87",
        "group": "91d7be0a61b111d0",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "DI 9 : ",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1570,
        "y": 1120,
        "wires": []
    },
    {
        "id": "79275ba953c1f7e3",
        "type": "change",
        "z": "3e719391aa11bc87",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "bool",
                "to": "Working",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "bool",
                "to": "Not Working",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1380,
        "y": 1120,
        "wires": [
            [
                "34eb5c7ce038807b"
            ]
        ]
    },
    {
        "id": "3f7b682cc880379f",
        "type": "ui_text",
        "z": "3e719391aa11bc87",
        "group": "91d7be0a61b111d0",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "DI 10 : ",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1570,
        "y": 1220,
        "wires": []
    },
    {
        "id": "a1ee7d4abb170111",
        "type": "change",
        "z": "3e719391aa11bc87",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "bool",
                "to": "Working",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "bool",
                "to": "Not Working",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1380,
        "y": 1220,
        "wires": [
            [
                "3f7b682cc880379f"
            ]
        ]
    },
    {
        "id": "41339160d0815d6d",
        "type": "ui_text",
        "z": "3e719391aa11bc87",
        "group": "91d7be0a61b111d0",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "DI 11 : ",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1570,
        "y": 1320,
        "wires": []
    },
    {
        "id": "bbe61439a84c4139",
        "type": "change",
        "z": "3e719391aa11bc87",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "bool",
                "to": "Working",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "bool",
                "to": "Not Working",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1380,
        "y": 1320,
        "wires": [
            [
                "41339160d0815d6d"
            ]
        ]
    },
    {
        "id": "8747d85d925763cb",
        "type": "ui_text",
        "z": "3e719391aa11bc87",
        "group": "91d7be0a61b111d0",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "DI 12 : ",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1570,
        "y": 1420,
        "wires": []
    },
    {
        "id": "c98158cb97a4d121",
        "type": "change",
        "z": "3e719391aa11bc87",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "bool",
                "to": "Working",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "bool",
                "to": "Not Working",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1380,
        "y": 1420,
        "wires": [
            [
                "8747d85d925763cb"
            ]
        ]
    },
    {
        "id": "8dea6fdd042427fc",
        "type": "ui_text",
        "z": "3e719391aa11bc87",
        "group": "91d7be0a61b111d0",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "DI 13 : ",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1570,
        "y": 1520,
        "wires": []
    },
    {
        "id": "7f396fdb297ca233",
        "type": "change",
        "z": "3e719391aa11bc87",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "bool",
                "to": "Working",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "bool",
                "to": "Not Working",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1380,
        "y": 1520,
        "wires": [
            [
                "8dea6fdd042427fc"
            ]
        ]
    },
    {
        "id": "24c4c4a5c0654d9b",
        "type": "ui_text",
        "z": "3e719391aa11bc87",
        "group": "91d7be0a61b111d0",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "DI 14 : ",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1570,
        "y": 1620,
        "wires": []
    },
    {
        "id": "319da1b6d0e1c2bc",
        "type": "change",
        "z": "3e719391aa11bc87",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "bool",
                "to": "Working",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "bool",
                "to": "Not Working",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1380,
        "y": 1620,
        "wires": [
            [
                "24c4c4a5c0654d9b"
            ]
        ]
    },
    {
        "id": "4dbb0dcb2dae0971",
        "type": "ui_text",
        "z": "3e719391aa11bc87",
        "group": "91d7be0a61b111d0",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "DI 15 : ",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1570,
        "y": 1720,
        "wires": []
    },
    {
        "id": "e83811a7131dcdc8",
        "type": "change",
        "z": "3e719391aa11bc87",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "bool",
                "to": "Working",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "bool",
                "to": "Not Working",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1380,
        "y": 1720,
        "wires": [
            [
                "4dbb0dcb2dae0971"
            ]
        ]
    },
    {
        "id": "59deccf7c3ff7a63",
        "type": "comment",
        "z": "3e719391aa11bc87",
        "name": "ControlBox DI Robot",
        "info": "# This is ControlBox Input Setting",
        "x": 1010,
        "y": 160,
        "wires": []
    },
    {
        "id": "537a6e4e19ebcb04",
        "type": "debug",
        "z": "3e719391aa11bc87",
        "name": "debug 50",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1180,
        "y": 180,
        "wires": []
    },
    {
        "id": "8c2252318b989ce0",
        "type": "debug",
        "z": "3e719391aa11bc87",
        "name": "debug 51",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1360,
        "y": 180,
        "wires": []
    },
    {
        "id": "66b97891f70fc080",
        "type": "debug",
        "z": "3e719391aa11bc87",
        "name": "debug 52",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1180,
        "y": 280,
        "wires": []
    },
    {
        "id": "d095ef99baa9fe39",
        "type": "debug",
        "z": "3e719391aa11bc87",
        "name": "debug 53",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1360,
        "y": 280,
        "wires": []
    },
    {
        "id": "f5cf736743a99d62",
        "type": "debug",
        "z": "3e719391aa11bc87",
        "name": "debug 54",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1180,
        "y": 380,
        "wires": []
    },
    {
        "id": "c61b0cd589e5b21e",
        "type": "debug",
        "z": "3e719391aa11bc87",
        "name": "debug 55",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1360,
        "y": 380,
        "wires": []
    },
    {
        "id": "1ac8ed2b7febc771",
        "type": "debug",
        "z": "3e719391aa11bc87",
        "name": "debug 56",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1180,
        "y": 480,
        "wires": []
    },
    {
        "id": "d0ce285bf7ae2593",
        "type": "debug",
        "z": "3e719391aa11bc87",
        "name": "debug 57",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1360,
        "y": 480,
        "wires": []
    },
    {
        "id": "ec090489691b6d2a",
        "type": "debug",
        "z": "3e719391aa11bc87",
        "name": "debug 58",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1180,
        "y": 580,
        "wires": []
    },
    {
        "id": "5e4923dd6655ff09",
        "type": "debug",
        "z": "3e719391aa11bc87",
        "name": "debug 59",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1360,
        "y": 580,
        "wires": []
    },
    {
        "id": "aea2162baa403b3b",
        "type": "debug",
        "z": "3e719391aa11bc87",
        "name": "debug 60",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1180,
        "y": 680,
        "wires": []
    },
    {
        "id": "a2c9db110c76ecc8",
        "type": "debug",
        "z": "3e719391aa11bc87",
        "name": "debug 61",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1360,
        "y": 680,
        "wires": []
    },
    {
        "id": "dadefe24bfecb6b5",
        "type": "debug",
        "z": "3e719391aa11bc87",
        "name": "debug 62",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1180,
        "y": 780,
        "wires": []
    },
    {
        "id": "9bb5625427ebdda0",
        "type": "debug",
        "z": "3e719391aa11bc87",
        "name": "debug 63",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1360,
        "y": 780,
        "wires": []
    },
    {
        "id": "ea3453afd0e0afea",
        "type": "debug",
        "z": "3e719391aa11bc87",
        "name": "debug 64",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1180,
        "y": 880,
        "wires": []
    },
    {
        "id": "c73ec34864f1a5c0",
        "type": "debug",
        "z": "3e719391aa11bc87",
        "name": "debug 65",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1360,
        "y": 880,
        "wires": []
    },
    {
        "id": "9d55f1e25930e20c",
        "type": "debug",
        "z": "3e719391aa11bc87",
        "name": "debug 66",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1180,
        "y": 980,
        "wires": []
    },
    {
        "id": "804bba9d5d88e628",
        "type": "debug",
        "z": "3e719391aa11bc87",
        "name": "debug 67",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1360,
        "y": 980,
        "wires": []
    },
    {
        "id": "58bd384fbf354f17",
        "type": "debug",
        "z": "3e719391aa11bc87",
        "name": "debug 68",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1180,
        "y": 1080,
        "wires": []
    },
    {
        "id": "a5194ceca73f62cf",
        "type": "debug",
        "z": "3e719391aa11bc87",
        "name": "debug 69",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1360,
        "y": 1080,
        "wires": []
    },
    {
        "id": "978b31221059526c",
        "type": "debug",
        "z": "3e719391aa11bc87",
        "name": "debug 70",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1180,
        "y": 1180,
        "wires": []
    },
    {
        "id": "3389acbf50df0a89",
        "type": "debug",
        "z": "3e719391aa11bc87",
        "name": "debug 71",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1360,
        "y": 1180,
        "wires": []
    },
    {
        "id": "1a05e7b00c0701ba",
        "type": "debug",
        "z": "3e719391aa11bc87",
        "name": "debug 72",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1180,
        "y": 1280,
        "wires": []
    },
    {
        "id": "5dcd21c565e3a630",
        "type": "debug",
        "z": "3e719391aa11bc87",
        "name": "debug 73",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1360,
        "y": 1280,
        "wires": []
    },
    {
        "id": "cc954fe525345573",
        "type": "debug",
        "z": "3e719391aa11bc87",
        "name": "debug 74",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1180,
        "y": 1380,
        "wires": []
    },
    {
        "id": "e03a2171d170e84f",
        "type": "debug",
        "z": "3e719391aa11bc87",
        "name": "debug 75",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1360,
        "y": 1380,
        "wires": []
    },
    {
        "id": "d626d56663481b3b",
        "type": "debug",
        "z": "3e719391aa11bc87",
        "name": "debug 76",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1180,
        "y": 1480,
        "wires": []
    },
    {
        "id": "70dfa49413c25842",
        "type": "debug",
        "z": "3e719391aa11bc87",
        "name": "debug 77",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1360,
        "y": 1480,
        "wires": []
    },
    {
        "id": "4d3f982acd7264d9",
        "type": "debug",
        "z": "3e719391aa11bc87",
        "name": "debug 78",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1180,
        "y": 1580,
        "wires": []
    },
    {
        "id": "bec461703c1ad2f2",
        "type": "debug",
        "z": "3e719391aa11bc87",
        "name": "debug 79",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1360,
        "y": 1580,
        "wires": []
    },
    {
        "id": "17d806bac0b3d84a",
        "type": "debug",
        "z": "3e719391aa11bc87",
        "name": "debug 80",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1180,
        "y": 1680,
        "wires": []
    },
    {
        "id": "6c0de6cdaa86a952",
        "type": "debug",
        "z": "3e719391aa11bc87",
        "name": "debug 81",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1360,
        "y": 1680,
        "wires": []
    },
    {
        "id": "043670122cf07c6d",
        "type": "modbus-read",
        "z": "3e719391aa11bc87",
        "name": "Error or Not",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Input",
        "adr": "7201",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "790b46a78b33b4e0",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 1810,
        "y": 240,
        "wires": [
            [
                "bbc85354c5afe974",
                "9be171ab6c55e09b"
            ],
            []
        ]
    },
    {
        "id": "2112ad91f840312a",
        "type": "comment",
        "z": "3e719391aa11bc87",
        "name": "Robot Status",
        "info": "# This is Robot Status",
        "x": 1810,
        "y": 180,
        "wires": []
    },
    {
        "id": "c2dd5ac8a0678a60",
        "type": "modbus-read",
        "z": "3e719391aa11bc87",
        "name": "Project Running or Not",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Input",
        "adr": "7202",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "790b46a78b33b4e0",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 1840,
        "y": 340,
        "wires": [
            [
                "5e48d220cd2462fd",
                "1ae1cbeefc10d5bf"
            ],
            []
        ]
    },
    {
        "id": "a02dbe3eae02f5cc",
        "type": "modbus-read",
        "z": "3e719391aa11bc87",
        "name": "Project Editing or Not",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Input",
        "adr": "7203",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "790b46a78b33b4e0",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 1840,
        "y": 440,
        "wires": [
            [
                "f333fe54e42767b2",
                "4477a80c91a04b61"
            ],
            []
        ]
    },
    {
        "id": "6f47912da63aa60d",
        "type": "modbus-read",
        "z": "3e719391aa11bc87",
        "name": "Project Pause or Not",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Input",
        "adr": "7204",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "790b46a78b33b4e0",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 1830,
        "y": 540,
        "wires": [
            [
                "f1f84edd35c24d94",
                "130de91c2a2620cd"
            ],
            []
        ]
    },
    {
        "id": "15d8ab0796f250b8",
        "type": "modbus-read",
        "z": "3e719391aa11bc87",
        "name": "Get Control or Not",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Input",
        "adr": "7205",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "790b46a78b33b4e0",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 1830,
        "y": 640,
        "wires": [
            [
                "23b19ffd13dab4cf",
                "78e01ff13b10e45f"
            ],
            []
        ]
    },
    {
        "id": "6220838cdf166ce3",
        "type": "modbus-read",
        "z": "3e719391aa11bc87",
        "name": "Light on or not",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Input",
        "adr": "7206",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "790b46a78b33b4e0",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 1810,
        "y": 740,
        "wires": [
            [
                "f83d7d888583d536",
                "4385a68f1c70e787"
            ],
            []
        ]
    },
    {
        "id": "da0aa2a8a1d32864",
        "type": "modbus-read",
        "z": "3e719391aa11bc87",
        "name": "Safety IO or not",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Input",
        "adr": "7207",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "790b46a78b33b4e0",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 1820,
        "y": 840,
        "wires": [
            [
                "6a66b0672ba116ec",
                "b6c7b4100792a25f"
            ],
            []
        ]
    },
    {
        "id": "6e45b919e2cabf49",
        "type": "modbus-read",
        "z": "3e719391aa11bc87",
        "name": "E-Stop or not",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Input",
        "adr": "7208",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "790b46a78b33b4e0",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 1810,
        "y": 940,
        "wires": [
            [
                "9e3a95a1b1cece6c",
                "a7a754431f51e87e"
            ],
            []
        ]
    },
    {
        "id": "bbc85354c5afe974",
        "type": "function",
        "z": "3e719391aa11bc87",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    //return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2000,
        "y": 240,
        "wires": [
            [
                "4f0d96e4069afc54",
                "e6796930186e28a8"
            ]
        ]
    },
    {
        "id": "5e48d220cd2462fd",
        "type": "function",
        "z": "3e719391aa11bc87",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    //return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2040,
        "y": 340,
        "wires": [
            [
                "e3cc3443902dd46d",
                "f0d7dcb9b8a2d5c4"
            ]
        ]
    },
    {
        "id": "f333fe54e42767b2",
        "type": "function",
        "z": "3e719391aa11bc87",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    //return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2040,
        "y": 440,
        "wires": [
            [
                "795f2dedea2ef062",
                "ebb117e904a642d5"
            ]
        ]
    },
    {
        "id": "f1f84edd35c24d94",
        "type": "function",
        "z": "3e719391aa11bc87",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    //return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2020,
        "y": 540,
        "wires": [
            [
                "6aef386568680272",
                "1113c27a95f683fb"
            ]
        ]
    },
    {
        "id": "23b19ffd13dab4cf",
        "type": "function",
        "z": "3e719391aa11bc87",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    //return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2020,
        "y": 640,
        "wires": [
            [
                "5cc8733da4998be8",
                "2bd25cc75099d323"
            ]
        ]
    },
    {
        "id": "f83d7d888583d536",
        "type": "function",
        "z": "3e719391aa11bc87",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    //return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1980,
        "y": 740,
        "wires": [
            [
                "a8881b4fd00e3f41",
                "7773bbe4b58ffb84"
            ]
        ]
    },
    {
        "id": "6a66b0672ba116ec",
        "type": "function",
        "z": "3e719391aa11bc87",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    //return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2000,
        "y": 840,
        "wires": [
            [
                "09a19e13e0be8a03",
                "fd587b87a65c95ae"
            ]
        ]
    },
    {
        "id": "9e3a95a1b1cece6c",
        "type": "function",
        "z": "3e719391aa11bc87",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    //return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1980,
        "y": 940,
        "wires": [
            [
                "770e4abfb5585ce7",
                "4f263756b8431232"
            ]
        ]
    },
    {
        "id": "4f0d96e4069afc54",
        "type": "change",
        "z": "3e719391aa11bc87",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "bool",
                "to": "Yes",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "bool",
                "to": "No",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2180,
        "y": 240,
        "wires": [
            [
                "58bb2cfbb825b18a"
            ]
        ]
    },
    {
        "id": "e3cc3443902dd46d",
        "type": "change",
        "z": "3e719391aa11bc87",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "bool",
                "to": "Yes",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "bool",
                "to": "No",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2220,
        "y": 340,
        "wires": [
            [
                "97ca74b2738e16b4"
            ]
        ]
    },
    {
        "id": "795f2dedea2ef062",
        "type": "change",
        "z": "3e719391aa11bc87",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "bool",
                "to": "Yes",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "bool",
                "to": "No",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2220,
        "y": 440,
        "wires": [
            [
                "699516131888f8b4"
            ]
        ]
    },
    {
        "id": "6aef386568680272",
        "type": "change",
        "z": "3e719391aa11bc87",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "bool",
                "to": "Yes",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "bool",
                "to": "No",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2200,
        "y": 540,
        "wires": [
            [
                "6d2c3e3be84c44dd"
            ]
        ]
    },
    {
        "id": "5cc8733da4998be8",
        "type": "change",
        "z": "3e719391aa11bc87",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "bool",
                "to": "Yes",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "bool",
                "to": "No",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2200,
        "y": 640,
        "wires": [
            [
                "68eb7156aca3a01e"
            ]
        ]
    },
    {
        "id": "a8881b4fd00e3f41",
        "type": "change",
        "z": "3e719391aa11bc87",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "bool",
                "to": "Enable",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "bool",
                "to": "Disable",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2160,
        "y": 740,
        "wires": [
            [
                "620951222bec1691"
            ]
        ]
    },
    {
        "id": "09a19e13e0be8a03",
        "type": "change",
        "z": "3e719391aa11bc87",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "bool",
                "to": "Triggered",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "bool",
                "to": "Restored",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2180,
        "y": 840,
        "wires": [
            [
                "401e741a7a9c7409"
            ]
        ]
    },
    {
        "id": "770e4abfb5585ce7",
        "type": "change",
        "z": "3e719391aa11bc87",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "bool",
                "to": "Triggered",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "bool",
                "to": "Restored",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2160,
        "y": 940,
        "wires": [
            [
                "f390292b7dbb6a48"
            ]
        ]
    },
    {
        "id": "58bb2cfbb825b18a",
        "type": "ui_text",
        "z": "3e719391aa11bc87",
        "group": "143fc83b76fb46b8",
        "order": 6,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Error or Not",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 2370,
        "y": 240,
        "wires": []
    },
    {
        "id": "97ca74b2738e16b4",
        "type": "ui_text",
        "z": "3e719391aa11bc87",
        "group": "143fc83b76fb46b8",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Project Running or Not",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 2440,
        "y": 340,
        "wires": []
    },
    {
        "id": "699516131888f8b4",
        "type": "ui_text",
        "z": "3e719391aa11bc87",
        "group": "143fc83b76fb46b8",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Project Editing or Not",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 2440,
        "y": 440,
        "wires": []
    },
    {
        "id": "6d2c3e3be84c44dd",
        "type": "ui_text",
        "z": "3e719391aa11bc87",
        "group": "143fc83b76fb46b8",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Project Pause or Not",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 2420,
        "y": 540,
        "wires": []
    },
    {
        "id": "68eb7156aca3a01e",
        "type": "ui_text",
        "z": "3e719391aa11bc87",
        "group": "143fc83b76fb46b8",
        "order": 7,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Get Control or Not",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 2410,
        "y": 640,
        "wires": []
    },
    {
        "id": "620951222bec1691",
        "type": "ui_text",
        "z": "3e719391aa11bc87",
        "group": "143fc83b76fb46b8",
        "order": 8,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Light on or not",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 2360,
        "y": 740,
        "wires": []
    },
    {
        "id": "401e741a7a9c7409",
        "type": "ui_text",
        "z": "3e719391aa11bc87",
        "group": "143fc83b76fb46b8",
        "order": 9,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Safety IO or not",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 2380,
        "y": 840,
        "wires": []
    },
    {
        "id": "f390292b7dbb6a48",
        "type": "ui_text",
        "z": "3e719391aa11bc87",
        "group": "143fc83b76fb46b8",
        "order": 10,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "E-Stop or not",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 2350,
        "y": 940,
        "wires": []
    },
    {
        "id": "7b2980b64d9f93dd",
        "type": "modbus-read",
        "z": "3e719391aa11bc87",
        "name": "Project Running Speed",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "InputRegister",
        "adr": "7101",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "790b46a78b33b4e0",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 1840,
        "y": 1040,
        "wires": [
            [
                "266b70c6be134552",
                "f4d7a87175ebfd49"
            ],
            []
        ]
    },
    {
        "id": "d322fb310085f4cb",
        "type": "modbus-read",
        "z": "3e719391aa11bc87",
        "name": "M/A Mode",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "InputRegister",
        "adr": "7102",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "790b46a78b33b4e0",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 1800,
        "y": 1140,
        "wires": [
            [
                "d12308880e5033d3",
                "9e19e059208b95a6"
            ],
            []
        ]
    },
    {
        "id": "266b70c6be134552",
        "type": "function",
        "z": "3e719391aa11bc87",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    //return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2060,
        "y": 1040,
        "wires": [
            [
                "e738a4f5d5a299dd",
                "f6092d13b98145ca"
            ]
        ]
    },
    {
        "id": "d12308880e5033d3",
        "type": "function",
        "z": "3e719391aa11bc87",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    //return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1980,
        "y": 1140,
        "wires": [
            [
                "a49b6dc9c4ed2905",
                "e33c8793f863eba7"
            ]
        ]
    },
    {
        "id": "e738a4f5d5a299dd",
        "type": "ui_gauge",
        "z": "3e719391aa11bc87",
        "name": "",
        "group": "143fc83b76fb46b8",
        "order": 1,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Speed",
        "label": "%",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 2230,
        "y": 1040,
        "wires": []
    },
    {
        "id": "c74dc5203413aec5",
        "type": "ui_text",
        "z": "3e719391aa11bc87",
        "group": "143fc83b76fb46b8",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Robot Mode : ",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 2320,
        "y": 1140,
        "wires": []
    },
    {
        "id": "a49b6dc9c4ed2905",
        "type": "change",
        "z": "3e719391aa11bc87",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "1",
                "fromt": "num",
                "to": "Automatic",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "2",
                "fromt": "num",
                "to": "Manual",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2140,
        "y": 1140,
        "wires": [
            [
                "c74dc5203413aec5"
            ]
        ]
    },
    {
        "id": "9be171ab6c55e09b",
        "type": "debug",
        "z": "3e719391aa11bc87",
        "name": "debug 82",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2000,
        "y": 200,
        "wires": []
    },
    {
        "id": "e6796930186e28a8",
        "type": "debug",
        "z": "3e719391aa11bc87",
        "name": "debug 83",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2160,
        "y": 200,
        "wires": []
    },
    {
        "id": "1ae1cbeefc10d5bf",
        "type": "debug",
        "z": "3e719391aa11bc87",
        "name": "debug 84",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2040,
        "y": 300,
        "wires": []
    },
    {
        "id": "f0d7dcb9b8a2d5c4",
        "type": "debug",
        "z": "3e719391aa11bc87",
        "name": "debug 85",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2200,
        "y": 300,
        "wires": []
    },
    {
        "id": "4477a80c91a04b61",
        "type": "debug",
        "z": "3e719391aa11bc87",
        "name": "debug 86",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2040,
        "y": 400,
        "wires": []
    },
    {
        "id": "ebb117e904a642d5",
        "type": "debug",
        "z": "3e719391aa11bc87",
        "name": "debug 87",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2200,
        "y": 400,
        "wires": []
    },
    {
        "id": "130de91c2a2620cd",
        "type": "debug",
        "z": "3e719391aa11bc87",
        "name": "debug 88",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2020,
        "y": 500,
        "wires": []
    },
    {
        "id": "1113c27a95f683fb",
        "type": "debug",
        "z": "3e719391aa11bc87",
        "name": "debug 89",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2180,
        "y": 500,
        "wires": []
    },
    {
        "id": "78e01ff13b10e45f",
        "type": "debug",
        "z": "3e719391aa11bc87",
        "name": "debug 90",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2020,
        "y": 600,
        "wires": []
    },
    {
        "id": "2bd25cc75099d323",
        "type": "debug",
        "z": "3e719391aa11bc87",
        "name": "debug 91",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2180,
        "y": 600,
        "wires": []
    },
    {
        "id": "4385a68f1c70e787",
        "type": "debug",
        "z": "3e719391aa11bc87",
        "name": "debug 92",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1980,
        "y": 700,
        "wires": []
    },
    {
        "id": "7773bbe4b58ffb84",
        "type": "debug",
        "z": "3e719391aa11bc87",
        "name": "debug 93",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2140,
        "y": 700,
        "wires": []
    },
    {
        "id": "b6c7b4100792a25f",
        "type": "debug",
        "z": "3e719391aa11bc87",
        "name": "debug 94",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2000,
        "y": 800,
        "wires": []
    },
    {
        "id": "fd587b87a65c95ae",
        "type": "debug",
        "z": "3e719391aa11bc87",
        "name": "debug 95",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2160,
        "y": 800,
        "wires": []
    },
    {
        "id": "a7a754431f51e87e",
        "type": "debug",
        "z": "3e719391aa11bc87",
        "name": "debug 96",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1980,
        "y": 900,
        "wires": []
    },
    {
        "id": "4f263756b8431232",
        "type": "debug",
        "z": "3e719391aa11bc87",
        "name": "debug 97",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2140,
        "y": 900,
        "wires": []
    },
    {
        "id": "f4d7a87175ebfd49",
        "type": "debug",
        "z": "3e719391aa11bc87",
        "name": "debug 98",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2060,
        "y": 1000,
        "wires": []
    },
    {
        "id": "f6092d13b98145ca",
        "type": "debug",
        "z": "3e719391aa11bc87",
        "name": "debug 99",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2220,
        "y": 1000,
        "wires": []
    },
    {
        "id": "9e19e059208b95a6",
        "type": "debug",
        "z": "3e719391aa11bc87",
        "name": "debug 100",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1990,
        "y": 1100,
        "wires": []
    },
    {
        "id": "e33c8793f863eba7",
        "type": "debug",
        "z": "3e719391aa11bc87",
        "name": "debug 101",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2150,
        "y": 1100,
        "wires": []
    },
    {
        "id": "158e5c413305b7a5",
        "type": "modbus-read",
        "z": "3e719391aa11bc87",
        "name": "Robot Light Status",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "InputRegister",
        "adr": "7332",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "790b46a78b33b4e0",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 1830,
        "y": 1240,
        "wires": [
            [
                "3f73a14a55aed8c7",
                "cee8fbc7a51eda4d"
            ],
            []
        ]
    },
    {
        "id": "cee8fbc7a51eda4d",
        "type": "function",
        "z": "3e719391aa11bc87",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    //return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2020,
        "y": 1240,
        "wires": [
            [
                "81e48c6927f32520",
                "dc233e5894366c3b"
            ]
        ]
    },
    {
        "id": "3c2ad370513d38d8",
        "type": "ui_text",
        "z": "3e719391aa11bc87",
        "group": "143fc83b76fb46b8",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Robot Light Status : ",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 2410,
        "y": 1240,
        "wires": []
    },
    {
        "id": "81e48c6927f32520",
        "type": "change",
        "z": "3e719391aa11bc87",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "1",
                "fromt": "num",
                "to": "Solid Red, fatal error.",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "2",
                "fromt": "num",
                "to": "Flashing Red, Robot is initializing.",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "3",
                "fromt": "num",
                "to": "Solid Blue, standby in Auto Mode. ",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "4",
                "fromt": "num",
                "to": "Flashing Blue, in Auto Mode.",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "5",
                "fromt": "num",
                "to": "Solid Green, standby in Manual Mode. ",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "6",
                "fromt": "num",
                "to": "Flashing Green, in Manual Mode.",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "9",
                "fromt": "num",
                "to": "Alternating Blue&Red, Auto Mode error. ",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "10",
                "fromt": "num",
                "to": "Alternating Green&Red, Manual Mode  error.",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "13",
                "fromt": "num",
                "to": "Alternating Purple&Green, in Manual  Mode ( User Connected External Safeguard  Input Port for Human - Machine Safety Settings trigger).",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "14",
                "fromt": "num",
                "to": "Alternating Purple&Blue, in Auto Mode  ( User Connected External Safeguard Input  Port for Human - Machine Safety Settings  trigger).",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "17",
                "fromt": "num",
                "to": "Alternating White&Green, in Manual  Mode & Reduced Space.",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "18",
                "fromt": "num",
                "to": "Alternating White&Blue, in Auto Mode &  Reduced Space.",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2210,
        "y": 1240,
        "wires": [
            [
                "3c2ad370513d38d8"
            ]
        ]
    },
    {
        "id": "3f73a14a55aed8c7",
        "type": "debug",
        "z": "3e719391aa11bc87",
        "name": "debug 102",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2030,
        "y": 1200,
        "wires": []
    },
    {
        "id": "dc233e5894366c3b",
        "type": "debug",
        "z": "3e719391aa11bc87",
        "name": "debug 103",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2210,
        "y": 1200,
        "wires": []
    },
    {
        "id": "d0cf819ce26dff9a",
        "type": "ui_button",
        "z": "3e719391aa11bc87",
        "name": "",
        "group": "45f726a5a6b56c1d",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Play/Pause",
        "tooltip": "",
        "color": "",
        "bgcolor": "Orange",
        "className": "",
        "icon": "",
        "payload": "true",
        "payloadType": "bool",
        "topic": "topic",
        "topicType": "msg",
        "x": 2750,
        "y": 240,
        "wires": [
            [
                "390c16a204619084"
            ]
        ]
    },
    {
        "id": "3d739b27052ab31a",
        "type": "ui_button",
        "z": "3e719391aa11bc87",
        "name": "",
        "group": "45f726a5a6b56c1d",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Stop",
        "tooltip": "",
        "color": "",
        "bgcolor": "Red",
        "className": "",
        "icon": "",
        "payload": "true",
        "payloadType": "bool",
        "topic": "topic",
        "topicType": "msg",
        "x": 2730,
        "y": 320,
        "wires": [
            [
                "d5c9c26e23388be3"
            ]
        ]
    },
    {
        "id": "a23515a71b18b8ad",
        "type": "ui_button",
        "z": "3e719391aa11bc87",
        "name": "",
        "group": "45f726a5a6b56c1d",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Stick+",
        "tooltip": "",
        "color": "",
        "bgcolor": "blue",
        "className": "",
        "icon": "",
        "payload": "true",
        "payloadType": "bool",
        "topic": "topic",
        "topicType": "msg",
        "x": 2730,
        "y": 400,
        "wires": [
            [
                "bbf45d9f4198d8e8"
            ]
        ]
    },
    {
        "id": "c62678524a50370d",
        "type": "ui_button",
        "z": "3e719391aa11bc87",
        "name": "",
        "group": "45f726a5a6b56c1d",
        "order": 16,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Stick-",
        "tooltip": "",
        "color": "",
        "bgcolor": "blue",
        "className": "",
        "icon": "",
        "payload": "true",
        "payloadType": "bool",
        "topic": "topic",
        "topicType": "msg",
        "x": 2730,
        "y": 480,
        "wires": [
            [
                "35ce3aa893bb6633"
            ]
        ]
    },
    {
        "id": "390c16a204619084",
        "type": "modbus-write",
        "z": "3e719391aa11bc87",
        "name": "Play/Pause",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "7104",
        "quantity": "1",
        "server": "790b46a78b33b4e0",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 2950,
        "y": 240,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "d5c9c26e23388be3",
        "type": "modbus-write",
        "z": "3e719391aa11bc87",
        "name": "Stop",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "7105",
        "quantity": "1",
        "server": "790b46a78b33b4e0",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 2890,
        "y": 320,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "bbf45d9f4198d8e8",
        "type": "modbus-write",
        "z": "3e719391aa11bc87",
        "name": "Stick+",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "7106",
        "quantity": "1",
        "server": "790b46a78b33b4e0",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 2890,
        "y": 400,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "35ce3aa893bb6633",
        "type": "modbus-write",
        "z": "3e719391aa11bc87",
        "name": "Stick-",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "7107",
        "quantity": "1",
        "server": "f5e59be3ef794208",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 2890,
        "y": 480,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "dec96022c3ea5fe5",
        "type": "comment",
        "z": "3e719391aa11bc87",
        "name": "Robot Stick",
        "info": "# This is Robot Stick Setting",
        "x": 2730,
        "y": 180,
        "wires": []
    },
    {
        "id": "8ed4423676b6f9b5",
        "type": "ui_switch",
        "z": "650b7b59c9d93975",
        "name": "",
        "label": "DO 0 : ",
        "tooltip": "",
        "group": "15e91c6a49858dbe",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 510,
        "y": 240,
        "wires": [
            [
                "909a6a58514a72a6",
                "3eadef4c29575c3e"
            ]
        ]
    },
    {
        "id": "571bb984bd618e02",
        "type": "ui_switch",
        "z": "650b7b59c9d93975",
        "name": "",
        "label": "DO 1 : ",
        "tooltip": "",
        "group": "15e91c6a49858dbe",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 510,
        "y": 340,
        "wires": [
            [
                "d1ee1aa6d9c6525c",
                "277536916d706c5a"
            ]
        ]
    },
    {
        "id": "14519ac53e59e01e",
        "type": "ui_switch",
        "z": "650b7b59c9d93975",
        "name": "",
        "label": "DO 2 : ",
        "tooltip": "",
        "group": "15e91c6a49858dbe",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 510,
        "y": 440,
        "wires": [
            [
                "6b3d04ded26f96af",
                "12ecb018818b6803"
            ]
        ]
    },
    {
        "id": "8baa0c02be632408",
        "type": "ui_switch",
        "z": "650b7b59c9d93975",
        "name": "",
        "label": "DO 3 : ",
        "tooltip": "",
        "group": "15e91c6a49858dbe",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 510,
        "y": 540,
        "wires": [
            [
                "1710e33c2ea7f044",
                "9fd931b7d44089f2"
            ]
        ]
    },
    {
        "id": "9ab576e3a62ffa96",
        "type": "ui_switch",
        "z": "650b7b59c9d93975",
        "name": "",
        "label": "DO 4 : ",
        "tooltip": "",
        "group": "15e91c6a49858dbe",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 510,
        "y": 640,
        "wires": [
            [
                "28ab66814a36abd8",
                "fdedc0769d754d0f"
            ]
        ]
    },
    {
        "id": "e2e470a244610908",
        "type": "ui_switch",
        "z": "650b7b59c9d93975",
        "name": "",
        "label": "DO 5 : ",
        "tooltip": "",
        "group": "15e91c6a49858dbe",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 510,
        "y": 740,
        "wires": [
            [
                "fda8e6af228dc46b",
                "34323c3ac9b47ef2"
            ]
        ]
    },
    {
        "id": "44bdf281e5a2ff98",
        "type": "ui_switch",
        "z": "650b7b59c9d93975",
        "name": "",
        "label": "DO 6 : ",
        "tooltip": "",
        "group": "15e91c6a49858dbe",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 510,
        "y": 840,
        "wires": [
            [
                "320316b1769e35f0",
                "43d0519f98b3a689"
            ]
        ]
    },
    {
        "id": "67ad879c8f6f1041",
        "type": "ui_switch",
        "z": "650b7b59c9d93975",
        "name": "",
        "label": "DO 7 : ",
        "tooltip": "",
        "group": "15e91c6a49858dbe",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 510,
        "y": 940,
        "wires": [
            [
                "ef8b26c0d3ad61fe",
                "57adecddbd3f151a"
            ]
        ]
    },
    {
        "id": "172e87df5fb60bed",
        "type": "ui_switch",
        "z": "650b7b59c9d93975",
        "name": "",
        "label": "DO 8 : ",
        "tooltip": "",
        "group": "15e91c6a49858dbe",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 510,
        "y": 1040,
        "wires": [
            [
                "b997ae772e1bbb78",
                "c8b154711e91c7a2"
            ]
        ]
    },
    {
        "id": "e479e12e1091f22e",
        "type": "ui_switch",
        "z": "650b7b59c9d93975",
        "name": "",
        "label": "DO 9 : ",
        "tooltip": "",
        "group": "15e91c6a49858dbe",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 510,
        "y": 1140,
        "wires": [
            [
                "0c90d59ec366326d",
                "b4aff8e273ae3d50"
            ]
        ]
    },
    {
        "id": "97e52e725ef3f0d8",
        "type": "ui_switch",
        "z": "650b7b59c9d93975",
        "name": "",
        "label": "DO 10 : ",
        "tooltip": "",
        "group": "15e91c6a49858dbe",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 520,
        "y": 1240,
        "wires": [
            [
                "38872763601ba1e6",
                "234d0d29ce09c47b"
            ]
        ]
    },
    {
        "id": "1254fcbc4a436cf1",
        "type": "ui_switch",
        "z": "650b7b59c9d93975",
        "name": "",
        "label": "DO 11 : ",
        "tooltip": "",
        "group": "15e91c6a49858dbe",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 520,
        "y": 1340,
        "wires": [
            [
                "6f3ebc95261afda0",
                "0a2a50caf2c8e455"
            ]
        ]
    },
    {
        "id": "6ea2e5bd43882948",
        "type": "ui_switch",
        "z": "650b7b59c9d93975",
        "name": "",
        "label": "DO 12 : ",
        "tooltip": "",
        "group": "15e91c6a49858dbe",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 520,
        "y": 1440,
        "wires": [
            [
                "b3ae79f93d7c4c9b"
            ]
        ]
    },
    {
        "id": "3213f94d13401982",
        "type": "ui_switch",
        "z": "650b7b59c9d93975",
        "name": "",
        "label": "DO 13 : ",
        "tooltip": "",
        "group": "15e91c6a49858dbe",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 520,
        "y": 1540,
        "wires": [
            [
                "43ebdead8160f003",
                "cb7fd72811f56f4e"
            ]
        ]
    },
    {
        "id": "442e25b797995939",
        "type": "ui_switch",
        "z": "650b7b59c9d93975",
        "name": "",
        "label": "DO 14 : ",
        "tooltip": "",
        "group": "15e91c6a49858dbe",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 520,
        "y": 1640,
        "wires": [
            [
                "7bd0e0552351d4de",
                "4014caa522f7fdf9"
            ]
        ]
    },
    {
        "id": "ce39b74567c0aee3",
        "type": "ui_switch",
        "z": "650b7b59c9d93975",
        "name": "",
        "label": "DO 15 : ",
        "tooltip": "",
        "group": "15e91c6a49858dbe",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 520,
        "y": 1740,
        "wires": [
            [
                "57e17308ab37ba30",
                "cbc448d2e4d67bbd"
            ]
        ]
    },
    {
        "id": "07cb6d33cf490c9c",
        "type": "function",
        "z": "650b7b59c9d93975",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    //return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 240,
        "wires": [
            [
                "00f3aea1ed3fea7d",
                "8ed4423676b6f9b5"
            ]
        ]
    },
    {
        "id": "c0bb69a216bf6090",
        "type": "function",
        "z": "650b7b59c9d93975",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 340,
        "wires": [
            [
                "571bb984bd618e02",
                "8b4654d0bd0efa28"
            ]
        ]
    },
    {
        "id": "3743c8c8993bc558",
        "type": "modbus-read",
        "z": "650b7b59c9d93975",
        "name": "DO 0 Read",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "0",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "633574fbb8c86600",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 180,
        "y": 240,
        "wires": [
            [
                "07cb6d33cf490c9c",
                "ecfb12251924b348"
            ],
            []
        ]
    },
    {
        "id": "7d963004a03a63ab",
        "type": "modbus-read",
        "z": "650b7b59c9d93975",
        "name": "DO 1 Read",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "1",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "633574fbb8c86600",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 180,
        "y": 340,
        "wires": [
            [
                "c0bb69a216bf6090",
                "3ca11dc90a886c0f"
            ],
            []
        ]
    },
    {
        "id": "cdc36dafd4d5191d",
        "type": "modbus-read",
        "z": "650b7b59c9d93975",
        "name": "DO 2 Read",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "0",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "633574fbb8c86600",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 180,
        "y": 440,
        "wires": [
            [
                "6e18c40c06c2cf6c",
                "1bd9b899be49806e"
            ],
            []
        ]
    },
    {
        "id": "371a0b28197db17a",
        "type": "modbus-read",
        "z": "650b7b59c9d93975",
        "name": "DO 3 Read",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "3",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "633574fbb8c86600",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 180,
        "y": 540,
        "wires": [
            [
                "693d72d7c838ba4b",
                "644b0d3615ec5a25"
            ],
            []
        ]
    },
    {
        "id": "4341b55170de3727",
        "type": "modbus-read",
        "z": "650b7b59c9d93975",
        "name": "DO 4 Read",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "4",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "633574fbb8c86600",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 180,
        "y": 640,
        "wires": [
            [
                "18fccb84f2b4fdef",
                "8afd791eaf9265e0"
            ],
            []
        ]
    },
    {
        "id": "a31d3d4712ff9282",
        "type": "modbus-read",
        "z": "650b7b59c9d93975",
        "name": "DO 5 Read",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "0",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "633574fbb8c86600",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 180,
        "y": 740,
        "wires": [
            [
                "511b3bdeea8671ea",
                "037cac339b6130b6"
            ],
            []
        ]
    },
    {
        "id": "5c93d7cf9c5050e0",
        "type": "modbus-read",
        "z": "650b7b59c9d93975",
        "name": "DO 6 Read",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "6",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "633574fbb8c86600",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 180,
        "y": 840,
        "wires": [
            [
                "44e497cbe699f439",
                "a32906d95c43b8f4"
            ],
            []
        ]
    },
    {
        "id": "dc247ff5a2e0b435",
        "type": "modbus-read",
        "z": "650b7b59c9d93975",
        "name": "DO 7 Read",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "7",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "633574fbb8c86600",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 180,
        "y": 940,
        "wires": [
            [
                "561df3479f68e35e",
                "18eea7c3b181ffdc"
            ],
            []
        ]
    },
    {
        "id": "9bb618791d8af232",
        "type": "modbus-read",
        "z": "650b7b59c9d93975",
        "name": "DO 8 Read",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "8",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "633574fbb8c86600",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 180,
        "y": 1040,
        "wires": [
            [
                "aefbef729a5b69eb",
                "ce8571ac0b49a516"
            ],
            []
        ]
    },
    {
        "id": "c93937dbf50d783e",
        "type": "modbus-read",
        "z": "650b7b59c9d93975",
        "name": "DO 9 Read",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "9",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "633574fbb8c86600",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 180,
        "y": 1140,
        "wires": [
            [
                "63271707fced7f95",
                "9c9bd64fb4280d90"
            ],
            []
        ]
    },
    {
        "id": "508b3d667b6145f3",
        "type": "modbus-read",
        "z": "650b7b59c9d93975",
        "name": "DO 10 Read",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "10",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "633574fbb8c86600",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 190,
        "y": 1240,
        "wires": [
            [
                "a608e6849d7a42ca",
                "6b67fadc2d9f8b9d"
            ],
            []
        ]
    },
    {
        "id": "5dbab40eb3f02ac1",
        "type": "modbus-read",
        "z": "650b7b59c9d93975",
        "name": "DO 11 Read",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "11",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "633574fbb8c86600",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 190,
        "y": 1340,
        "wires": [
            [
                "9954f18b4b2d74d1",
                "f28242be3c39dfee"
            ],
            []
        ]
    },
    {
        "id": "cbd377a8e1cbe686",
        "type": "modbus-read",
        "z": "650b7b59c9d93975",
        "name": "DO 12 Read",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "12",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "633574fbb8c86600",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 190,
        "y": 1440,
        "wires": [
            [
                "6a4013cd0e3a9647"
            ],
            []
        ]
    },
    {
        "id": "b90ea3c61c99017f",
        "type": "modbus-read",
        "z": "650b7b59c9d93975",
        "name": "DO 13 Read",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "13",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "633574fbb8c86600",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 190,
        "y": 1540,
        "wires": [
            [
                "6b41e43e444200dd",
                "0e33587d44436986"
            ],
            []
        ]
    },
    {
        "id": "269830ab50131b72",
        "type": "modbus-read",
        "z": "650b7b59c9d93975",
        "name": "DO 14 Read",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "14",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "633574fbb8c86600",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 190,
        "y": 1640,
        "wires": [
            [
                "c92464f5c06ff1ae",
                "3865a8156da68104"
            ],
            []
        ]
    },
    {
        "id": "d82fbb5bc81d6cde",
        "type": "modbus-read",
        "z": "650b7b59c9d93975",
        "name": "DO 15 Read",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "15",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "633574fbb8c86600",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 190,
        "y": 1740,
        "wires": [
            [
                "02b3e881c63a558d",
                "a4641c108cb426d6"
            ],
            []
        ]
    },
    {
        "id": "6e18c40c06c2cf6c",
        "type": "function",
        "z": "650b7b59c9d93975",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 440,
        "wires": [
            [
                "14519ac53e59e01e",
                "c1254310ee5070d5"
            ]
        ]
    },
    {
        "id": "693d72d7c838ba4b",
        "type": "function",
        "z": "650b7b59c9d93975",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 540,
        "wires": [
            [
                "8baa0c02be632408",
                "ee9cc401f876ca2c"
            ]
        ]
    },
    {
        "id": "18fccb84f2b4fdef",
        "type": "function",
        "z": "650b7b59c9d93975",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 640,
        "wires": [
            [
                "9ab576e3a62ffa96",
                "48416a853230ec91"
            ]
        ]
    },
    {
        "id": "511b3bdeea8671ea",
        "type": "function",
        "z": "650b7b59c9d93975",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 740,
        "wires": [
            [
                "e2e470a244610908",
                "32e06c1f4a33a022"
            ]
        ]
    },
    {
        "id": "44e497cbe699f439",
        "type": "function",
        "z": "650b7b59c9d93975",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 840,
        "wires": [
            [
                "44bdf281e5a2ff98",
                "cc5034e314ad9720"
            ]
        ]
    },
    {
        "id": "561df3479f68e35e",
        "type": "function",
        "z": "650b7b59c9d93975",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 940,
        "wires": [
            [
                "67ad879c8f6f1041",
                "c87d222703f748bf"
            ]
        ]
    },
    {
        "id": "aefbef729a5b69eb",
        "type": "function",
        "z": "650b7b59c9d93975",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 1040,
        "wires": [
            [
                "172e87df5fb60bed",
                "a4cf0eb334710977"
            ]
        ]
    },
    {
        "id": "63271707fced7f95",
        "type": "function",
        "z": "650b7b59c9d93975",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 1140,
        "wires": [
            [
                "e479e12e1091f22e",
                "12db9bdf613497de"
            ]
        ]
    },
    {
        "id": "a608e6849d7a42ca",
        "type": "function",
        "z": "650b7b59c9d93975",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 1240,
        "wires": [
            [
                "97e52e725ef3f0d8",
                "9cd882dcce25d97f"
            ]
        ]
    },
    {
        "id": "9954f18b4b2d74d1",
        "type": "function",
        "z": "650b7b59c9d93975",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 1340,
        "wires": [
            [
                "1254fcbc4a436cf1",
                "cefa1eb2a79927bb"
            ]
        ]
    },
    {
        "id": "6a4013cd0e3a9647",
        "type": "function",
        "z": "650b7b59c9d93975",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 1440,
        "wires": [
            [
                "6ea2e5bd43882948"
            ]
        ]
    },
    {
        "id": "6b41e43e444200dd",
        "type": "function",
        "z": "650b7b59c9d93975",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 1540,
        "wires": [
            [
                "3213f94d13401982",
                "6b212e3746632ee2"
            ]
        ]
    },
    {
        "id": "c92464f5c06ff1ae",
        "type": "function",
        "z": "650b7b59c9d93975",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 1640,
        "wires": [
            [
                "442e25b797995939",
                "21464a95fc6f356e"
            ]
        ]
    },
    {
        "id": "02b3e881c63a558d",
        "type": "function",
        "z": "650b7b59c9d93975",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 1740,
        "wires": [
            [
                "ce39b74567c0aee3",
                "7b5c6e62e0566ab3"
            ]
        ]
    },
    {
        "id": "909a6a58514a72a6",
        "type": "modbus-write",
        "z": "650b7b59c9d93975",
        "name": "DO 0 Write",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "0",
        "quantity": "1",
        "server": "790b46a78b33b4e0",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 670,
        "y": 240,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "d1ee1aa6d9c6525c",
        "type": "modbus-write",
        "z": "650b7b59c9d93975",
        "name": "DO 1 Write",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "1",
        "quantity": "1",
        "server": "790b46a78b33b4e0",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 670,
        "y": 340,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "6b3d04ded26f96af",
        "type": "modbus-write",
        "z": "650b7b59c9d93975",
        "name": "DO 2 Write",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "2",
        "quantity": "1",
        "server": "790b46a78b33b4e0",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 670,
        "y": 440,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "1710e33c2ea7f044",
        "type": "modbus-write",
        "z": "650b7b59c9d93975",
        "name": "DO 3 Write",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "3",
        "quantity": "1",
        "server": "790b46a78b33b4e0",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 670,
        "y": 540,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "28ab66814a36abd8",
        "type": "modbus-write",
        "z": "650b7b59c9d93975",
        "name": "DO 4 Write",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "4",
        "quantity": "1",
        "server": "790b46a78b33b4e0",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 670,
        "y": 640,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "fda8e6af228dc46b",
        "type": "modbus-write",
        "z": "650b7b59c9d93975",
        "name": "DO 5 Write",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "5",
        "quantity": "1",
        "server": "790b46a78b33b4e0",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 670,
        "y": 740,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "320316b1769e35f0",
        "type": "modbus-write",
        "z": "650b7b59c9d93975",
        "name": "DO 6 Write",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "6",
        "quantity": "1",
        "server": "790b46a78b33b4e0",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 670,
        "y": 840,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "ef8b26c0d3ad61fe",
        "type": "modbus-write",
        "z": "650b7b59c9d93975",
        "name": "DO 7 Write",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "7",
        "quantity": "1",
        "server": "790b46a78b33b4e0",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 670,
        "y": 940,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "b997ae772e1bbb78",
        "type": "modbus-write",
        "z": "650b7b59c9d93975",
        "name": "DO 8 Write",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "8",
        "quantity": "1",
        "server": "790b46a78b33b4e0",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 670,
        "y": 1040,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "0c90d59ec366326d",
        "type": "modbus-write",
        "z": "650b7b59c9d93975",
        "name": "DO 9 Write",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "9",
        "quantity": "1",
        "server": "790b46a78b33b4e0",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 670,
        "y": 1140,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "38872763601ba1e6",
        "type": "modbus-write",
        "z": "650b7b59c9d93975",
        "name": "DO 10 Write",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "10",
        "quantity": "1",
        "server": "790b46a78b33b4e0",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 670,
        "y": 1240,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "6f3ebc95261afda0",
        "type": "modbus-write",
        "z": "650b7b59c9d93975",
        "name": "DO 11 Write",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "11",
        "quantity": "1",
        "server": "790b46a78b33b4e0",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 670,
        "y": 1340,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "b3ae79f93d7c4c9b",
        "type": "modbus-write",
        "z": "650b7b59c9d93975",
        "name": "DO 12 Write",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "12",
        "quantity": "1",
        "server": "790b46a78b33b4e0",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 670,
        "y": 1440,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "43ebdead8160f003",
        "type": "modbus-write",
        "z": "650b7b59c9d93975",
        "name": "DO 13 Write",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "13",
        "quantity": "1",
        "server": "790b46a78b33b4e0",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 670,
        "y": 1540,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "7bd0e0552351d4de",
        "type": "modbus-write",
        "z": "650b7b59c9d93975",
        "name": "DO 14 Write",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "14",
        "quantity": "1",
        "server": "790b46a78b33b4e0",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 670,
        "y": 1640,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "57e17308ab37ba30",
        "type": "modbus-write",
        "z": "650b7b59c9d93975",
        "name": "DO 15 Write",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "15",
        "quantity": "1",
        "server": "790b46a78b33b4e0",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 670,
        "y": 1740,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "00f3aea1ed3fea7d",
        "type": "debug",
        "z": "650b7b59c9d93975",
        "name": "debug 105",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 520,
        "y": 200,
        "wires": []
    },
    {
        "id": "ecfb12251924b348",
        "type": "debug",
        "z": "650b7b59c9d93975",
        "name": "debug 106",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 360,
        "y": 200,
        "wires": []
    },
    {
        "id": "1ddc65c866a968d3",
        "type": "comment",
        "z": "650b7b59c9d93975",
        "name": "ControlBox DO Robot",
        "info": "# This is ControlBox Output Setting",
        "x": 200,
        "y": 160,
        "wires": []
    },
    {
        "id": "3eadef4c29575c3e",
        "type": "debug",
        "z": "650b7b59c9d93975",
        "name": "debug 107",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 680,
        "y": 200,
        "wires": []
    },
    {
        "id": "8b4654d0bd0efa28",
        "type": "debug",
        "z": "650b7b59c9d93975",
        "name": "debug 108",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 520,
        "y": 300,
        "wires": []
    },
    {
        "id": "3ca11dc90a886c0f",
        "type": "debug",
        "z": "650b7b59c9d93975",
        "name": "debug 109",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 360,
        "y": 300,
        "wires": []
    },
    {
        "id": "277536916d706c5a",
        "type": "debug",
        "z": "650b7b59c9d93975",
        "name": "debug 110",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 680,
        "y": 300,
        "wires": []
    },
    {
        "id": "c1254310ee5070d5",
        "type": "debug",
        "z": "650b7b59c9d93975",
        "name": "debug 111",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 520,
        "y": 400,
        "wires": []
    },
    {
        "id": "1bd9b899be49806e",
        "type": "debug",
        "z": "650b7b59c9d93975",
        "name": "debug 112",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 360,
        "y": 400,
        "wires": []
    },
    {
        "id": "12ecb018818b6803",
        "type": "debug",
        "z": "650b7b59c9d93975",
        "name": "debug 113",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 680,
        "y": 400,
        "wires": []
    },
    {
        "id": "ee9cc401f876ca2c",
        "type": "debug",
        "z": "650b7b59c9d93975",
        "name": "debug 114",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 520,
        "y": 500,
        "wires": []
    },
    {
        "id": "644b0d3615ec5a25",
        "type": "debug",
        "z": "650b7b59c9d93975",
        "name": "debug 115",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 360,
        "y": 500,
        "wires": []
    },
    {
        "id": "9fd931b7d44089f2",
        "type": "debug",
        "z": "650b7b59c9d93975",
        "name": "debug 116",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 680,
        "y": 500,
        "wires": []
    },
    {
        "id": "48416a853230ec91",
        "type": "debug",
        "z": "650b7b59c9d93975",
        "name": "debug 117",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 520,
        "y": 600,
        "wires": []
    },
    {
        "id": "8afd791eaf9265e0",
        "type": "debug",
        "z": "650b7b59c9d93975",
        "name": "debug 118",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 360,
        "y": 600,
        "wires": []
    },
    {
        "id": "fdedc0769d754d0f",
        "type": "debug",
        "z": "650b7b59c9d93975",
        "name": "debug 119",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 680,
        "y": 600,
        "wires": []
    },
    {
        "id": "32e06c1f4a33a022",
        "type": "debug",
        "z": "650b7b59c9d93975",
        "name": "debug 120",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 520,
        "y": 700,
        "wires": []
    },
    {
        "id": "037cac339b6130b6",
        "type": "debug",
        "z": "650b7b59c9d93975",
        "name": "debug 121",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 360,
        "y": 700,
        "wires": []
    },
    {
        "id": "34323c3ac9b47ef2",
        "type": "debug",
        "z": "650b7b59c9d93975",
        "name": "debug 122",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 680,
        "y": 700,
        "wires": []
    },
    {
        "id": "cc5034e314ad9720",
        "type": "debug",
        "z": "650b7b59c9d93975",
        "name": "debug 123",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 520,
        "y": 800,
        "wires": []
    },
    {
        "id": "a32906d95c43b8f4",
        "type": "debug",
        "z": "650b7b59c9d93975",
        "name": "debug 124",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 360,
        "y": 800,
        "wires": []
    },
    {
        "id": "43d0519f98b3a689",
        "type": "debug",
        "z": "650b7b59c9d93975",
        "name": "debug 125",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 680,
        "y": 800,
        "wires": []
    },
    {
        "id": "c87d222703f748bf",
        "type": "debug",
        "z": "650b7b59c9d93975",
        "name": "debug 126",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 520,
        "y": 900,
        "wires": []
    },
    {
        "id": "18eea7c3b181ffdc",
        "type": "debug",
        "z": "650b7b59c9d93975",
        "name": "debug 127",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 360,
        "y": 900,
        "wires": []
    },
    {
        "id": "57adecddbd3f151a",
        "type": "debug",
        "z": "650b7b59c9d93975",
        "name": "debug 128",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 680,
        "y": 900,
        "wires": []
    },
    {
        "id": "a4cf0eb334710977",
        "type": "debug",
        "z": "650b7b59c9d93975",
        "name": "debug 129",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 520,
        "y": 1000,
        "wires": []
    },
    {
        "id": "ce8571ac0b49a516",
        "type": "debug",
        "z": "650b7b59c9d93975",
        "name": "debug 130",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 360,
        "y": 1000,
        "wires": []
    },
    {
        "id": "c8b154711e91c7a2",
        "type": "debug",
        "z": "650b7b59c9d93975",
        "name": "debug 131",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 680,
        "y": 1000,
        "wires": []
    },
    {
        "id": "12db9bdf613497de",
        "type": "debug",
        "z": "650b7b59c9d93975",
        "name": "debug 132",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 520,
        "y": 1100,
        "wires": []
    },
    {
        "id": "9c9bd64fb4280d90",
        "type": "debug",
        "z": "650b7b59c9d93975",
        "name": "debug 133",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 360,
        "y": 1100,
        "wires": []
    },
    {
        "id": "b4aff8e273ae3d50",
        "type": "debug",
        "z": "650b7b59c9d93975",
        "name": "debug 134",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 680,
        "y": 1100,
        "wires": []
    },
    {
        "id": "9cd882dcce25d97f",
        "type": "debug",
        "z": "650b7b59c9d93975",
        "name": "debug 135",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 520,
        "y": 1200,
        "wires": []
    },
    {
        "id": "6b67fadc2d9f8b9d",
        "type": "debug",
        "z": "650b7b59c9d93975",
        "name": "debug 136",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 360,
        "y": 1200,
        "wires": []
    },
    {
        "id": "234d0d29ce09c47b",
        "type": "debug",
        "z": "650b7b59c9d93975",
        "name": "debug 137",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 680,
        "y": 1200,
        "wires": []
    },
    {
        "id": "cefa1eb2a79927bb",
        "type": "debug",
        "z": "650b7b59c9d93975",
        "name": "debug 138",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 520,
        "y": 1300,
        "wires": []
    },
    {
        "id": "f28242be3c39dfee",
        "type": "debug",
        "z": "650b7b59c9d93975",
        "name": "debug 139",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 360,
        "y": 1300,
        "wires": []
    },
    {
        "id": "0a2a50caf2c8e455",
        "type": "debug",
        "z": "650b7b59c9d93975",
        "name": "debug 140",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 680,
        "y": 1300,
        "wires": []
    },
    {
        "id": "459a571ee31ca628",
        "type": "debug",
        "z": "650b7b59c9d93975",
        "name": "debug 141",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 520,
        "y": 1400,
        "wires": []
    },
    {
        "id": "2e9b185bda75ec85",
        "type": "debug",
        "z": "650b7b59c9d93975",
        "name": "debug 142",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 360,
        "y": 1400,
        "wires": []
    },
    {
        "id": "a4bd5e7dead6b44b",
        "type": "debug",
        "z": "650b7b59c9d93975",
        "name": "debug 143",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 680,
        "y": 1400,
        "wires": []
    },
    {
        "id": "6b212e3746632ee2",
        "type": "debug",
        "z": "650b7b59c9d93975",
        "name": "debug 144",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 520,
        "y": 1500,
        "wires": []
    },
    {
        "id": "0e33587d44436986",
        "type": "debug",
        "z": "650b7b59c9d93975",
        "name": "debug 145",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 360,
        "y": 1500,
        "wires": []
    },
    {
        "id": "cb7fd72811f56f4e",
        "type": "debug",
        "z": "650b7b59c9d93975",
        "name": "debug 146",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 680,
        "y": 1500,
        "wires": []
    },
    {
        "id": "21464a95fc6f356e",
        "type": "debug",
        "z": "650b7b59c9d93975",
        "name": "debug 147",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 520,
        "y": 1600,
        "wires": []
    },
    {
        "id": "3865a8156da68104",
        "type": "debug",
        "z": "650b7b59c9d93975",
        "name": "debug 148",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 360,
        "y": 1600,
        "wires": []
    },
    {
        "id": "4014caa522f7fdf9",
        "type": "debug",
        "z": "650b7b59c9d93975",
        "name": "debug 149",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 680,
        "y": 1600,
        "wires": []
    },
    {
        "id": "7b5c6e62e0566ab3",
        "type": "debug",
        "z": "650b7b59c9d93975",
        "name": "debug 150",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 520,
        "y": 1700,
        "wires": []
    },
    {
        "id": "a4641c108cb426d6",
        "type": "debug",
        "z": "650b7b59c9d93975",
        "name": "debug 151",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 360,
        "y": 1700,
        "wires": []
    },
    {
        "id": "cbc448d2e4d67bbd",
        "type": "debug",
        "z": "650b7b59c9d93975",
        "name": "debug 152",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 680,
        "y": 1700,
        "wires": []
    },
    {
        "id": "026c9093cb95b037",
        "type": "modbus-read",
        "z": "650b7b59c9d93975",
        "name": "DI 0 Read",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Input",
        "adr": "0",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "633574fbb8c86600",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 920,
        "y": 240,
        "wires": [
            [
                "3d1d1f4e17e63d76",
                "630d2f4cf986c2d8"
            ],
            []
        ]
    },
    {
        "id": "3d1d1f4e17e63d76",
        "type": "function",
        "z": "650b7b59c9d93975",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    //return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1100,
        "y": 240,
        "wires": [
            [
                "2537d27ed7b37da4",
                "aa415832cbb765ec"
            ]
        ]
    },
    {
        "id": "03a16a827cb535cb",
        "type": "modbus-read",
        "z": "650b7b59c9d93975",
        "name": "DI 1 Read",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Input",
        "adr": "1",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "633574fbb8c86600",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 920,
        "y": 340,
        "wires": [
            [
                "c174551e2291cc17",
                "19604fa6dad0d151"
            ],
            []
        ]
    },
    {
        "id": "c174551e2291cc17",
        "type": "function",
        "z": "650b7b59c9d93975",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    //return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1100,
        "y": 340,
        "wires": [
            [
                "cb1aa34bda353d82",
                "f881b54ac574eee8"
            ]
        ]
    },
    {
        "id": "1a4645a9a18fad5f",
        "type": "modbus-read",
        "z": "650b7b59c9d93975",
        "name": "DI 2 Read",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Input",
        "adr": "2",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "633574fbb8c86600",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 920,
        "y": 440,
        "wires": [
            [
                "efb6164a3eb7d48e",
                "90a165ec6d3d5209"
            ],
            []
        ]
    },
    {
        "id": "efb6164a3eb7d48e",
        "type": "function",
        "z": "650b7b59c9d93975",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    //return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1100,
        "y": 440,
        "wires": [
            [
                "1068a140b7e496ee",
                "f90372f5d8e6f668"
            ]
        ]
    },
    {
        "id": "2d11653ea225eeb1",
        "type": "modbus-read",
        "z": "650b7b59c9d93975",
        "name": "DI 3 Read",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Input",
        "adr": "3",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "633574fbb8c86600",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 920,
        "y": 540,
        "wires": [
            [
                "6f589ce0841a49d0",
                "c7b3419e554e0134"
            ],
            []
        ]
    },
    {
        "id": "6f589ce0841a49d0",
        "type": "function",
        "z": "650b7b59c9d93975",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    //return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1100,
        "y": 540,
        "wires": [
            [
                "dde3f3374c44f2aa",
                "f0f031f187ca06a7"
            ]
        ]
    },
    {
        "id": "7f2c3b4ce1349adb",
        "type": "modbus-read",
        "z": "650b7b59c9d93975",
        "name": "DI 4 Read",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Input",
        "adr": "4",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "633574fbb8c86600",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 920,
        "y": 640,
        "wires": [
            [
                "eb4fe78b06a69a5f",
                "2f864aee0f3dec58"
            ],
            []
        ]
    },
    {
        "id": "eb4fe78b06a69a5f",
        "type": "function",
        "z": "650b7b59c9d93975",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    //return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1100,
        "y": 640,
        "wires": [
            [
                "ef16433c90507adc",
                "3e78c5d0c623cb36"
            ]
        ]
    },
    {
        "id": "eca340f311c092e2",
        "type": "modbus-read",
        "z": "650b7b59c9d93975",
        "name": "DI 5 Read",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Input",
        "adr": "5",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "633574fbb8c86600",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 920,
        "y": 740,
        "wires": [
            [
                "962c0947dbb76fa7",
                "ceeba5892d189c0b"
            ],
            []
        ]
    },
    {
        "id": "962c0947dbb76fa7",
        "type": "function",
        "z": "650b7b59c9d93975",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    //return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1100,
        "y": 740,
        "wires": [
            [
                "cbe759433cdf1f10",
                "0ed9d43ab6f41ef4"
            ]
        ]
    },
    {
        "id": "d9b5a19cd00a2a0c",
        "type": "modbus-read",
        "z": "650b7b59c9d93975",
        "name": "DI 6 Read",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Input",
        "adr": "6",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "633574fbb8c86600",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 920,
        "y": 840,
        "wires": [
            [
                "5c6b1d877da42404",
                "6fbd7a99ad3b880b"
            ],
            []
        ]
    },
    {
        "id": "5c6b1d877da42404",
        "type": "function",
        "z": "650b7b59c9d93975",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    //return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1100,
        "y": 840,
        "wires": [
            [
                "c868a54516f1ec9e",
                "ca3558b2e7bfd70e"
            ]
        ]
    },
    {
        "id": "0ed3ab2a3aaa034e",
        "type": "modbus-read",
        "z": "650b7b59c9d93975",
        "name": "DI 7 Read",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Input",
        "adr": "7",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "633574fbb8c86600",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 920,
        "y": 940,
        "wires": [
            [
                "8a77a2f7175f7201",
                "af5f947260686282"
            ],
            []
        ]
    },
    {
        "id": "8a77a2f7175f7201",
        "type": "function",
        "z": "650b7b59c9d93975",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    //return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1100,
        "y": 940,
        "wires": [
            [
                "7bc104f1d32ddf36",
                "875730df5702be54"
            ]
        ]
    },
    {
        "id": "8050b89eb04b4d64",
        "type": "modbus-read",
        "z": "650b7b59c9d93975",
        "name": "DI 8 Read",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Input",
        "adr": "8",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "633574fbb8c86600",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 920,
        "y": 1040,
        "wires": [
            [
                "35cb19354942cbac",
                "0769101e9b8cfd2a"
            ],
            []
        ]
    },
    {
        "id": "35cb19354942cbac",
        "type": "function",
        "z": "650b7b59c9d93975",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    //return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1100,
        "y": 1040,
        "wires": [
            [
                "9b74def1bce0cbcc",
                "e57d95797f85477e"
            ]
        ]
    },
    {
        "id": "d91c7720cc0cd18b",
        "type": "modbus-read",
        "z": "650b7b59c9d93975",
        "name": "DI 9 Read",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Input",
        "adr": "9",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "633574fbb8c86600",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 920,
        "y": 1140,
        "wires": [
            [
                "ed85f4366defe1f0",
                "6ee65508fe01861f"
            ],
            []
        ]
    },
    {
        "id": "ed85f4366defe1f0",
        "type": "function",
        "z": "650b7b59c9d93975",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    //return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1100,
        "y": 1140,
        "wires": [
            [
                "8e498c4ffec95b90",
                "3c227c2675c096de"
            ]
        ]
    },
    {
        "id": "81fab372dcc3f8a5",
        "type": "modbus-read",
        "z": "650b7b59c9d93975",
        "name": "DI 10 Read",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Input",
        "adr": "10",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "633574fbb8c86600",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 930,
        "y": 1240,
        "wires": [
            [
                "c1e75b55ec5dbbcc"
            ],
            []
        ]
    },
    {
        "id": "c1e75b55ec5dbbcc",
        "type": "function",
        "z": "650b7b59c9d93975",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    //return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1100,
        "y": 1240,
        "wires": [
            [
                "d6251afb8c558910"
            ]
        ]
    },
    {
        "id": "7bd133bdbe38e607",
        "type": "modbus-read",
        "z": "650b7b59c9d93975",
        "name": "DI 11 Read",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Input",
        "adr": "11",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "633574fbb8c86600",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 920,
        "y": 1340,
        "wires": [
            [
                "a6c9b28279916af6",
                "ca655292db40c9d1"
            ],
            []
        ]
    },
    {
        "id": "a6c9b28279916af6",
        "type": "function",
        "z": "650b7b59c9d93975",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    //return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1100,
        "y": 1340,
        "wires": [
            [
                "8b9c6eb2e0d50265",
                "764d331052f64e1b"
            ]
        ]
    },
    {
        "id": "e180a078a0d4b22f",
        "type": "modbus-read",
        "z": "650b7b59c9d93975",
        "name": "DI 12 Read",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Input",
        "adr": "12",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "633574fbb8c86600",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 930,
        "y": 1440,
        "wires": [
            [
                "901cc14614fad9e3",
                "dfff9c0e29b5a3e0"
            ],
            []
        ]
    },
    {
        "id": "901cc14614fad9e3",
        "type": "function",
        "z": "650b7b59c9d93975",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    //return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1100,
        "y": 1440,
        "wires": [
            [
                "756db0fcc0f5033d",
                "ceb7bc2085f36c57"
            ]
        ]
    },
    {
        "id": "5d663e140605fd27",
        "type": "modbus-read",
        "z": "650b7b59c9d93975",
        "name": "DI 13 Read",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Input",
        "adr": "13",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "633574fbb8c86600",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 930,
        "y": 1540,
        "wires": [
            [
                "331a871ba9677226",
                "4b9795148eb0283f"
            ],
            []
        ]
    },
    {
        "id": "331a871ba9677226",
        "type": "function",
        "z": "650b7b59c9d93975",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    //return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1100,
        "y": 1540,
        "wires": [
            [
                "3394706edf11045d",
                "fd5d3507f000db7e"
            ]
        ]
    },
    {
        "id": "cb1d11f52886d110",
        "type": "modbus-read",
        "z": "650b7b59c9d93975",
        "name": "DI 14 Read",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Input",
        "adr": "14",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "633574fbb8c86600",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 930,
        "y": 1640,
        "wires": [
            [
                "6118fec83c9f43db",
                "538c10d76df5c5f9"
            ],
            []
        ]
    },
    {
        "id": "6118fec83c9f43db",
        "type": "function",
        "z": "650b7b59c9d93975",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    //return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1100,
        "y": 1640,
        "wires": [
            [
                "67a13ad55d1b1729",
                "fd60086c6458edf5"
            ]
        ]
    },
    {
        "id": "614ecc2c7c01582d",
        "type": "modbus-read",
        "z": "650b7b59c9d93975",
        "name": "DI 15 Read",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Input",
        "adr": "15",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "633574fbb8c86600",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 930,
        "y": 1740,
        "wires": [
            [
                "27045fee5225b4e2",
                "7e89db2856164a6c"
            ],
            []
        ]
    },
    {
        "id": "27045fee5225b4e2",
        "type": "function",
        "z": "650b7b59c9d93975",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    //return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1100,
        "y": 1740,
        "wires": [
            [
                "fe6b2e885eb4776c",
                "6d20afe143fa1827"
            ]
        ]
    },
    {
        "id": "b2f043faf399f831",
        "type": "ui_text",
        "z": "650b7b59c9d93975",
        "group": "672267fe886bf70a",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "DI 0 : ",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1490,
        "y": 240,
        "wires": []
    },
    {
        "id": "2537d27ed7b37da4",
        "type": "change",
        "z": "650b7b59c9d93975",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "bool",
                "to": "Working",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "bool",
                "to": "Not Working",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1300,
        "y": 240,
        "wires": [
            [
                "b2f043faf399f831"
            ]
        ]
    },
    {
        "id": "ff9397d0aa95c7a1",
        "type": "ui_text",
        "z": "650b7b59c9d93975",
        "group": "672267fe886bf70a",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "DI 1 : ",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1490,
        "y": 340,
        "wires": []
    },
    {
        "id": "cb1aa34bda353d82",
        "type": "change",
        "z": "650b7b59c9d93975",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "bool",
                "to": "Working",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "bool",
                "to": "Not Working",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1300,
        "y": 340,
        "wires": [
            [
                "ff9397d0aa95c7a1"
            ]
        ]
    },
    {
        "id": "ac59eb51666990b3",
        "type": "ui_text",
        "z": "650b7b59c9d93975",
        "group": "672267fe886bf70a",
        "order": 16,
        "width": "0",
        "height": "0",
        "name": "",
        "label": "DI 2 : ",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1490,
        "y": 440,
        "wires": []
    },
    {
        "id": "1068a140b7e496ee",
        "type": "change",
        "z": "650b7b59c9d93975",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "bool",
                "to": "Working",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "bool",
                "to": "Not Working",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1300,
        "y": 440,
        "wires": [
            [
                "ac59eb51666990b3"
            ]
        ]
    },
    {
        "id": "5dd585f81a60c8f9",
        "type": "ui_text",
        "z": "650b7b59c9d93975",
        "group": "672267fe886bf70a",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "DI 3 : ",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1490,
        "y": 540,
        "wires": []
    },
    {
        "id": "dde3f3374c44f2aa",
        "type": "change",
        "z": "650b7b59c9d93975",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "bool",
                "to": "Working",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "bool",
                "to": "Not Working",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1300,
        "y": 540,
        "wires": [
            [
                "5dd585f81a60c8f9"
            ]
        ]
    },
    {
        "id": "16f4d219bf2c8c21",
        "type": "ui_text",
        "z": "650b7b59c9d93975",
        "group": "672267fe886bf70a",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "DI 4 : ",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1490,
        "y": 640,
        "wires": []
    },
    {
        "id": "ef16433c90507adc",
        "type": "change",
        "z": "650b7b59c9d93975",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "bool",
                "to": "Working",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "bool",
                "to": "Not Working",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1300,
        "y": 640,
        "wires": [
            [
                "16f4d219bf2c8c21"
            ]
        ]
    },
    {
        "id": "5bc7b055cf631384",
        "type": "ui_text",
        "z": "650b7b59c9d93975",
        "group": "672267fe886bf70a",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "DI 5 : ",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1490,
        "y": 740,
        "wires": []
    },
    {
        "id": "cbe759433cdf1f10",
        "type": "change",
        "z": "650b7b59c9d93975",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "bool",
                "to": "Working",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "bool",
                "to": "Not Working",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1300,
        "y": 740,
        "wires": [
            [
                "5bc7b055cf631384"
            ]
        ]
    },
    {
        "id": "d5a79473d81599f6",
        "type": "ui_text",
        "z": "650b7b59c9d93975",
        "group": "672267fe886bf70a",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "DI 6 : ",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1490,
        "y": 840,
        "wires": []
    },
    {
        "id": "c868a54516f1ec9e",
        "type": "change",
        "z": "650b7b59c9d93975",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "bool",
                "to": "Working",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "bool",
                "to": "Not Working",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1300,
        "y": 840,
        "wires": [
            [
                "d5a79473d81599f6"
            ]
        ]
    },
    {
        "id": "056a41b5d506c347",
        "type": "ui_text",
        "z": "650b7b59c9d93975",
        "group": "672267fe886bf70a",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "DI 7 : ",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1490,
        "y": 940,
        "wires": []
    },
    {
        "id": "7bc104f1d32ddf36",
        "type": "change",
        "z": "650b7b59c9d93975",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "bool",
                "to": "Working",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "bool",
                "to": "Not Working",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1300,
        "y": 940,
        "wires": [
            [
                "056a41b5d506c347"
            ]
        ]
    },
    {
        "id": "cac503ef8e42b5d5",
        "type": "ui_text",
        "z": "650b7b59c9d93975",
        "group": "672267fe886bf70a",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "DI 8 : ",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1490,
        "y": 1040,
        "wires": []
    },
    {
        "id": "9b74def1bce0cbcc",
        "type": "change",
        "z": "650b7b59c9d93975",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "bool",
                "to": "Working",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "bool",
                "to": "Not Working",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1300,
        "y": 1040,
        "wires": [
            [
                "cac503ef8e42b5d5"
            ]
        ]
    },
    {
        "id": "05191c494c1fa173",
        "type": "ui_text",
        "z": "650b7b59c9d93975",
        "group": "672267fe886bf70a",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "DI 9 : ",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1490,
        "y": 1140,
        "wires": []
    },
    {
        "id": "8e498c4ffec95b90",
        "type": "change",
        "z": "650b7b59c9d93975",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "bool",
                "to": "Working",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "bool",
                "to": "Not Working",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1300,
        "y": 1140,
        "wires": [
            [
                "05191c494c1fa173"
            ]
        ]
    },
    {
        "id": "edcc87db784bcfab",
        "type": "ui_text",
        "z": "650b7b59c9d93975",
        "group": "672267fe886bf70a",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "DI 10 : ",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1490,
        "y": 1240,
        "wires": []
    },
    {
        "id": "d6251afb8c558910",
        "type": "change",
        "z": "650b7b59c9d93975",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "bool",
                "to": "Working",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "bool",
                "to": "Not Working",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1300,
        "y": 1240,
        "wires": [
            [
                "edcc87db784bcfab"
            ]
        ]
    },
    {
        "id": "fad7abdc4853d3ae",
        "type": "ui_text",
        "z": "650b7b59c9d93975",
        "group": "672267fe886bf70a",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "DI 11 : ",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1490,
        "y": 1340,
        "wires": []
    },
    {
        "id": "8b9c6eb2e0d50265",
        "type": "change",
        "z": "650b7b59c9d93975",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "bool",
                "to": "Working",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "bool",
                "to": "Not Working",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1300,
        "y": 1340,
        "wires": [
            [
                "fad7abdc4853d3ae"
            ]
        ]
    },
    {
        "id": "a79210f018123b0a",
        "type": "ui_text",
        "z": "650b7b59c9d93975",
        "group": "672267fe886bf70a",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "DI 12 : ",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1490,
        "y": 1440,
        "wires": []
    },
    {
        "id": "756db0fcc0f5033d",
        "type": "change",
        "z": "650b7b59c9d93975",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "bool",
                "to": "Working",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "bool",
                "to": "Not Working",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1300,
        "y": 1440,
        "wires": [
            [
                "a79210f018123b0a"
            ]
        ]
    },
    {
        "id": "9f1e39de2ca35bb1",
        "type": "ui_text",
        "z": "650b7b59c9d93975",
        "group": "672267fe886bf70a",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "DI 13 : ",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1490,
        "y": 1540,
        "wires": []
    },
    {
        "id": "3394706edf11045d",
        "type": "change",
        "z": "650b7b59c9d93975",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "bool",
                "to": "Working",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "bool",
                "to": "Not Working",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1300,
        "y": 1540,
        "wires": [
            [
                "9f1e39de2ca35bb1"
            ]
        ]
    },
    {
        "id": "c75055e311b7772e",
        "type": "ui_text",
        "z": "650b7b59c9d93975",
        "group": "672267fe886bf70a",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "DI 14 : ",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1490,
        "y": 1640,
        "wires": []
    },
    {
        "id": "67a13ad55d1b1729",
        "type": "change",
        "z": "650b7b59c9d93975",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "bool",
                "to": "Working",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "bool",
                "to": "Not Working",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1300,
        "y": 1640,
        "wires": [
            [
                "c75055e311b7772e"
            ]
        ]
    },
    {
        "id": "3962392ab436415a",
        "type": "ui_text",
        "z": "650b7b59c9d93975",
        "group": "672267fe886bf70a",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "DI 15 : ",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1490,
        "y": 1740,
        "wires": []
    },
    {
        "id": "fe6b2e885eb4776c",
        "type": "change",
        "z": "650b7b59c9d93975",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "bool",
                "to": "Working",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "bool",
                "to": "Not Working",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1300,
        "y": 1740,
        "wires": [
            [
                "3962392ab436415a"
            ]
        ]
    },
    {
        "id": "f1440fa3f603c0d1",
        "type": "comment",
        "z": "650b7b59c9d93975",
        "name": "ControlBox DI Robot",
        "info": "# This is ControlBox Input Setting",
        "x": 930,
        "y": 180,
        "wires": []
    },
    {
        "id": "630d2f4cf986c2d8",
        "type": "debug",
        "z": "650b7b59c9d93975",
        "name": "debug 153",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1100,
        "y": 200,
        "wires": []
    },
    {
        "id": "aa415832cbb765ec",
        "type": "debug",
        "z": "650b7b59c9d93975",
        "name": "debug 154",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1280,
        "y": 200,
        "wires": []
    },
    {
        "id": "19604fa6dad0d151",
        "type": "debug",
        "z": "650b7b59c9d93975",
        "name": "debug 155",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1100,
        "y": 300,
        "wires": []
    },
    {
        "id": "f881b54ac574eee8",
        "type": "debug",
        "z": "650b7b59c9d93975",
        "name": "debug 156",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1280,
        "y": 300,
        "wires": []
    },
    {
        "id": "90a165ec6d3d5209",
        "type": "debug",
        "z": "650b7b59c9d93975",
        "name": "debug 157",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1100,
        "y": 400,
        "wires": []
    },
    {
        "id": "f90372f5d8e6f668",
        "type": "debug",
        "z": "650b7b59c9d93975",
        "name": "debug 158",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1280,
        "y": 400,
        "wires": []
    },
    {
        "id": "c7b3419e554e0134",
        "type": "debug",
        "z": "650b7b59c9d93975",
        "name": "debug 159",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1100,
        "y": 500,
        "wires": []
    },
    {
        "id": "f0f031f187ca06a7",
        "type": "debug",
        "z": "650b7b59c9d93975",
        "name": "debug 160",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1280,
        "y": 500,
        "wires": []
    },
    {
        "id": "2f864aee0f3dec58",
        "type": "debug",
        "z": "650b7b59c9d93975",
        "name": "debug 161",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1100,
        "y": 600,
        "wires": []
    },
    {
        "id": "3e78c5d0c623cb36",
        "type": "debug",
        "z": "650b7b59c9d93975",
        "name": "debug 162",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1280,
        "y": 600,
        "wires": []
    },
    {
        "id": "ceeba5892d189c0b",
        "type": "debug",
        "z": "650b7b59c9d93975",
        "name": "debug 163",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1100,
        "y": 700,
        "wires": []
    },
    {
        "id": "0ed9d43ab6f41ef4",
        "type": "debug",
        "z": "650b7b59c9d93975",
        "name": "debug 164",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1280,
        "y": 700,
        "wires": []
    },
    {
        "id": "6fbd7a99ad3b880b",
        "type": "debug",
        "z": "650b7b59c9d93975",
        "name": "debug 165",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1100,
        "y": 800,
        "wires": []
    },
    {
        "id": "ca3558b2e7bfd70e",
        "type": "debug",
        "z": "650b7b59c9d93975",
        "name": "debug 166",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1280,
        "y": 800,
        "wires": []
    },
    {
        "id": "af5f947260686282",
        "type": "debug",
        "z": "650b7b59c9d93975",
        "name": "debug 167",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1100,
        "y": 900,
        "wires": []
    },
    {
        "id": "875730df5702be54",
        "type": "debug",
        "z": "650b7b59c9d93975",
        "name": "debug 168",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1280,
        "y": 900,
        "wires": []
    },
    {
        "id": "0769101e9b8cfd2a",
        "type": "debug",
        "z": "650b7b59c9d93975",
        "name": "debug 169",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1100,
        "y": 1000,
        "wires": []
    },
    {
        "id": "e57d95797f85477e",
        "type": "debug",
        "z": "650b7b59c9d93975",
        "name": "debug 170",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1280,
        "y": 1000,
        "wires": []
    },
    {
        "id": "6ee65508fe01861f",
        "type": "debug",
        "z": "650b7b59c9d93975",
        "name": "debug 171",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1100,
        "y": 1100,
        "wires": []
    },
    {
        "id": "3c227c2675c096de",
        "type": "debug",
        "z": "650b7b59c9d93975",
        "name": "debug 172",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1280,
        "y": 1100,
        "wires": []
    },
    {
        "id": "d840bf91e45e5794",
        "type": "debug",
        "z": "650b7b59c9d93975",
        "name": "debug 173",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1100,
        "y": 1200,
        "wires": []
    },
    {
        "id": "c246076346e93c0f",
        "type": "debug",
        "z": "650b7b59c9d93975",
        "name": "debug 174",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1280,
        "y": 1200,
        "wires": []
    },
    {
        "id": "ca655292db40c9d1",
        "type": "debug",
        "z": "650b7b59c9d93975",
        "name": "debug 175",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1100,
        "y": 1300,
        "wires": []
    },
    {
        "id": "764d331052f64e1b",
        "type": "debug",
        "z": "650b7b59c9d93975",
        "name": "debug 176",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1280,
        "y": 1300,
        "wires": []
    },
    {
        "id": "dfff9c0e29b5a3e0",
        "type": "debug",
        "z": "650b7b59c9d93975",
        "name": "debug 177",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1100,
        "y": 1400,
        "wires": []
    },
    {
        "id": "ceb7bc2085f36c57",
        "type": "debug",
        "z": "650b7b59c9d93975",
        "name": "debug 178",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1280,
        "y": 1400,
        "wires": []
    },
    {
        "id": "4b9795148eb0283f",
        "type": "debug",
        "z": "650b7b59c9d93975",
        "name": "debug 179",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1100,
        "y": 1500,
        "wires": []
    },
    {
        "id": "fd5d3507f000db7e",
        "type": "debug",
        "z": "650b7b59c9d93975",
        "name": "debug 180",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1280,
        "y": 1500,
        "wires": []
    },
    {
        "id": "538c10d76df5c5f9",
        "type": "debug",
        "z": "650b7b59c9d93975",
        "name": "debug 181",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1100,
        "y": 1600,
        "wires": []
    },
    {
        "id": "fd60086c6458edf5",
        "type": "debug",
        "z": "650b7b59c9d93975",
        "name": "debug 182",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1280,
        "y": 1600,
        "wires": []
    },
    {
        "id": "7e89db2856164a6c",
        "type": "debug",
        "z": "650b7b59c9d93975",
        "name": "debug 183",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1100,
        "y": 1700,
        "wires": []
    },
    {
        "id": "6d20afe143fa1827",
        "type": "debug",
        "z": "650b7b59c9d93975",
        "name": "debug 184",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1280,
        "y": 1700,
        "wires": []
    },
    {
        "id": "9346a7dfd3b6cee7",
        "type": "modbus-read",
        "z": "650b7b59c9d93975",
        "name": "Error or Not",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Input",
        "adr": "7201",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "633574fbb8c86600",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 1730,
        "y": 260,
        "wires": [
            [
                "e7787f7778783b8a",
                "b819b199cad7365d"
            ],
            []
        ]
    },
    {
        "id": "4d6457bcb21b184a",
        "type": "comment",
        "z": "650b7b59c9d93975",
        "name": "Robot Status",
        "info": "# This is Robot Status",
        "x": 1730,
        "y": 200,
        "wires": []
    },
    {
        "id": "98817e8364551063",
        "type": "modbus-read",
        "z": "650b7b59c9d93975",
        "name": "Project Running or Not",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Input",
        "adr": "7202",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "633574fbb8c86600",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 1760,
        "y": 360,
        "wires": [
            [
                "ea21daf93f3e0ee2",
                "eb1dfefba9cf5c3d"
            ],
            []
        ]
    },
    {
        "id": "2d3b54cbdd78ab2e",
        "type": "modbus-read",
        "z": "650b7b59c9d93975",
        "name": "Project Editing or Not",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Input",
        "adr": "7203",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "633574fbb8c86600",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 1760,
        "y": 460,
        "wires": [
            [
                "0cebfbaba3c8b68f",
                "010f71772a16ca17"
            ],
            []
        ]
    },
    {
        "id": "9e7c1f9ef5741009",
        "type": "modbus-read",
        "z": "650b7b59c9d93975",
        "name": "Project Pause or Not",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Input",
        "adr": "7204",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "633574fbb8c86600",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 1750,
        "y": 560,
        "wires": [
            [
                "3c195ab5ced9f1f8",
                "64a25dda8551aa58"
            ],
            []
        ]
    },
    {
        "id": "1d431d30c2d41a7d",
        "type": "modbus-read",
        "z": "650b7b59c9d93975",
        "name": "Get Control or Not",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Input",
        "adr": "7205",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "633574fbb8c86600",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 1750,
        "y": 660,
        "wires": [
            [
                "5762510400c07b32",
                "578d742ef9eba865"
            ],
            []
        ]
    },
    {
        "id": "54a13af3dee26400",
        "type": "modbus-read",
        "z": "650b7b59c9d93975",
        "name": "Light on or not",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Input",
        "adr": "7206",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "633574fbb8c86600",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 1730,
        "y": 760,
        "wires": [
            [
                "71857f51a0891154",
                "b6c8a79c5f7f9268"
            ],
            []
        ]
    },
    {
        "id": "ca6a9efab4cf3602",
        "type": "modbus-read",
        "z": "650b7b59c9d93975",
        "name": "Safety IO or not",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Input",
        "adr": "7207",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "633574fbb8c86600",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 1740,
        "y": 860,
        "wires": [
            [
                "b3411e864ea69310",
                "3c8a072d8dbedcb6"
            ],
            []
        ]
    },
    {
        "id": "7b5d8614c357f8bf",
        "type": "modbus-read",
        "z": "650b7b59c9d93975",
        "name": "E-Stop or not",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Input",
        "adr": "7208",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "633574fbb8c86600",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 1730,
        "y": 960,
        "wires": [
            [
                "b860e181df8f6f0a",
                "af3b35ddc102b081"
            ],
            []
        ]
    },
    {
        "id": "e7787f7778783b8a",
        "type": "function",
        "z": "650b7b59c9d93975",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    //return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1920,
        "y": 260,
        "wires": [
            [
                "89bb741ab60ca0c1",
                "87a75a525aa2afe7"
            ]
        ]
    },
    {
        "id": "ea21daf93f3e0ee2",
        "type": "function",
        "z": "650b7b59c9d93975",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    //return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1960,
        "y": 360,
        "wires": [
            [
                "b94ab0dd32d0bc6b",
                "b47b4ae431fe3de8"
            ]
        ]
    },
    {
        "id": "0cebfbaba3c8b68f",
        "type": "function",
        "z": "650b7b59c9d93975",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    //return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1960,
        "y": 460,
        "wires": [
            [
                "bc07ce83488a3089",
                "e62530c024f07c7f"
            ]
        ]
    },
    {
        "id": "3c195ab5ced9f1f8",
        "type": "function",
        "z": "650b7b59c9d93975",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    //return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1940,
        "y": 560,
        "wires": [
            [
                "6b0ef266b81a092a",
                "2fb05e473b40e5d3"
            ]
        ]
    },
    {
        "id": "5762510400c07b32",
        "type": "function",
        "z": "650b7b59c9d93975",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    //return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1940,
        "y": 660,
        "wires": [
            [
                "617d134957cdaf01",
                "f990daf58f831b00"
            ]
        ]
    },
    {
        "id": "71857f51a0891154",
        "type": "function",
        "z": "650b7b59c9d93975",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    //return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1900,
        "y": 760,
        "wires": [
            [
                "c5ee54e6e8524f1c",
                "b1d18f9bc34bcc0d"
            ]
        ]
    },
    {
        "id": "b3411e864ea69310",
        "type": "function",
        "z": "650b7b59c9d93975",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    //return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1920,
        "y": 860,
        "wires": [
            [
                "51515f37fcdd9f46",
                "890d4404a31d6108"
            ]
        ]
    },
    {
        "id": "b860e181df8f6f0a",
        "type": "function",
        "z": "650b7b59c9d93975",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    //return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1900,
        "y": 960,
        "wires": [
            [
                "8f3197a898802cf8",
                "25d5c1b9969d2d65"
            ]
        ]
    },
    {
        "id": "89bb741ab60ca0c1",
        "type": "change",
        "z": "650b7b59c9d93975",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "bool",
                "to": "Yes",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "bool",
                "to": "No",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2100,
        "y": 260,
        "wires": [
            [
                "5de2f2d7f985dcc4"
            ]
        ]
    },
    {
        "id": "b94ab0dd32d0bc6b",
        "type": "change",
        "z": "650b7b59c9d93975",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "bool",
                "to": "Yes",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "bool",
                "to": "No",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2140,
        "y": 360,
        "wires": [
            [
                "2473ebee19f0a990"
            ]
        ]
    },
    {
        "id": "bc07ce83488a3089",
        "type": "change",
        "z": "650b7b59c9d93975",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "bool",
                "to": "Yes",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "bool",
                "to": "No",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2140,
        "y": 460,
        "wires": [
            [
                "672781c9218a15d9"
            ]
        ]
    },
    {
        "id": "6b0ef266b81a092a",
        "type": "change",
        "z": "650b7b59c9d93975",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "bool",
                "to": "Yes",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "bool",
                "to": "No",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2120,
        "y": 560,
        "wires": [
            [
                "e21b8d26749f6390"
            ]
        ]
    },
    {
        "id": "617d134957cdaf01",
        "type": "change",
        "z": "650b7b59c9d93975",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "bool",
                "to": "Yes",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "bool",
                "to": "No",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2120,
        "y": 660,
        "wires": [
            [
                "d7d9564d87245d45"
            ]
        ]
    },
    {
        "id": "c5ee54e6e8524f1c",
        "type": "change",
        "z": "650b7b59c9d93975",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "bool",
                "to": "Enable",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "bool",
                "to": "Disable",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2080,
        "y": 760,
        "wires": [
            [
                "53764a0b79c01913"
            ]
        ]
    },
    {
        "id": "51515f37fcdd9f46",
        "type": "change",
        "z": "650b7b59c9d93975",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "bool",
                "to": "Triggered",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "bool",
                "to": "Restored",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2100,
        "y": 860,
        "wires": [
            [
                "17fe2f18cf5e27cf"
            ]
        ]
    },
    {
        "id": "8f3197a898802cf8",
        "type": "change",
        "z": "650b7b59c9d93975",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "bool",
                "to": "Triggered",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "bool",
                "to": "Restored",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2080,
        "y": 960,
        "wires": [
            [
                "ade36674c69523fe"
            ]
        ]
    },
    {
        "id": "5de2f2d7f985dcc4",
        "type": "ui_text",
        "z": "650b7b59c9d93975",
        "group": "d5dc0b76938ae317",
        "order": 6,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Error or Not",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 2290,
        "y": 260,
        "wires": []
    },
    {
        "id": "2473ebee19f0a990",
        "type": "ui_text",
        "z": "650b7b59c9d93975",
        "group": "d5dc0b76938ae317",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Project Running or Not",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 2360,
        "y": 360,
        "wires": []
    },
    {
        "id": "672781c9218a15d9",
        "type": "ui_text",
        "z": "650b7b59c9d93975",
        "group": "d5dc0b76938ae317",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Project Editing or Not",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 2360,
        "y": 460,
        "wires": []
    },
    {
        "id": "e21b8d26749f6390",
        "type": "ui_text",
        "z": "650b7b59c9d93975",
        "group": "d5dc0b76938ae317",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Project Pause or Not",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 2340,
        "y": 560,
        "wires": []
    },
    {
        "id": "d7d9564d87245d45",
        "type": "ui_text",
        "z": "650b7b59c9d93975",
        "group": "d5dc0b76938ae317",
        "order": 7,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Get Control or Not",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 2330,
        "y": 660,
        "wires": []
    },
    {
        "id": "53764a0b79c01913",
        "type": "ui_text",
        "z": "650b7b59c9d93975",
        "group": "d5dc0b76938ae317",
        "order": 8,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Light on or not",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 2280,
        "y": 760,
        "wires": []
    },
    {
        "id": "17fe2f18cf5e27cf",
        "type": "ui_text",
        "z": "650b7b59c9d93975",
        "group": "d5dc0b76938ae317",
        "order": 9,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Safety IO or not",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 2300,
        "y": 860,
        "wires": []
    },
    {
        "id": "ade36674c69523fe",
        "type": "ui_text",
        "z": "650b7b59c9d93975",
        "group": "d5dc0b76938ae317",
        "order": 10,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "E-Stop or not",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 2270,
        "y": 960,
        "wires": []
    },
    {
        "id": "aaa93757aebfd162",
        "type": "modbus-read",
        "z": "650b7b59c9d93975",
        "name": "Project Running Speed",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "InputRegister",
        "adr": "7101",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "633574fbb8c86600",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 1760,
        "y": 1060,
        "wires": [
            [
                "d28e89cb09288b0e",
                "bbe078e2cd65dd0a"
            ],
            []
        ]
    },
    {
        "id": "d07469175cba1826",
        "type": "modbus-read",
        "z": "650b7b59c9d93975",
        "name": "M/A Mode",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "InputRegister",
        "adr": "7102",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "633574fbb8c86600",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 1720,
        "y": 1160,
        "wires": [
            [
                "2bd0dd05b9cf1ae4",
                "432c3b7bf3030600"
            ],
            []
        ]
    },
    {
        "id": "d28e89cb09288b0e",
        "type": "function",
        "z": "650b7b59c9d93975",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    //return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1980,
        "y": 1060,
        "wires": [
            [
                "2bfa05790d90a01c",
                "bcbb9cd8b9a082da"
            ]
        ]
    },
    {
        "id": "2bd0dd05b9cf1ae4",
        "type": "function",
        "z": "650b7b59c9d93975",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    //return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1900,
        "y": 1160,
        "wires": [
            [
                "96b18e7174854e1d",
                "e4f17817baa0725c"
            ]
        ]
    },
    {
        "id": "2bfa05790d90a01c",
        "type": "ui_gauge",
        "z": "650b7b59c9d93975",
        "name": "",
        "group": "d5dc0b76938ae317",
        "order": 1,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Speed",
        "label": "%",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 2150,
        "y": 1060,
        "wires": []
    },
    {
        "id": "1e3a85892d3aa3f9",
        "type": "ui_text",
        "z": "650b7b59c9d93975",
        "group": "d5dc0b76938ae317",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Robot Mode : ",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 2240,
        "y": 1160,
        "wires": []
    },
    {
        "id": "96b18e7174854e1d",
        "type": "change",
        "z": "650b7b59c9d93975",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "1",
                "fromt": "num",
                "to": "Automatic",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "2",
                "fromt": "num",
                "to": "Manual",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2060,
        "y": 1160,
        "wires": [
            [
                "1e3a85892d3aa3f9"
            ]
        ]
    },
    {
        "id": "b819b199cad7365d",
        "type": "debug",
        "z": "650b7b59c9d93975",
        "name": "debug 185",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1920,
        "y": 220,
        "wires": []
    },
    {
        "id": "87a75a525aa2afe7",
        "type": "debug",
        "z": "650b7b59c9d93975",
        "name": "debug 186",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2080,
        "y": 220,
        "wires": []
    },
    {
        "id": "eb1dfefba9cf5c3d",
        "type": "debug",
        "z": "650b7b59c9d93975",
        "name": "debug 187",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1960,
        "y": 320,
        "wires": []
    },
    {
        "id": "b47b4ae431fe3de8",
        "type": "debug",
        "z": "650b7b59c9d93975",
        "name": "debug 188",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2120,
        "y": 320,
        "wires": []
    },
    {
        "id": "010f71772a16ca17",
        "type": "debug",
        "z": "650b7b59c9d93975",
        "name": "debug 189",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1960,
        "y": 420,
        "wires": []
    },
    {
        "id": "e62530c024f07c7f",
        "type": "debug",
        "z": "650b7b59c9d93975",
        "name": "debug 190",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2120,
        "y": 420,
        "wires": []
    },
    {
        "id": "64a25dda8551aa58",
        "type": "debug",
        "z": "650b7b59c9d93975",
        "name": "debug 191",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1940,
        "y": 520,
        "wires": []
    },
    {
        "id": "2fb05e473b40e5d3",
        "type": "debug",
        "z": "650b7b59c9d93975",
        "name": "debug 192",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2100,
        "y": 520,
        "wires": []
    },
    {
        "id": "578d742ef9eba865",
        "type": "debug",
        "z": "650b7b59c9d93975",
        "name": "debug 193",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1940,
        "y": 620,
        "wires": []
    },
    {
        "id": "f990daf58f831b00",
        "type": "debug",
        "z": "650b7b59c9d93975",
        "name": "debug 194",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2100,
        "y": 620,
        "wires": []
    },
    {
        "id": "b6c8a79c5f7f9268",
        "type": "debug",
        "z": "650b7b59c9d93975",
        "name": "debug 195",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1900,
        "y": 720,
        "wires": []
    },
    {
        "id": "b1d18f9bc34bcc0d",
        "type": "debug",
        "z": "650b7b59c9d93975",
        "name": "debug 196",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2060,
        "y": 720,
        "wires": []
    },
    {
        "id": "3c8a072d8dbedcb6",
        "type": "debug",
        "z": "650b7b59c9d93975",
        "name": "debug 197",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1920,
        "y": 820,
        "wires": []
    },
    {
        "id": "890d4404a31d6108",
        "type": "debug",
        "z": "650b7b59c9d93975",
        "name": "debug 198",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2080,
        "y": 820,
        "wires": []
    },
    {
        "id": "af3b35ddc102b081",
        "type": "debug",
        "z": "650b7b59c9d93975",
        "name": "debug 199",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1900,
        "y": 920,
        "wires": []
    },
    {
        "id": "25d5c1b9969d2d65",
        "type": "debug",
        "z": "650b7b59c9d93975",
        "name": "debug 200",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2060,
        "y": 920,
        "wires": []
    },
    {
        "id": "bbe078e2cd65dd0a",
        "type": "debug",
        "z": "650b7b59c9d93975",
        "name": "debug 201",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1980,
        "y": 1020,
        "wires": []
    },
    {
        "id": "bcbb9cd8b9a082da",
        "type": "debug",
        "z": "650b7b59c9d93975",
        "name": "debug 202",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2140,
        "y": 1020,
        "wires": []
    },
    {
        "id": "432c3b7bf3030600",
        "type": "debug",
        "z": "650b7b59c9d93975",
        "name": "debug 203",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1910,
        "y": 1120,
        "wires": []
    },
    {
        "id": "e4f17817baa0725c",
        "type": "debug",
        "z": "650b7b59c9d93975",
        "name": "debug 204",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2070,
        "y": 1120,
        "wires": []
    },
    {
        "id": "738e59746f6d6e5b",
        "type": "modbus-read",
        "z": "650b7b59c9d93975",
        "name": "Robot Light Status",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "InputRegister",
        "adr": "7332",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "633574fbb8c86600",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 1750,
        "y": 1260,
        "wires": [
            [
                "46adf1392a41f686",
                "954ad1611d9958a4"
            ],
            []
        ]
    },
    {
        "id": "954ad1611d9958a4",
        "type": "function",
        "z": "650b7b59c9d93975",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    //return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1940,
        "y": 1260,
        "wires": [
            [
                "49d7de97355e2c0f",
                "195f5a54d6973edc"
            ]
        ]
    },
    {
        "id": "0ec7b51c3abcd559",
        "type": "ui_text",
        "z": "650b7b59c9d93975",
        "group": "d5dc0b76938ae317",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Robot Light Status : ",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 2330,
        "y": 1260,
        "wires": []
    },
    {
        "id": "49d7de97355e2c0f",
        "type": "change",
        "z": "650b7b59c9d93975",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "1",
                "fromt": "num",
                "to": "Solid Red, fatal error.",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "2",
                "fromt": "num",
                "to": "Flashing Red, Robot is initializing.",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "3",
                "fromt": "num",
                "to": "Solid Blue, standby in Auto Mode. ",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "4",
                "fromt": "num",
                "to": "Flashing Blue, in Auto Mode.",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "5",
                "fromt": "num",
                "to": "Solid Green, standby in Manual Mode. ",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "6",
                "fromt": "num",
                "to": "Flashing Green, in Manual Mode.",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "9",
                "fromt": "num",
                "to": "Alternating Blue&Red, Auto Mode error. ",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "10",
                "fromt": "num",
                "to": "Alternating Green&Red, Manual Mode  error.",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "13",
                "fromt": "num",
                "to": "Alternating Purple&Green, in Manual  Mode ( User Connected External Safeguard  Input Port for Human - Machine Safety Settings trigger).",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "14",
                "fromt": "num",
                "to": "Alternating Purple&Blue, in Auto Mode  ( User Connected External Safeguard Input  Port for Human - Machine Safety Settings  trigger).",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "17",
                "fromt": "num",
                "to": "Alternating White&Green, in Manual  Mode & Reduced Space.",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "18",
                "fromt": "num",
                "to": "Alternating White&Blue, in Auto Mode &  Reduced Space.",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2130,
        "y": 1260,
        "wires": [
            [
                "0ec7b51c3abcd559"
            ]
        ]
    },
    {
        "id": "46adf1392a41f686",
        "type": "debug",
        "z": "650b7b59c9d93975",
        "name": "debug 205",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1950,
        "y": 1220,
        "wires": []
    },
    {
        "id": "195f5a54d6973edc",
        "type": "debug",
        "z": "650b7b59c9d93975",
        "name": "debug 206",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2130,
        "y": 1220,
        "wires": []
    },
    {
        "id": "efe35143fad0400d",
        "type": "ui_button",
        "z": "650b7b59c9d93975",
        "name": "",
        "group": "016faf227ce9f64f",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Play/Pause",
        "tooltip": "",
        "color": "",
        "bgcolor": "Orange",
        "className": "",
        "icon": "",
        "payload": "true",
        "payloadType": "bool",
        "topic": "topic",
        "topicType": "msg",
        "x": 2670,
        "y": 260,
        "wires": [
            [
                "b624b3386b4ce3a3"
            ]
        ]
    },
    {
        "id": "6df7d040e99505ce",
        "type": "ui_button",
        "z": "650b7b59c9d93975",
        "name": "",
        "group": "016faf227ce9f64f",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Stop",
        "tooltip": "",
        "color": "",
        "bgcolor": "Red",
        "className": "",
        "icon": "",
        "payload": "true",
        "payloadType": "bool",
        "topic": "topic",
        "topicType": "msg",
        "x": 2650,
        "y": 340,
        "wires": [
            [
                "1313d8364f23e9d9"
            ]
        ]
    },
    {
        "id": "8483c52a9b104cf2",
        "type": "ui_button",
        "z": "650b7b59c9d93975",
        "name": "",
        "group": "016faf227ce9f64f",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Stick+",
        "tooltip": "",
        "color": "",
        "bgcolor": "blue",
        "className": "",
        "icon": "",
        "payload": "true",
        "payloadType": "bool",
        "topic": "topic",
        "topicType": "msg",
        "x": 2650,
        "y": 420,
        "wires": [
            [
                "4dd97f2f7bebba0e"
            ]
        ]
    },
    {
        "id": "0be0be125fd0fa87",
        "type": "ui_button",
        "z": "650b7b59c9d93975",
        "name": "",
        "group": "016faf227ce9f64f",
        "order": 16,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Stick-",
        "tooltip": "",
        "color": "",
        "bgcolor": "blue",
        "className": "",
        "icon": "",
        "payload": "true",
        "payloadType": "bool",
        "topic": "topic",
        "topicType": "msg",
        "x": 2650,
        "y": 500,
        "wires": [
            [
                "2f2327b1a7ad220d"
            ]
        ]
    },
    {
        "id": "b624b3386b4ce3a3",
        "type": "modbus-write",
        "z": "650b7b59c9d93975",
        "name": "Play/Pause",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "7104",
        "quantity": "1",
        "server": "633574fbb8c86600",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 2870,
        "y": 260,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "1313d8364f23e9d9",
        "type": "modbus-write",
        "z": "650b7b59c9d93975",
        "name": "Stop",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "7105",
        "quantity": "1",
        "server": "633574fbb8c86600",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 2810,
        "y": 340,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "4dd97f2f7bebba0e",
        "type": "modbus-write",
        "z": "650b7b59c9d93975",
        "name": "Stick+",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "7106",
        "quantity": "1",
        "server": "633574fbb8c86600",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 2810,
        "y": 420,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "2f2327b1a7ad220d",
        "type": "modbus-write",
        "z": "650b7b59c9d93975",
        "name": "Stick-",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "7107",
        "quantity": "1",
        "server": "633574fbb8c86600",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 2810,
        "y": 500,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "4aed7ab79d9bd94d",
        "type": "comment",
        "z": "650b7b59c9d93975",
        "name": "Robot Stick",
        "info": "# This is Robot Stick Setting",
        "x": 2650,
        "y": 200,
        "wires": []
    },
    {
        "id": "60c35775150fd08c",
        "type": "ui_switch",
        "z": "85d4e4ab83afdb00",
        "name": "",
        "label": "DO 0 : ",
        "tooltip": "",
        "group": "ad0816508d07cd0b",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 490,
        "y": 180,
        "wires": [
            [
                "80c64c574531738c",
                "bfb57a438d0d2e11"
            ]
        ]
    },
    {
        "id": "9379ad99ef256ed0",
        "type": "ui_switch",
        "z": "85d4e4ab83afdb00",
        "name": "",
        "label": "DO 1 : ",
        "tooltip": "",
        "group": "ad0816508d07cd0b",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 490,
        "y": 280,
        "wires": [
            [
                "7ebe6c9df8ad5f02",
                "c45ee72998ec6e15"
            ]
        ]
    },
    {
        "id": "91a548806bc995a9",
        "type": "ui_switch",
        "z": "85d4e4ab83afdb00",
        "name": "",
        "label": "DO 2 : ",
        "tooltip": "",
        "group": "ad0816508d07cd0b",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 490,
        "y": 380,
        "wires": [
            [
                "55003fb9f2221739",
                "256d3c365c033bc8"
            ]
        ]
    },
    {
        "id": "2d04232197eb474c",
        "type": "ui_switch",
        "z": "85d4e4ab83afdb00",
        "name": "",
        "label": "DO 3 : ",
        "tooltip": "",
        "group": "ad0816508d07cd0b",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 490,
        "y": 480,
        "wires": [
            [
                "17ec126b242b9e3c",
                "89264b14a847f81b"
            ]
        ]
    },
    {
        "id": "b0dc656bcc8534d0",
        "type": "ui_switch",
        "z": "85d4e4ab83afdb00",
        "name": "",
        "label": "DO 4 : ",
        "tooltip": "",
        "group": "ad0816508d07cd0b",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 490,
        "y": 580,
        "wires": [
            [
                "b52a17724dc871c5",
                "e2b3abd25daa302e"
            ]
        ]
    },
    {
        "id": "b0881d14d1dfffb9",
        "type": "ui_switch",
        "z": "85d4e4ab83afdb00",
        "name": "",
        "label": "DO 5 : ",
        "tooltip": "",
        "group": "ad0816508d07cd0b",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 490,
        "y": 680,
        "wires": [
            [
                "68e2e94b23c7e342",
                "2c002c233b14e123"
            ]
        ]
    },
    {
        "id": "a993bdd7db2b3acc",
        "type": "ui_switch",
        "z": "85d4e4ab83afdb00",
        "name": "",
        "label": "DO 6 : ",
        "tooltip": "",
        "group": "ad0816508d07cd0b",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 490,
        "y": 780,
        "wires": [
            [
                "7f9a006daf2ed3ea",
                "20c571d04d38c665"
            ]
        ]
    },
    {
        "id": "5625991ad51272b7",
        "type": "ui_switch",
        "z": "85d4e4ab83afdb00",
        "name": "",
        "label": "DO 7 : ",
        "tooltip": "",
        "group": "ad0816508d07cd0b",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 490,
        "y": 880,
        "wires": [
            [
                "487309459c1d7619",
                "e9d25fd9b34efebb"
            ]
        ]
    },
    {
        "id": "e8d9cad860396839",
        "type": "ui_switch",
        "z": "85d4e4ab83afdb00",
        "name": "",
        "label": "DO 8 : ",
        "tooltip": "",
        "group": "ad0816508d07cd0b",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 490,
        "y": 980,
        "wires": [
            [
                "6fb75c640082d070",
                "7b802f6a0d543353"
            ]
        ]
    },
    {
        "id": "968c437a5edbde32",
        "type": "ui_switch",
        "z": "85d4e4ab83afdb00",
        "name": "",
        "label": "DO 9 : ",
        "tooltip": "",
        "group": "ad0816508d07cd0b",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 490,
        "y": 1080,
        "wires": [
            [
                "386884c0b6103650",
                "b767cfb3925ec7bd"
            ]
        ]
    },
    {
        "id": "7c55078cfba66f75",
        "type": "ui_switch",
        "z": "85d4e4ab83afdb00",
        "name": "",
        "label": "DO 10 : ",
        "tooltip": "",
        "group": "ad0816508d07cd0b",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 500,
        "y": 1180,
        "wires": [
            [
                "3cbe56476a6f5256",
                "32652ee7030348a7"
            ]
        ]
    },
    {
        "id": "d83bf110640838a0",
        "type": "ui_switch",
        "z": "85d4e4ab83afdb00",
        "name": "",
        "label": "DO 11 : ",
        "tooltip": "",
        "group": "ad0816508d07cd0b",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 500,
        "y": 1280,
        "wires": [
            [
                "38421dbc5711f10e",
                "986c78c74313fb90"
            ]
        ]
    },
    {
        "id": "054d9333a40ca24a",
        "type": "ui_switch",
        "z": "85d4e4ab83afdb00",
        "name": "",
        "label": "DO 12 : ",
        "tooltip": "",
        "group": "ad0816508d07cd0b",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 500,
        "y": 1380,
        "wires": [
            [
                "3d291d2eb66799cd"
            ]
        ]
    },
    {
        "id": "b79cad4d64df921f",
        "type": "ui_switch",
        "z": "85d4e4ab83afdb00",
        "name": "",
        "label": "DO 13 : ",
        "tooltip": "",
        "group": "ad0816508d07cd0b",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 500,
        "y": 1480,
        "wires": [
            [
                "d3ef7c02adaf8f6a",
                "c55c567b0c230e50"
            ]
        ]
    },
    {
        "id": "70625816ef9ddb6c",
        "type": "ui_switch",
        "z": "85d4e4ab83afdb00",
        "name": "",
        "label": "DO 14 : ",
        "tooltip": "",
        "group": "ad0816508d07cd0b",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 500,
        "y": 1580,
        "wires": [
            [
                "dd7b99b5e11fc72b",
                "ddc402982748a936"
            ]
        ]
    },
    {
        "id": "5a93fa4a99678db5",
        "type": "ui_switch",
        "z": "85d4e4ab83afdb00",
        "name": "",
        "label": "DO 15 : ",
        "tooltip": "",
        "group": "ad0816508d07cd0b",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 500,
        "y": 1680,
        "wires": [
            [
                "0b2a2bf90c81123a",
                "e9d43900dfea8daf"
            ]
        ]
    },
    {
        "id": "ceadf0b5fbfedaf3",
        "type": "function",
        "z": "85d4e4ab83afdb00",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    //return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 180,
        "wires": [
            [
                "285229a4d2980bba",
                "60c35775150fd08c"
            ]
        ]
    },
    {
        "id": "03f864b909dc0916",
        "type": "function",
        "z": "85d4e4ab83afdb00",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 280,
        "wires": [
            [
                "9379ad99ef256ed0",
                "4edfe56b7b830d51"
            ]
        ]
    },
    {
        "id": "0273576ba0cf3e1d",
        "type": "modbus-read",
        "z": "85d4e4ab83afdb00",
        "name": "DO 0 Read",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "0",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "f5e59be3ef794208",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 160,
        "y": 180,
        "wires": [
            [
                "ceadf0b5fbfedaf3",
                "efc25717c667b430"
            ],
            []
        ]
    },
    {
        "id": "9ad7dab70f5bfbd9",
        "type": "modbus-read",
        "z": "85d4e4ab83afdb00",
        "name": "DO 1 Read",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "1",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "f5e59be3ef794208",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 160,
        "y": 280,
        "wires": [
            [
                "03f864b909dc0916",
                "31e3867b4aa7dae3"
            ],
            []
        ]
    },
    {
        "id": "cac7aa52638cad77",
        "type": "modbus-read",
        "z": "85d4e4ab83afdb00",
        "name": "DO 2 Read",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "0",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "f5e59be3ef794208",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 160,
        "y": 380,
        "wires": [
            [
                "a41ce1259783f158",
                "b4019194caa70308"
            ],
            []
        ]
    },
    {
        "id": "c9a3e285d77de4ee",
        "type": "modbus-read",
        "z": "85d4e4ab83afdb00",
        "name": "DO 3 Read",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "3",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "f5e59be3ef794208",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 160,
        "y": 480,
        "wires": [
            [
                "3d7fe8810989a7ef",
                "d623cb123095d43a"
            ],
            []
        ]
    },
    {
        "id": "b6914f77da0637d2",
        "type": "modbus-read",
        "z": "85d4e4ab83afdb00",
        "name": "DO 4 Read",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "4",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "f5e59be3ef794208",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 160,
        "y": 580,
        "wires": [
            [
                "84a3f25d798c9c7d",
                "2177763c7d4e0a7f"
            ],
            []
        ]
    },
    {
        "id": "552061015f4796aa",
        "type": "modbus-read",
        "z": "85d4e4ab83afdb00",
        "name": "DO 5 Read",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "0",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "f5e59be3ef794208",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 160,
        "y": 680,
        "wires": [
            [
                "4542c3e44cb6761a",
                "a7ab7d9126954db5"
            ],
            []
        ]
    },
    {
        "id": "65b61023422467b1",
        "type": "modbus-read",
        "z": "85d4e4ab83afdb00",
        "name": "DO 6 Read",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "6",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "f5e59be3ef794208",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 160,
        "y": 780,
        "wires": [
            [
                "399abb8085a2f34c",
                "341842cbaa85b322"
            ],
            []
        ]
    },
    {
        "id": "f1f84ab0326ce8a8",
        "type": "modbus-read",
        "z": "85d4e4ab83afdb00",
        "name": "DO 7 Read",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "7",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "f5e59be3ef794208",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 160,
        "y": 880,
        "wires": [
            [
                "398b07380f219e81",
                "a687f66d0be2c56c"
            ],
            []
        ]
    },
    {
        "id": "6b9323ed5780dc0e",
        "type": "modbus-read",
        "z": "85d4e4ab83afdb00",
        "name": "DO 8 Read",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "8",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "f5e59be3ef794208",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 160,
        "y": 980,
        "wires": [
            [
                "7d70e3563410c466",
                "576c37af4d220347"
            ],
            []
        ]
    },
    {
        "id": "dabe44481fb6813c",
        "type": "modbus-read",
        "z": "85d4e4ab83afdb00",
        "name": "DO 9 Read",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "9",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "f5e59be3ef794208",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 160,
        "y": 1080,
        "wires": [
            [
                "e472776a66fc1b08",
                "790fa0ad9a95e33f"
            ],
            []
        ]
    },
    {
        "id": "c03581c1ff2cd588",
        "type": "modbus-read",
        "z": "85d4e4ab83afdb00",
        "name": "DO 10 Read",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "10",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "f5e59be3ef794208",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 170,
        "y": 1180,
        "wires": [
            [
                "f1a8b2c5c71cc8b1",
                "f8493aa18ba6a79c"
            ],
            []
        ]
    },
    {
        "id": "8baa4496658108c0",
        "type": "modbus-read",
        "z": "85d4e4ab83afdb00",
        "name": "DO 11 Read",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "11",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "f5e59be3ef794208",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 170,
        "y": 1280,
        "wires": [
            [
                "fe2e3c75b662c7fa",
                "0f9ee8955895cdc3"
            ],
            []
        ]
    },
    {
        "id": "a9d9461e8f5e46b6",
        "type": "modbus-read",
        "z": "85d4e4ab83afdb00",
        "name": "DO 12 Read",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "12",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "f5e59be3ef794208",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 170,
        "y": 1380,
        "wires": [
            [
                "b12bf1cdfb4718e7"
            ],
            []
        ]
    },
    {
        "id": "578e4a2d11af34a6",
        "type": "modbus-read",
        "z": "85d4e4ab83afdb00",
        "name": "DO 13 Read",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "13",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "f5e59be3ef794208",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 170,
        "y": 1480,
        "wires": [
            [
                "25d9ff110ccf3842",
                "3737d43a3756db27"
            ],
            []
        ]
    },
    {
        "id": "717ba30502757bac",
        "type": "modbus-read",
        "z": "85d4e4ab83afdb00",
        "name": "DO 14 Read",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "14",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "f5e59be3ef794208",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 170,
        "y": 1580,
        "wires": [
            [
                "588d05232dd0eb0e",
                "080a2dc708b152e1"
            ],
            []
        ]
    },
    {
        "id": "94b437cd0d30d7f5",
        "type": "modbus-read",
        "z": "85d4e4ab83afdb00",
        "name": "DO 15 Read",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "15",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "f5e59be3ef794208",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 170,
        "y": 1680,
        "wires": [
            [
                "b25f19724bc6981f",
                "756383b4552b5e2d"
            ],
            []
        ]
    },
    {
        "id": "a41ce1259783f158",
        "type": "function",
        "z": "85d4e4ab83afdb00",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 380,
        "wires": [
            [
                "91a548806bc995a9",
                "fca729589ff20172"
            ]
        ]
    },
    {
        "id": "3d7fe8810989a7ef",
        "type": "function",
        "z": "85d4e4ab83afdb00",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 480,
        "wires": [
            [
                "2d04232197eb474c",
                "ad588d86dc36d777"
            ]
        ]
    },
    {
        "id": "84a3f25d798c9c7d",
        "type": "function",
        "z": "85d4e4ab83afdb00",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 580,
        "wires": [
            [
                "b0dc656bcc8534d0",
                "49aba83c043d6b22"
            ]
        ]
    },
    {
        "id": "4542c3e44cb6761a",
        "type": "function",
        "z": "85d4e4ab83afdb00",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 680,
        "wires": [
            [
                "b0881d14d1dfffb9",
                "fada20f5e65aa4e4"
            ]
        ]
    },
    {
        "id": "399abb8085a2f34c",
        "type": "function",
        "z": "85d4e4ab83afdb00",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 780,
        "wires": [
            [
                "a993bdd7db2b3acc",
                "cd4c6ffd19750eae"
            ]
        ]
    },
    {
        "id": "398b07380f219e81",
        "type": "function",
        "z": "85d4e4ab83afdb00",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 880,
        "wires": [
            [
                "5625991ad51272b7",
                "748dd22a45214d4f"
            ]
        ]
    },
    {
        "id": "7d70e3563410c466",
        "type": "function",
        "z": "85d4e4ab83afdb00",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 980,
        "wires": [
            [
                "e8d9cad860396839",
                "6a3302732cd2a47e"
            ]
        ]
    },
    {
        "id": "e472776a66fc1b08",
        "type": "function",
        "z": "85d4e4ab83afdb00",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 1080,
        "wires": [
            [
                "968c437a5edbde32",
                "9c8984330d441032"
            ]
        ]
    },
    {
        "id": "f1a8b2c5c71cc8b1",
        "type": "function",
        "z": "85d4e4ab83afdb00",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 1180,
        "wires": [
            [
                "7c55078cfba66f75",
                "9a531975b679c56e"
            ]
        ]
    },
    {
        "id": "fe2e3c75b662c7fa",
        "type": "function",
        "z": "85d4e4ab83afdb00",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 1280,
        "wires": [
            [
                "d83bf110640838a0",
                "876db2d74630b2bf"
            ]
        ]
    },
    {
        "id": "b12bf1cdfb4718e7",
        "type": "function",
        "z": "85d4e4ab83afdb00",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 1380,
        "wires": [
            [
                "054d9333a40ca24a"
            ]
        ]
    },
    {
        "id": "25d9ff110ccf3842",
        "type": "function",
        "z": "85d4e4ab83afdb00",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 1480,
        "wires": [
            [
                "b79cad4d64df921f",
                "cf05c8edc4a0ec4c"
            ]
        ]
    },
    {
        "id": "588d05232dd0eb0e",
        "type": "function",
        "z": "85d4e4ab83afdb00",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 1580,
        "wires": [
            [
                "70625816ef9ddb6c",
                "59e1b921a5bd88b1"
            ]
        ]
    },
    {
        "id": "b25f19724bc6981f",
        "type": "function",
        "z": "85d4e4ab83afdb00",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 1680,
        "wires": [
            [
                "5a93fa4a99678db5",
                "794efd5bc22fb2f5"
            ]
        ]
    },
    {
        "id": "80c64c574531738c",
        "type": "modbus-write",
        "z": "85d4e4ab83afdb00",
        "name": "DO 0 Write",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "0",
        "quantity": "1",
        "server": "790b46a78b33b4e0",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 650,
        "y": 180,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "7ebe6c9df8ad5f02",
        "type": "modbus-write",
        "z": "85d4e4ab83afdb00",
        "name": "DO 1 Write",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "1",
        "quantity": "1",
        "server": "790b46a78b33b4e0",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 650,
        "y": 280,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "55003fb9f2221739",
        "type": "modbus-write",
        "z": "85d4e4ab83afdb00",
        "name": "DO 2 Write",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "2",
        "quantity": "1",
        "server": "790b46a78b33b4e0",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 650,
        "y": 380,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "17ec126b242b9e3c",
        "type": "modbus-write",
        "z": "85d4e4ab83afdb00",
        "name": "DO 3 Write",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "3",
        "quantity": "1",
        "server": "790b46a78b33b4e0",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 650,
        "y": 480,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "b52a17724dc871c5",
        "type": "modbus-write",
        "z": "85d4e4ab83afdb00",
        "name": "DO 4 Write",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "4",
        "quantity": "1",
        "server": "790b46a78b33b4e0",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 650,
        "y": 580,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "68e2e94b23c7e342",
        "type": "modbus-write",
        "z": "85d4e4ab83afdb00",
        "name": "DO 5 Write",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "5",
        "quantity": "1",
        "server": "790b46a78b33b4e0",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 650,
        "y": 680,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "7f9a006daf2ed3ea",
        "type": "modbus-write",
        "z": "85d4e4ab83afdb00",
        "name": "DO 6 Write",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "6",
        "quantity": "1",
        "server": "790b46a78b33b4e0",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 650,
        "y": 780,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "487309459c1d7619",
        "type": "modbus-write",
        "z": "85d4e4ab83afdb00",
        "name": "DO 7 Write",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "7",
        "quantity": "1",
        "server": "790b46a78b33b4e0",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 650,
        "y": 880,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "6fb75c640082d070",
        "type": "modbus-write",
        "z": "85d4e4ab83afdb00",
        "name": "DO 8 Write",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "8",
        "quantity": "1",
        "server": "790b46a78b33b4e0",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 650,
        "y": 980,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "386884c0b6103650",
        "type": "modbus-write",
        "z": "85d4e4ab83afdb00",
        "name": "DO 9 Write",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "9",
        "quantity": "1",
        "server": "790b46a78b33b4e0",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 650,
        "y": 1080,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "3cbe56476a6f5256",
        "type": "modbus-write",
        "z": "85d4e4ab83afdb00",
        "name": "DO 10 Write",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "10",
        "quantity": "1",
        "server": "790b46a78b33b4e0",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 650,
        "y": 1180,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "38421dbc5711f10e",
        "type": "modbus-write",
        "z": "85d4e4ab83afdb00",
        "name": "DO 11 Write",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "11",
        "quantity": "1",
        "server": "790b46a78b33b4e0",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 650,
        "y": 1280,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "3d291d2eb66799cd",
        "type": "modbus-write",
        "z": "85d4e4ab83afdb00",
        "name": "DO 12 Write",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "12",
        "quantity": "1",
        "server": "790b46a78b33b4e0",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 650,
        "y": 1380,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "d3ef7c02adaf8f6a",
        "type": "modbus-write",
        "z": "85d4e4ab83afdb00",
        "name": "DO 13 Write",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "13",
        "quantity": "1",
        "server": "790b46a78b33b4e0",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 650,
        "y": 1480,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "dd7b99b5e11fc72b",
        "type": "modbus-write",
        "z": "85d4e4ab83afdb00",
        "name": "DO 14 Write",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "14",
        "quantity": "1",
        "server": "790b46a78b33b4e0",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 650,
        "y": 1580,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "0b2a2bf90c81123a",
        "type": "modbus-write",
        "z": "85d4e4ab83afdb00",
        "name": "DO 15 Write",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "15",
        "quantity": "1",
        "server": "790b46a78b33b4e0",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 650,
        "y": 1680,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "285229a4d2980bba",
        "type": "debug",
        "z": "85d4e4ab83afdb00",
        "name": "debug 207",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 500,
        "y": 140,
        "wires": []
    },
    {
        "id": "efc25717c667b430",
        "type": "debug",
        "z": "85d4e4ab83afdb00",
        "name": "debug 208",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 340,
        "y": 140,
        "wires": []
    },
    {
        "id": "f0ac095999b5a5d6",
        "type": "comment",
        "z": "85d4e4ab83afdb00",
        "name": "ControlBox DO Robot",
        "info": "# This is ControlBox Output Setting",
        "x": 180,
        "y": 100,
        "wires": []
    },
    {
        "id": "bfb57a438d0d2e11",
        "type": "debug",
        "z": "85d4e4ab83afdb00",
        "name": "debug 209",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 660,
        "y": 140,
        "wires": []
    },
    {
        "id": "4edfe56b7b830d51",
        "type": "debug",
        "z": "85d4e4ab83afdb00",
        "name": "debug 210",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 500,
        "y": 240,
        "wires": []
    },
    {
        "id": "31e3867b4aa7dae3",
        "type": "debug",
        "z": "85d4e4ab83afdb00",
        "name": "debug 211",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 340,
        "y": 240,
        "wires": []
    },
    {
        "id": "c45ee72998ec6e15",
        "type": "debug",
        "z": "85d4e4ab83afdb00",
        "name": "debug 212",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 660,
        "y": 240,
        "wires": []
    },
    {
        "id": "fca729589ff20172",
        "type": "debug",
        "z": "85d4e4ab83afdb00",
        "name": "debug 213",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 500,
        "y": 340,
        "wires": []
    },
    {
        "id": "b4019194caa70308",
        "type": "debug",
        "z": "85d4e4ab83afdb00",
        "name": "debug 214",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 340,
        "y": 340,
        "wires": []
    },
    {
        "id": "256d3c365c033bc8",
        "type": "debug",
        "z": "85d4e4ab83afdb00",
        "name": "debug 215",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 660,
        "y": 340,
        "wires": []
    },
    {
        "id": "ad588d86dc36d777",
        "type": "debug",
        "z": "85d4e4ab83afdb00",
        "name": "debug 216",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 500,
        "y": 440,
        "wires": []
    },
    {
        "id": "d623cb123095d43a",
        "type": "debug",
        "z": "85d4e4ab83afdb00",
        "name": "debug 217",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 340,
        "y": 440,
        "wires": []
    },
    {
        "id": "89264b14a847f81b",
        "type": "debug",
        "z": "85d4e4ab83afdb00",
        "name": "debug 218",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 660,
        "y": 440,
        "wires": []
    },
    {
        "id": "49aba83c043d6b22",
        "type": "debug",
        "z": "85d4e4ab83afdb00",
        "name": "debug 219",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 500,
        "y": 540,
        "wires": []
    },
    {
        "id": "2177763c7d4e0a7f",
        "type": "debug",
        "z": "85d4e4ab83afdb00",
        "name": "debug 220",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 340,
        "y": 540,
        "wires": []
    },
    {
        "id": "e2b3abd25daa302e",
        "type": "debug",
        "z": "85d4e4ab83afdb00",
        "name": "debug 221",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 660,
        "y": 540,
        "wires": []
    },
    {
        "id": "fada20f5e65aa4e4",
        "type": "debug",
        "z": "85d4e4ab83afdb00",
        "name": "debug 222",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 500,
        "y": 640,
        "wires": []
    },
    {
        "id": "a7ab7d9126954db5",
        "type": "debug",
        "z": "85d4e4ab83afdb00",
        "name": "debug 223",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 340,
        "y": 640,
        "wires": []
    },
    {
        "id": "2c002c233b14e123",
        "type": "debug",
        "z": "85d4e4ab83afdb00",
        "name": "debug 224",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 660,
        "y": 640,
        "wires": []
    },
    {
        "id": "cd4c6ffd19750eae",
        "type": "debug",
        "z": "85d4e4ab83afdb00",
        "name": "debug 225",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 500,
        "y": 740,
        "wires": []
    },
    {
        "id": "341842cbaa85b322",
        "type": "debug",
        "z": "85d4e4ab83afdb00",
        "name": "debug 226",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 340,
        "y": 740,
        "wires": []
    },
    {
        "id": "20c571d04d38c665",
        "type": "debug",
        "z": "85d4e4ab83afdb00",
        "name": "debug 227",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 660,
        "y": 740,
        "wires": []
    },
    {
        "id": "748dd22a45214d4f",
        "type": "debug",
        "z": "85d4e4ab83afdb00",
        "name": "debug 228",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 500,
        "y": 840,
        "wires": []
    },
    {
        "id": "a687f66d0be2c56c",
        "type": "debug",
        "z": "85d4e4ab83afdb00",
        "name": "debug 229",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 340,
        "y": 840,
        "wires": []
    },
    {
        "id": "e9d25fd9b34efebb",
        "type": "debug",
        "z": "85d4e4ab83afdb00",
        "name": "debug 230",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 660,
        "y": 840,
        "wires": []
    },
    {
        "id": "6a3302732cd2a47e",
        "type": "debug",
        "z": "85d4e4ab83afdb00",
        "name": "debug 231",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 500,
        "y": 940,
        "wires": []
    },
    {
        "id": "576c37af4d220347",
        "type": "debug",
        "z": "85d4e4ab83afdb00",
        "name": "debug 232",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 340,
        "y": 940,
        "wires": []
    },
    {
        "id": "7b802f6a0d543353",
        "type": "debug",
        "z": "85d4e4ab83afdb00",
        "name": "debug 233",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 660,
        "y": 940,
        "wires": []
    },
    {
        "id": "9c8984330d441032",
        "type": "debug",
        "z": "85d4e4ab83afdb00",
        "name": "debug 234",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 500,
        "y": 1040,
        "wires": []
    },
    {
        "id": "790fa0ad9a95e33f",
        "type": "debug",
        "z": "85d4e4ab83afdb00",
        "name": "debug 235",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 340,
        "y": 1040,
        "wires": []
    },
    {
        "id": "b767cfb3925ec7bd",
        "type": "debug",
        "z": "85d4e4ab83afdb00",
        "name": "debug 236",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 660,
        "y": 1040,
        "wires": []
    },
    {
        "id": "9a531975b679c56e",
        "type": "debug",
        "z": "85d4e4ab83afdb00",
        "name": "debug 237",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 500,
        "y": 1140,
        "wires": []
    },
    {
        "id": "f8493aa18ba6a79c",
        "type": "debug",
        "z": "85d4e4ab83afdb00",
        "name": "debug 238",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 340,
        "y": 1140,
        "wires": []
    },
    {
        "id": "32652ee7030348a7",
        "type": "debug",
        "z": "85d4e4ab83afdb00",
        "name": "debug 239",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 660,
        "y": 1140,
        "wires": []
    },
    {
        "id": "876db2d74630b2bf",
        "type": "debug",
        "z": "85d4e4ab83afdb00",
        "name": "debug 240",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 500,
        "y": 1240,
        "wires": []
    },
    {
        "id": "0f9ee8955895cdc3",
        "type": "debug",
        "z": "85d4e4ab83afdb00",
        "name": "debug 241",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 340,
        "y": 1240,
        "wires": []
    },
    {
        "id": "986c78c74313fb90",
        "type": "debug",
        "z": "85d4e4ab83afdb00",
        "name": "debug 242",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 660,
        "y": 1240,
        "wires": []
    },
    {
        "id": "4ae9e190f59c249a",
        "type": "debug",
        "z": "85d4e4ab83afdb00",
        "name": "debug 243",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 500,
        "y": 1340,
        "wires": []
    },
    {
        "id": "6443870bd8f1867d",
        "type": "debug",
        "z": "85d4e4ab83afdb00",
        "name": "debug 244",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 340,
        "y": 1340,
        "wires": []
    },
    {
        "id": "50f77f390c45b25a",
        "type": "debug",
        "z": "85d4e4ab83afdb00",
        "name": "debug 245",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 660,
        "y": 1340,
        "wires": []
    },
    {
        "id": "cf05c8edc4a0ec4c",
        "type": "debug",
        "z": "85d4e4ab83afdb00",
        "name": "debug 246",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 500,
        "y": 1440,
        "wires": []
    },
    {
        "id": "3737d43a3756db27",
        "type": "debug",
        "z": "85d4e4ab83afdb00",
        "name": "debug 247",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 340,
        "y": 1440,
        "wires": []
    },
    {
        "id": "c55c567b0c230e50",
        "type": "debug",
        "z": "85d4e4ab83afdb00",
        "name": "debug 248",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 660,
        "y": 1440,
        "wires": []
    },
    {
        "id": "59e1b921a5bd88b1",
        "type": "debug",
        "z": "85d4e4ab83afdb00",
        "name": "debug 249",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 500,
        "y": 1540,
        "wires": []
    },
    {
        "id": "080a2dc708b152e1",
        "type": "debug",
        "z": "85d4e4ab83afdb00",
        "name": "debug 250",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 340,
        "y": 1540,
        "wires": []
    },
    {
        "id": "ddc402982748a936",
        "type": "debug",
        "z": "85d4e4ab83afdb00",
        "name": "debug 251",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 660,
        "y": 1540,
        "wires": []
    },
    {
        "id": "794efd5bc22fb2f5",
        "type": "debug",
        "z": "85d4e4ab83afdb00",
        "name": "debug 252",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 500,
        "y": 1640,
        "wires": []
    },
    {
        "id": "756383b4552b5e2d",
        "type": "debug",
        "z": "85d4e4ab83afdb00",
        "name": "debug 253",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 340,
        "y": 1640,
        "wires": []
    },
    {
        "id": "e9d43900dfea8daf",
        "type": "debug",
        "z": "85d4e4ab83afdb00",
        "name": "debug 254",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 660,
        "y": 1640,
        "wires": []
    },
    {
        "id": "7b1eeda468cf8ffe",
        "type": "modbus-read",
        "z": "85d4e4ab83afdb00",
        "name": "DI 0 Read",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Input",
        "adr": "0",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "f5e59be3ef794208",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 900,
        "y": 180,
        "wires": [
            [
                "93477224e4a71ed1",
                "70b469b61619f341"
            ],
            []
        ]
    },
    {
        "id": "93477224e4a71ed1",
        "type": "function",
        "z": "85d4e4ab83afdb00",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    //return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1080,
        "y": 180,
        "wires": [
            [
                "df31134361fc7bd6",
                "0c3b669ad0f537f5"
            ]
        ]
    },
    {
        "id": "fe4713c4aa1088ea",
        "type": "modbus-read",
        "z": "85d4e4ab83afdb00",
        "name": "DI 1 Read",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Input",
        "adr": "1",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "f5e59be3ef794208",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 900,
        "y": 280,
        "wires": [
            [
                "09670665d8f1f373",
                "e8d6f046474b3c48"
            ],
            []
        ]
    },
    {
        "id": "09670665d8f1f373",
        "type": "function",
        "z": "85d4e4ab83afdb00",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    //return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1080,
        "y": 280,
        "wires": [
            [
                "70143f8a38498727",
                "e5cf6ee8ff0c66ad"
            ]
        ]
    },
    {
        "id": "55ce0acd130609e4",
        "type": "modbus-read",
        "z": "85d4e4ab83afdb00",
        "name": "DI 2 Read",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Input",
        "adr": "2",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "f5e59be3ef794208",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 900,
        "y": 380,
        "wires": [
            [
                "51b4b04a060ecdab",
                "f2eed6c3f245841d"
            ],
            []
        ]
    },
    {
        "id": "51b4b04a060ecdab",
        "type": "function",
        "z": "85d4e4ab83afdb00",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    //return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1080,
        "y": 380,
        "wires": [
            [
                "b72c1e0ccb8943fb",
                "e57716a24663347f"
            ]
        ]
    },
    {
        "id": "f68b32e4b1b3ac20",
        "type": "modbus-read",
        "z": "85d4e4ab83afdb00",
        "name": "DI 3 Read",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Input",
        "adr": "3",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "f5e59be3ef794208",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 900,
        "y": 480,
        "wires": [
            [
                "2700ed8e98cd7bd7",
                "a3fe1dcdaf95ed2b"
            ],
            []
        ]
    },
    {
        "id": "2700ed8e98cd7bd7",
        "type": "function",
        "z": "85d4e4ab83afdb00",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    //return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1080,
        "y": 480,
        "wires": [
            [
                "f9d493f5b5fe6759",
                "556b213470c44ad2"
            ]
        ]
    },
    {
        "id": "2f4fcfe4f474183b",
        "type": "modbus-read",
        "z": "85d4e4ab83afdb00",
        "name": "DI 4 Read",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Input",
        "adr": "4",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "f5e59be3ef794208",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 900,
        "y": 580,
        "wires": [
            [
                "6ad9656dfd4c5898",
                "87f1eba712013980"
            ],
            []
        ]
    },
    {
        "id": "6ad9656dfd4c5898",
        "type": "function",
        "z": "85d4e4ab83afdb00",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    //return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1080,
        "y": 580,
        "wires": [
            [
                "33c439ee03317148",
                "51cf1f062d44b683"
            ]
        ]
    },
    {
        "id": "9e50769195a1e51c",
        "type": "modbus-read",
        "z": "85d4e4ab83afdb00",
        "name": "DI 5 Read",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Input",
        "adr": "5",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "f5e59be3ef794208",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 900,
        "y": 680,
        "wires": [
            [
                "465a88851d10a113",
                "12ad20ddcd2ac290"
            ],
            []
        ]
    },
    {
        "id": "465a88851d10a113",
        "type": "function",
        "z": "85d4e4ab83afdb00",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    //return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1080,
        "y": 680,
        "wires": [
            [
                "3d8d597508fd7fff",
                "8e07379805492e70"
            ]
        ]
    },
    {
        "id": "2164f83a1dab2f93",
        "type": "modbus-read",
        "z": "85d4e4ab83afdb00",
        "name": "DI 6 Read",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Input",
        "adr": "6",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "f5e59be3ef794208",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 900,
        "y": 780,
        "wires": [
            [
                "32280d4f0be49e16",
                "0165f66b04492beb"
            ],
            []
        ]
    },
    {
        "id": "32280d4f0be49e16",
        "type": "function",
        "z": "85d4e4ab83afdb00",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    //return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1080,
        "y": 780,
        "wires": [
            [
                "ee850d48baf3ce28",
                "9878821b7202a52c"
            ]
        ]
    },
    {
        "id": "c6c2b7cdf93ceeaa",
        "type": "modbus-read",
        "z": "85d4e4ab83afdb00",
        "name": "DI 7 Read",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Input",
        "adr": "7",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "f5e59be3ef794208",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 900,
        "y": 880,
        "wires": [
            [
                "b7dbcb719f3a1bd6",
                "14d1e2fd1304b0bc"
            ],
            []
        ]
    },
    {
        "id": "b7dbcb719f3a1bd6",
        "type": "function",
        "z": "85d4e4ab83afdb00",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    //return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1080,
        "y": 880,
        "wires": [
            [
                "951840628f4272f9",
                "5fe00a68b48993dc"
            ]
        ]
    },
    {
        "id": "8371dad7f482a751",
        "type": "modbus-read",
        "z": "85d4e4ab83afdb00",
        "name": "DI 8 Read",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Input",
        "adr": "8",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "f5e59be3ef794208",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 900,
        "y": 980,
        "wires": [
            [
                "d694adf6697b47eb",
                "4789ad3e8cf76bbc"
            ],
            []
        ]
    },
    {
        "id": "d694adf6697b47eb",
        "type": "function",
        "z": "85d4e4ab83afdb00",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    //return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1080,
        "y": 980,
        "wires": [
            [
                "2a97719ce665f43a",
                "db43a042449e5dea"
            ]
        ]
    },
    {
        "id": "bc64b9fb8c963076",
        "type": "modbus-read",
        "z": "85d4e4ab83afdb00",
        "name": "DI 9 Read",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Input",
        "adr": "9",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "f5e59be3ef794208",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 900,
        "y": 1080,
        "wires": [
            [
                "cae6917cc0236752",
                "16fffbd5022bf3ef"
            ],
            []
        ]
    },
    {
        "id": "cae6917cc0236752",
        "type": "function",
        "z": "85d4e4ab83afdb00",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    //return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1080,
        "y": 1080,
        "wires": [
            [
                "e28f0a1d1ade4b09",
                "c458b992bf2d1b3d"
            ]
        ]
    },
    {
        "id": "ff3cf80f2b36f152",
        "type": "modbus-read",
        "z": "85d4e4ab83afdb00",
        "name": "DI 10 Read",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Input",
        "adr": "10",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "f5e59be3ef794208",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 910,
        "y": 1180,
        "wires": [
            [
                "70ac5c272c50c709"
            ],
            []
        ]
    },
    {
        "id": "70ac5c272c50c709",
        "type": "function",
        "z": "85d4e4ab83afdb00",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    //return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1080,
        "y": 1180,
        "wires": [
            [
                "dca07974ce688708"
            ]
        ]
    },
    {
        "id": "cedf1edfb6ca5ee4",
        "type": "modbus-read",
        "z": "85d4e4ab83afdb00",
        "name": "DI 11 Read",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Input",
        "adr": "11",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "f5e59be3ef794208",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 900,
        "y": 1280,
        "wires": [
            [
                "7ab2b25917300ad0",
                "57f9436bd0bd72bb"
            ],
            []
        ]
    },
    {
        "id": "7ab2b25917300ad0",
        "type": "function",
        "z": "85d4e4ab83afdb00",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    //return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1080,
        "y": 1280,
        "wires": [
            [
                "8a8c91231e5a9ec0",
                "2bdec489ae58c050"
            ]
        ]
    },
    {
        "id": "21ccc243b86a85c1",
        "type": "modbus-read",
        "z": "85d4e4ab83afdb00",
        "name": "DI 12 Read",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Input",
        "adr": "12",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "f5e59be3ef794208",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 910,
        "y": 1380,
        "wires": [
            [
                "ebdfc8b0985e9729",
                "519670162a65b4ec"
            ],
            []
        ]
    },
    {
        "id": "ebdfc8b0985e9729",
        "type": "function",
        "z": "85d4e4ab83afdb00",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    //return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1080,
        "y": 1380,
        "wires": [
            [
                "157c4eb0283b9086",
                "36341c8374f17bc6"
            ]
        ]
    },
    {
        "id": "f81f02694da620d3",
        "type": "modbus-read",
        "z": "85d4e4ab83afdb00",
        "name": "DI 13 Read",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Input",
        "adr": "13",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "f5e59be3ef794208",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 910,
        "y": 1480,
        "wires": [
            [
                "9c66f5b8e7fb9858",
                "f5ea82e6f1c3a005"
            ],
            []
        ]
    },
    {
        "id": "9c66f5b8e7fb9858",
        "type": "function",
        "z": "85d4e4ab83afdb00",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    //return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1080,
        "y": 1480,
        "wires": [
            [
                "3b8570df6292843d",
                "5b580960be91e6f1"
            ]
        ]
    },
    {
        "id": "d71bdc8293ea28e1",
        "type": "modbus-read",
        "z": "85d4e4ab83afdb00",
        "name": "DI 14 Read",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Input",
        "adr": "14",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "f5e59be3ef794208",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 910,
        "y": 1580,
        "wires": [
            [
                "fb5d24ea4b05d825",
                "dd6c2b59c5e1aa18"
            ],
            []
        ]
    },
    {
        "id": "fb5d24ea4b05d825",
        "type": "function",
        "z": "85d4e4ab83afdb00",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    //return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1080,
        "y": 1580,
        "wires": [
            [
                "659b97f92fec55dd",
                "d563c221ce2aa5f4"
            ]
        ]
    },
    {
        "id": "30d7efe99c538cea",
        "type": "modbus-read",
        "z": "85d4e4ab83afdb00",
        "name": "DI 15 Read",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Input",
        "adr": "15",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "f5e59be3ef794208",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 910,
        "y": 1680,
        "wires": [
            [
                "e3b461347b2389e6",
                "0c9024065c2821eb"
            ],
            []
        ]
    },
    {
        "id": "e3b461347b2389e6",
        "type": "function",
        "z": "85d4e4ab83afdb00",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    //return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1080,
        "y": 1680,
        "wires": [
            [
                "1f0a292e6cb42cbb",
                "a5a4c78d5d990604"
            ]
        ]
    },
    {
        "id": "99ffa79e25763e2d",
        "type": "ui_text",
        "z": "85d4e4ab83afdb00",
        "group": "604aa2c5ba4d8d7b",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "DI 0 : ",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1470,
        "y": 180,
        "wires": []
    },
    {
        "id": "df31134361fc7bd6",
        "type": "change",
        "z": "85d4e4ab83afdb00",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "bool",
                "to": "Working",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "bool",
                "to": "Not Working",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1280,
        "y": 180,
        "wires": [
            [
                "99ffa79e25763e2d"
            ]
        ]
    },
    {
        "id": "876eaea36d2ec18b",
        "type": "ui_text",
        "z": "85d4e4ab83afdb00",
        "group": "604aa2c5ba4d8d7b",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "DI 1 : ",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1470,
        "y": 280,
        "wires": []
    },
    {
        "id": "70143f8a38498727",
        "type": "change",
        "z": "85d4e4ab83afdb00",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "bool",
                "to": "Working",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "bool",
                "to": "Not Working",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1280,
        "y": 280,
        "wires": [
            [
                "876eaea36d2ec18b"
            ]
        ]
    },
    {
        "id": "f45a822fe67023af",
        "type": "ui_text",
        "z": "85d4e4ab83afdb00",
        "group": "604aa2c5ba4d8d7b",
        "order": 16,
        "width": "0",
        "height": "0",
        "name": "",
        "label": "DI 2 : ",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1470,
        "y": 380,
        "wires": []
    },
    {
        "id": "b72c1e0ccb8943fb",
        "type": "change",
        "z": "85d4e4ab83afdb00",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "bool",
                "to": "Working",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "bool",
                "to": "Not Working",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1280,
        "y": 380,
        "wires": [
            [
                "f45a822fe67023af"
            ]
        ]
    },
    {
        "id": "37bfbe38df7fd52d",
        "type": "ui_text",
        "z": "85d4e4ab83afdb00",
        "group": "604aa2c5ba4d8d7b",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "DI 3 : ",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1470,
        "y": 480,
        "wires": []
    },
    {
        "id": "f9d493f5b5fe6759",
        "type": "change",
        "z": "85d4e4ab83afdb00",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "bool",
                "to": "Working",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "bool",
                "to": "Not Working",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1280,
        "y": 480,
        "wires": [
            [
                "37bfbe38df7fd52d"
            ]
        ]
    },
    {
        "id": "bfb329e9f4b42be2",
        "type": "ui_text",
        "z": "85d4e4ab83afdb00",
        "group": "604aa2c5ba4d8d7b",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "DI 4 : ",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1470,
        "y": 580,
        "wires": []
    },
    {
        "id": "33c439ee03317148",
        "type": "change",
        "z": "85d4e4ab83afdb00",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "bool",
                "to": "Working",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "bool",
                "to": "Not Working",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1280,
        "y": 580,
        "wires": [
            [
                "bfb329e9f4b42be2"
            ]
        ]
    },
    {
        "id": "467e72c11790bd02",
        "type": "ui_text",
        "z": "85d4e4ab83afdb00",
        "group": "604aa2c5ba4d8d7b",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "DI 5 : ",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1470,
        "y": 680,
        "wires": []
    },
    {
        "id": "3d8d597508fd7fff",
        "type": "change",
        "z": "85d4e4ab83afdb00",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "bool",
                "to": "Working",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "bool",
                "to": "Not Working",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1280,
        "y": 680,
        "wires": [
            [
                "467e72c11790bd02"
            ]
        ]
    },
    {
        "id": "b4ca1b08c359c078",
        "type": "ui_text",
        "z": "85d4e4ab83afdb00",
        "group": "604aa2c5ba4d8d7b",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "DI 6 : ",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1470,
        "y": 780,
        "wires": []
    },
    {
        "id": "ee850d48baf3ce28",
        "type": "change",
        "z": "85d4e4ab83afdb00",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "bool",
                "to": "Working",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "bool",
                "to": "Not Working",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1280,
        "y": 780,
        "wires": [
            [
                "b4ca1b08c359c078"
            ]
        ]
    },
    {
        "id": "80e459a009dc1cc2",
        "type": "ui_text",
        "z": "85d4e4ab83afdb00",
        "group": "604aa2c5ba4d8d7b",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "DI 7 : ",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1470,
        "y": 880,
        "wires": []
    },
    {
        "id": "951840628f4272f9",
        "type": "change",
        "z": "85d4e4ab83afdb00",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "bool",
                "to": "Working",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "bool",
                "to": "Not Working",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1280,
        "y": 880,
        "wires": [
            [
                "80e459a009dc1cc2"
            ]
        ]
    },
    {
        "id": "1c5866088d16ae63",
        "type": "ui_text",
        "z": "85d4e4ab83afdb00",
        "group": "604aa2c5ba4d8d7b",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "DI 8 : ",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1470,
        "y": 980,
        "wires": []
    },
    {
        "id": "2a97719ce665f43a",
        "type": "change",
        "z": "85d4e4ab83afdb00",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "bool",
                "to": "Working",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "bool",
                "to": "Not Working",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1280,
        "y": 980,
        "wires": [
            [
                "1c5866088d16ae63"
            ]
        ]
    },
    {
        "id": "8f12288df88fbd87",
        "type": "ui_text",
        "z": "85d4e4ab83afdb00",
        "group": "604aa2c5ba4d8d7b",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "DI 9 : ",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1470,
        "y": 1080,
        "wires": []
    },
    {
        "id": "e28f0a1d1ade4b09",
        "type": "change",
        "z": "85d4e4ab83afdb00",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "bool",
                "to": "Working",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "bool",
                "to": "Not Working",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1280,
        "y": 1080,
        "wires": [
            [
                "8f12288df88fbd87"
            ]
        ]
    },
    {
        "id": "b5010eb0ad47fd48",
        "type": "ui_text",
        "z": "85d4e4ab83afdb00",
        "group": "604aa2c5ba4d8d7b",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "DI 10 : ",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1470,
        "y": 1180,
        "wires": []
    },
    {
        "id": "dca07974ce688708",
        "type": "change",
        "z": "85d4e4ab83afdb00",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "bool",
                "to": "Working",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "bool",
                "to": "Not Working",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1280,
        "y": 1180,
        "wires": [
            [
                "b5010eb0ad47fd48"
            ]
        ]
    },
    {
        "id": "dfe2fbcf1b7f2397",
        "type": "ui_text",
        "z": "85d4e4ab83afdb00",
        "group": "604aa2c5ba4d8d7b",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "DI 11 : ",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1470,
        "y": 1280,
        "wires": []
    },
    {
        "id": "8a8c91231e5a9ec0",
        "type": "change",
        "z": "85d4e4ab83afdb00",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "bool",
                "to": "Working",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "bool",
                "to": "Not Working",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1280,
        "y": 1280,
        "wires": [
            [
                "dfe2fbcf1b7f2397"
            ]
        ]
    },
    {
        "id": "ed8406c9cbd0eda1",
        "type": "ui_text",
        "z": "85d4e4ab83afdb00",
        "group": "604aa2c5ba4d8d7b",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "DI 12 : ",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1470,
        "y": 1380,
        "wires": []
    },
    {
        "id": "157c4eb0283b9086",
        "type": "change",
        "z": "85d4e4ab83afdb00",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "bool",
                "to": "Working",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "bool",
                "to": "Not Working",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1280,
        "y": 1380,
        "wires": [
            [
                "ed8406c9cbd0eda1"
            ]
        ]
    },
    {
        "id": "96a0af9dcebbb090",
        "type": "ui_text",
        "z": "85d4e4ab83afdb00",
        "group": "604aa2c5ba4d8d7b",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "DI 13 : ",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1470,
        "y": 1480,
        "wires": []
    },
    {
        "id": "3b8570df6292843d",
        "type": "change",
        "z": "85d4e4ab83afdb00",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "bool",
                "to": "Working",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "bool",
                "to": "Not Working",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1280,
        "y": 1480,
        "wires": [
            [
                "96a0af9dcebbb090"
            ]
        ]
    },
    {
        "id": "615ca936264cdf56",
        "type": "ui_text",
        "z": "85d4e4ab83afdb00",
        "group": "604aa2c5ba4d8d7b",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "DI 14 : ",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1470,
        "y": 1580,
        "wires": []
    },
    {
        "id": "659b97f92fec55dd",
        "type": "change",
        "z": "85d4e4ab83afdb00",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "bool",
                "to": "Working",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "bool",
                "to": "Not Working",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1280,
        "y": 1580,
        "wires": [
            [
                "615ca936264cdf56"
            ]
        ]
    },
    {
        "id": "96f2e976def6fe35",
        "type": "ui_text",
        "z": "85d4e4ab83afdb00",
        "group": "604aa2c5ba4d8d7b",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "DI 15 : ",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1470,
        "y": 1680,
        "wires": []
    },
    {
        "id": "1f0a292e6cb42cbb",
        "type": "change",
        "z": "85d4e4ab83afdb00",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "bool",
                "to": "Working",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "bool",
                "to": "Not Working",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1280,
        "y": 1680,
        "wires": [
            [
                "96f2e976def6fe35"
            ]
        ]
    },
    {
        "id": "f6e4c1293e9d758b",
        "type": "comment",
        "z": "85d4e4ab83afdb00",
        "name": "ControlBox DI Robot",
        "info": "# This is ControlBox Input Setting",
        "x": 910,
        "y": 120,
        "wires": []
    },
    {
        "id": "70b469b61619f341",
        "type": "debug",
        "z": "85d4e4ab83afdb00",
        "name": "debug 255",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1080,
        "y": 140,
        "wires": []
    },
    {
        "id": "0c3b669ad0f537f5",
        "type": "debug",
        "z": "85d4e4ab83afdb00",
        "name": "debug 256",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1260,
        "y": 140,
        "wires": []
    },
    {
        "id": "e8d6f046474b3c48",
        "type": "debug",
        "z": "85d4e4ab83afdb00",
        "name": "debug 257",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1080,
        "y": 240,
        "wires": []
    },
    {
        "id": "e5cf6ee8ff0c66ad",
        "type": "debug",
        "z": "85d4e4ab83afdb00",
        "name": "debug 258",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1260,
        "y": 240,
        "wires": []
    },
    {
        "id": "f2eed6c3f245841d",
        "type": "debug",
        "z": "85d4e4ab83afdb00",
        "name": "debug 259",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1080,
        "y": 340,
        "wires": []
    },
    {
        "id": "e57716a24663347f",
        "type": "debug",
        "z": "85d4e4ab83afdb00",
        "name": "debug 260",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1260,
        "y": 340,
        "wires": []
    },
    {
        "id": "a3fe1dcdaf95ed2b",
        "type": "debug",
        "z": "85d4e4ab83afdb00",
        "name": "debug 261",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1080,
        "y": 440,
        "wires": []
    },
    {
        "id": "556b213470c44ad2",
        "type": "debug",
        "z": "85d4e4ab83afdb00",
        "name": "debug 262",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1260,
        "y": 440,
        "wires": []
    },
    {
        "id": "87f1eba712013980",
        "type": "debug",
        "z": "85d4e4ab83afdb00",
        "name": "debug 263",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1080,
        "y": 540,
        "wires": []
    },
    {
        "id": "51cf1f062d44b683",
        "type": "debug",
        "z": "85d4e4ab83afdb00",
        "name": "debug 264",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1260,
        "y": 540,
        "wires": []
    },
    {
        "id": "12ad20ddcd2ac290",
        "type": "debug",
        "z": "85d4e4ab83afdb00",
        "name": "debug 265",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1080,
        "y": 640,
        "wires": []
    },
    {
        "id": "8e07379805492e70",
        "type": "debug",
        "z": "85d4e4ab83afdb00",
        "name": "debug 266",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1260,
        "y": 640,
        "wires": []
    },
    {
        "id": "0165f66b04492beb",
        "type": "debug",
        "z": "85d4e4ab83afdb00",
        "name": "debug 267",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1080,
        "y": 740,
        "wires": []
    },
    {
        "id": "9878821b7202a52c",
        "type": "debug",
        "z": "85d4e4ab83afdb00",
        "name": "debug 268",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1260,
        "y": 740,
        "wires": []
    },
    {
        "id": "14d1e2fd1304b0bc",
        "type": "debug",
        "z": "85d4e4ab83afdb00",
        "name": "debug 269",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1080,
        "y": 840,
        "wires": []
    },
    {
        "id": "5fe00a68b48993dc",
        "type": "debug",
        "z": "85d4e4ab83afdb00",
        "name": "debug 270",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1260,
        "y": 840,
        "wires": []
    },
    {
        "id": "4789ad3e8cf76bbc",
        "type": "debug",
        "z": "85d4e4ab83afdb00",
        "name": "debug 271",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1080,
        "y": 940,
        "wires": []
    },
    {
        "id": "db43a042449e5dea",
        "type": "debug",
        "z": "85d4e4ab83afdb00",
        "name": "debug 272",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1260,
        "y": 940,
        "wires": []
    },
    {
        "id": "16fffbd5022bf3ef",
        "type": "debug",
        "z": "85d4e4ab83afdb00",
        "name": "debug 273",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1080,
        "y": 1040,
        "wires": []
    },
    {
        "id": "c458b992bf2d1b3d",
        "type": "debug",
        "z": "85d4e4ab83afdb00",
        "name": "debug 274",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1260,
        "y": 1040,
        "wires": []
    },
    {
        "id": "59c27a5c0d016fa4",
        "type": "debug",
        "z": "85d4e4ab83afdb00",
        "name": "debug 275",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1080,
        "y": 1140,
        "wires": []
    },
    {
        "id": "16bed7f1d637a1de",
        "type": "debug",
        "z": "85d4e4ab83afdb00",
        "name": "debug 276",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1260,
        "y": 1140,
        "wires": []
    },
    {
        "id": "57f9436bd0bd72bb",
        "type": "debug",
        "z": "85d4e4ab83afdb00",
        "name": "debug 277",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1080,
        "y": 1240,
        "wires": []
    },
    {
        "id": "2bdec489ae58c050",
        "type": "debug",
        "z": "85d4e4ab83afdb00",
        "name": "debug 278",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1260,
        "y": 1240,
        "wires": []
    },
    {
        "id": "519670162a65b4ec",
        "type": "debug",
        "z": "85d4e4ab83afdb00",
        "name": "debug 279",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1080,
        "y": 1340,
        "wires": []
    },
    {
        "id": "36341c8374f17bc6",
        "type": "debug",
        "z": "85d4e4ab83afdb00",
        "name": "debug 280",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1260,
        "y": 1340,
        "wires": []
    },
    {
        "id": "f5ea82e6f1c3a005",
        "type": "debug",
        "z": "85d4e4ab83afdb00",
        "name": "debug 281",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1080,
        "y": 1440,
        "wires": []
    },
    {
        "id": "5b580960be91e6f1",
        "type": "debug",
        "z": "85d4e4ab83afdb00",
        "name": "debug 282",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1260,
        "y": 1440,
        "wires": []
    },
    {
        "id": "dd6c2b59c5e1aa18",
        "type": "debug",
        "z": "85d4e4ab83afdb00",
        "name": "debug 283",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1080,
        "y": 1540,
        "wires": []
    },
    {
        "id": "d563c221ce2aa5f4",
        "type": "debug",
        "z": "85d4e4ab83afdb00",
        "name": "debug 284",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1260,
        "y": 1540,
        "wires": []
    },
    {
        "id": "0c9024065c2821eb",
        "type": "debug",
        "z": "85d4e4ab83afdb00",
        "name": "debug 285",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1080,
        "y": 1640,
        "wires": []
    },
    {
        "id": "a5a4c78d5d990604",
        "type": "debug",
        "z": "85d4e4ab83afdb00",
        "name": "debug 286",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1260,
        "y": 1640,
        "wires": []
    },
    {
        "id": "56b0ed14a8e0f87f",
        "type": "modbus-read",
        "z": "85d4e4ab83afdb00",
        "name": "Error or Not",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Input",
        "adr": "7201",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "f5e59be3ef794208",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 1710,
        "y": 200,
        "wires": [
            [
                "a585673eaa97ffba",
                "6a992c5fd0344e49"
            ],
            []
        ]
    },
    {
        "id": "4ec928b6ae8180c4",
        "type": "comment",
        "z": "85d4e4ab83afdb00",
        "name": "Robot Status",
        "info": "# This is Robot Status",
        "x": 1710,
        "y": 140,
        "wires": []
    },
    {
        "id": "ad0b7d547ab7be96",
        "type": "modbus-read",
        "z": "85d4e4ab83afdb00",
        "name": "Project Running or Not",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Input",
        "adr": "7202",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "f5e59be3ef794208",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 1740,
        "y": 300,
        "wires": [
            [
                "13ce2a633b5c861e",
                "990a2d51c90c6ab9"
            ],
            []
        ]
    },
    {
        "id": "3e9b14001b2c72f0",
        "type": "modbus-read",
        "z": "85d4e4ab83afdb00",
        "name": "Project Editing or Not",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Input",
        "adr": "7203",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "f5e59be3ef794208",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 1740,
        "y": 400,
        "wires": [
            [
                "d4ccfabb22552594",
                "e6bcec26f8857427"
            ],
            []
        ]
    },
    {
        "id": "7648af0a7311891b",
        "type": "modbus-read",
        "z": "85d4e4ab83afdb00",
        "name": "Project Pause or Not",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Input",
        "adr": "7204",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "f5e59be3ef794208",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 1730,
        "y": 500,
        "wires": [
            [
                "7c54f8f788c50fb1",
                "329a2fd1cee31e66"
            ],
            []
        ]
    },
    {
        "id": "502b9a635d0a86bd",
        "type": "modbus-read",
        "z": "85d4e4ab83afdb00",
        "name": "Get Control or Not",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Input",
        "adr": "7205",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "f5e59be3ef794208",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 1730,
        "y": 600,
        "wires": [
            [
                "183da9497350b415",
                "c838a7407a85f05f"
            ],
            []
        ]
    },
    {
        "id": "37530918ece214e9",
        "type": "modbus-read",
        "z": "85d4e4ab83afdb00",
        "name": "Light on or not",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Input",
        "adr": "7206",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "f5e59be3ef794208",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 1710,
        "y": 700,
        "wires": [
            [
                "50394463819a07b6",
                "4136ccb0b9a36ccc"
            ],
            []
        ]
    },
    {
        "id": "bd14e8914df7c766",
        "type": "modbus-read",
        "z": "85d4e4ab83afdb00",
        "name": "Safety IO or not",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Input",
        "adr": "7207",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "f5e59be3ef794208",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 1720,
        "y": 800,
        "wires": [
            [
                "3afe36ce69a09abe",
                "d5c9a3ad26ad9e90"
            ],
            []
        ]
    },
    {
        "id": "1dc98678d6d89ba8",
        "type": "modbus-read",
        "z": "85d4e4ab83afdb00",
        "name": "E-Stop or not",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Input",
        "adr": "7208",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "f5e59be3ef794208",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 1710,
        "y": 900,
        "wires": [
            [
                "a3467e82ada1f649",
                "d7548096998e660f"
            ],
            []
        ]
    },
    {
        "id": "a585673eaa97ffba",
        "type": "function",
        "z": "85d4e4ab83afdb00",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    //return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1900,
        "y": 200,
        "wires": [
            [
                "3e32c6098d751ca5",
                "87cf5d3efb88e088"
            ]
        ]
    },
    {
        "id": "13ce2a633b5c861e",
        "type": "function",
        "z": "85d4e4ab83afdb00",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    //return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1940,
        "y": 300,
        "wires": [
            [
                "c2c43ac210c34b41",
                "d290d42a1e7b9fbb"
            ]
        ]
    },
    {
        "id": "d4ccfabb22552594",
        "type": "function",
        "z": "85d4e4ab83afdb00",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    //return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1940,
        "y": 400,
        "wires": [
            [
                "8c95a1966d35602c",
                "7b4fac529dd648ad"
            ]
        ]
    },
    {
        "id": "7c54f8f788c50fb1",
        "type": "function",
        "z": "85d4e4ab83afdb00",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    //return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1920,
        "y": 500,
        "wires": [
            [
                "e85fab1be640fee8",
                "04fe1f4c95e90f27"
            ]
        ]
    },
    {
        "id": "183da9497350b415",
        "type": "function",
        "z": "85d4e4ab83afdb00",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    //return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1920,
        "y": 600,
        "wires": [
            [
                "f3a2d228cbd7578f",
                "9db5111a6edc9bbf"
            ]
        ]
    },
    {
        "id": "50394463819a07b6",
        "type": "function",
        "z": "85d4e4ab83afdb00",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    //return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1880,
        "y": 700,
        "wires": [
            [
                "4cbf8532e114a74c",
                "93ea00b2c44b9cdf"
            ]
        ]
    },
    {
        "id": "3afe36ce69a09abe",
        "type": "function",
        "z": "85d4e4ab83afdb00",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    //return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1900,
        "y": 800,
        "wires": [
            [
                "f83cd0d37c9540e8",
                "db389b363a5451d3"
            ]
        ]
    },
    {
        "id": "a3467e82ada1f649",
        "type": "function",
        "z": "85d4e4ab83afdb00",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    //return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1880,
        "y": 900,
        "wires": [
            [
                "efbab15ee0f3f197",
                "28b5b721eb23819b"
            ]
        ]
    },
    {
        "id": "3e32c6098d751ca5",
        "type": "change",
        "z": "85d4e4ab83afdb00",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "bool",
                "to": "Yes",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "bool",
                "to": "No",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2080,
        "y": 200,
        "wires": [
            [
                "b9ee3f94323d0270"
            ]
        ]
    },
    {
        "id": "c2c43ac210c34b41",
        "type": "change",
        "z": "85d4e4ab83afdb00",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "bool",
                "to": "Yes",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "bool",
                "to": "No",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2120,
        "y": 300,
        "wires": [
            [
                "2ef4367015239044"
            ]
        ]
    },
    {
        "id": "8c95a1966d35602c",
        "type": "change",
        "z": "85d4e4ab83afdb00",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "bool",
                "to": "Yes",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "bool",
                "to": "No",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2120,
        "y": 400,
        "wires": [
            [
                "24abf13664b87b3b"
            ]
        ]
    },
    {
        "id": "e85fab1be640fee8",
        "type": "change",
        "z": "85d4e4ab83afdb00",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "bool",
                "to": "Yes",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "bool",
                "to": "No",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2100,
        "y": 500,
        "wires": [
            [
                "b7db193fc696c196"
            ]
        ]
    },
    {
        "id": "f3a2d228cbd7578f",
        "type": "change",
        "z": "85d4e4ab83afdb00",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "bool",
                "to": "Yes",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "bool",
                "to": "No",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2100,
        "y": 600,
        "wires": [
            [
                "30c18852075e4b88"
            ]
        ]
    },
    {
        "id": "4cbf8532e114a74c",
        "type": "change",
        "z": "85d4e4ab83afdb00",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "bool",
                "to": "Enable",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "bool",
                "to": "Disable",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2060,
        "y": 700,
        "wires": [
            [
                "5d509429b00f8d58"
            ]
        ]
    },
    {
        "id": "f83cd0d37c9540e8",
        "type": "change",
        "z": "85d4e4ab83afdb00",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "bool",
                "to": "Triggered",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "bool",
                "to": "Restored",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2080,
        "y": 800,
        "wires": [
            [
                "7421c9cfa2da1e2f"
            ]
        ]
    },
    {
        "id": "efbab15ee0f3f197",
        "type": "change",
        "z": "85d4e4ab83afdb00",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "bool",
                "to": "Triggered",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "bool",
                "to": "Restored",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2060,
        "y": 900,
        "wires": [
            [
                "c7d98bf611edc586"
            ]
        ]
    },
    {
        "id": "b9ee3f94323d0270",
        "type": "ui_text",
        "z": "85d4e4ab83afdb00",
        "group": "423958eef1c8a98a",
        "order": 6,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Error or Not",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 2270,
        "y": 200,
        "wires": []
    },
    {
        "id": "2ef4367015239044",
        "type": "ui_text",
        "z": "85d4e4ab83afdb00",
        "group": "423958eef1c8a98a",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Project Running or Not",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 2340,
        "y": 300,
        "wires": []
    },
    {
        "id": "24abf13664b87b3b",
        "type": "ui_text",
        "z": "85d4e4ab83afdb00",
        "group": "423958eef1c8a98a",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Project Editing or Not",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 2340,
        "y": 400,
        "wires": []
    },
    {
        "id": "b7db193fc696c196",
        "type": "ui_text",
        "z": "85d4e4ab83afdb00",
        "group": "423958eef1c8a98a",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Project Pause or Not",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 2320,
        "y": 500,
        "wires": []
    },
    {
        "id": "30c18852075e4b88",
        "type": "ui_text",
        "z": "85d4e4ab83afdb00",
        "group": "423958eef1c8a98a",
        "order": 7,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Get Control or Not",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 2310,
        "y": 600,
        "wires": []
    },
    {
        "id": "5d509429b00f8d58",
        "type": "ui_text",
        "z": "85d4e4ab83afdb00",
        "group": "423958eef1c8a98a",
        "order": 8,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Light on or not",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 2260,
        "y": 700,
        "wires": []
    },
    {
        "id": "7421c9cfa2da1e2f",
        "type": "ui_text",
        "z": "85d4e4ab83afdb00",
        "group": "423958eef1c8a98a",
        "order": 9,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Safety IO or not",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 2280,
        "y": 800,
        "wires": []
    },
    {
        "id": "c7d98bf611edc586",
        "type": "ui_text",
        "z": "85d4e4ab83afdb00",
        "group": "423958eef1c8a98a",
        "order": 10,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "E-Stop or not",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 2250,
        "y": 900,
        "wires": []
    },
    {
        "id": "43af9b4341064c58",
        "type": "modbus-read",
        "z": "85d4e4ab83afdb00",
        "name": "Project Running Speed",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "InputRegister",
        "adr": "7101",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "f5e59be3ef794208",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 1740,
        "y": 1000,
        "wires": [
            [
                "e80bece0ccfcd1f2",
                "9a44a9949d13ed21"
            ],
            []
        ]
    },
    {
        "id": "8926ba70101fc11b",
        "type": "modbus-read",
        "z": "85d4e4ab83afdb00",
        "name": "M/A Mode",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "InputRegister",
        "adr": "7102",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "f5e59be3ef794208",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 1700,
        "y": 1100,
        "wires": [
            [
                "7886387a78bebf33",
                "552aadafea34f0cf"
            ],
            []
        ]
    },
    {
        "id": "e80bece0ccfcd1f2",
        "type": "function",
        "z": "85d4e4ab83afdb00",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    //return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1960,
        "y": 1000,
        "wires": [
            [
                "fc466471eefd4312",
                "f97bcd3795846632"
            ]
        ]
    },
    {
        "id": "7886387a78bebf33",
        "type": "function",
        "z": "85d4e4ab83afdb00",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    //return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1880,
        "y": 1100,
        "wires": [
            [
                "a93f2dd28848f318",
                "322d24b913671484"
            ]
        ]
    },
    {
        "id": "fc466471eefd4312",
        "type": "ui_gauge",
        "z": "85d4e4ab83afdb00",
        "name": "",
        "group": "423958eef1c8a98a",
        "order": 1,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Speed",
        "label": "%",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 2130,
        "y": 1000,
        "wires": []
    },
    {
        "id": "edb572cc1b908a0b",
        "type": "ui_text",
        "z": "85d4e4ab83afdb00",
        "group": "423958eef1c8a98a",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Robot Mode : ",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 2220,
        "y": 1100,
        "wires": []
    },
    {
        "id": "a93f2dd28848f318",
        "type": "change",
        "z": "85d4e4ab83afdb00",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "1",
                "fromt": "num",
                "to": "Automatic",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "2",
                "fromt": "num",
                "to": "Manual",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2040,
        "y": 1100,
        "wires": [
            [
                "edb572cc1b908a0b"
            ]
        ]
    },
    {
        "id": "6a992c5fd0344e49",
        "type": "debug",
        "z": "85d4e4ab83afdb00",
        "name": "debug 287",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1900,
        "y": 160,
        "wires": []
    },
    {
        "id": "87cf5d3efb88e088",
        "type": "debug",
        "z": "85d4e4ab83afdb00",
        "name": "debug 288",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2060,
        "y": 160,
        "wires": []
    },
    {
        "id": "990a2d51c90c6ab9",
        "type": "debug",
        "z": "85d4e4ab83afdb00",
        "name": "debug 289",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1940,
        "y": 260,
        "wires": []
    },
    {
        "id": "d290d42a1e7b9fbb",
        "type": "debug",
        "z": "85d4e4ab83afdb00",
        "name": "debug 290",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2100,
        "y": 260,
        "wires": []
    },
    {
        "id": "e6bcec26f8857427",
        "type": "debug",
        "z": "85d4e4ab83afdb00",
        "name": "debug 291",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1940,
        "y": 360,
        "wires": []
    },
    {
        "id": "7b4fac529dd648ad",
        "type": "debug",
        "z": "85d4e4ab83afdb00",
        "name": "debug 292",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2100,
        "y": 360,
        "wires": []
    },
    {
        "id": "329a2fd1cee31e66",
        "type": "debug",
        "z": "85d4e4ab83afdb00",
        "name": "debug 293",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1920,
        "y": 460,
        "wires": []
    },
    {
        "id": "04fe1f4c95e90f27",
        "type": "debug",
        "z": "85d4e4ab83afdb00",
        "name": "debug 294",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2080,
        "y": 460,
        "wires": []
    },
    {
        "id": "c838a7407a85f05f",
        "type": "debug",
        "z": "85d4e4ab83afdb00",
        "name": "debug 295",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1920,
        "y": 560,
        "wires": []
    },
    {
        "id": "9db5111a6edc9bbf",
        "type": "debug",
        "z": "85d4e4ab83afdb00",
        "name": "debug 296",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2080,
        "y": 560,
        "wires": []
    },
    {
        "id": "4136ccb0b9a36ccc",
        "type": "debug",
        "z": "85d4e4ab83afdb00",
        "name": "debug 297",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1880,
        "y": 660,
        "wires": []
    },
    {
        "id": "93ea00b2c44b9cdf",
        "type": "debug",
        "z": "85d4e4ab83afdb00",
        "name": "debug 298",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2040,
        "y": 660,
        "wires": []
    },
    {
        "id": "d5c9a3ad26ad9e90",
        "type": "debug",
        "z": "85d4e4ab83afdb00",
        "name": "debug 299",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1900,
        "y": 760,
        "wires": []
    },
    {
        "id": "db389b363a5451d3",
        "type": "debug",
        "z": "85d4e4ab83afdb00",
        "name": "debug 300",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2060,
        "y": 760,
        "wires": []
    },
    {
        "id": "d7548096998e660f",
        "type": "debug",
        "z": "85d4e4ab83afdb00",
        "name": "debug 301",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1880,
        "y": 860,
        "wires": []
    },
    {
        "id": "28b5b721eb23819b",
        "type": "debug",
        "z": "85d4e4ab83afdb00",
        "name": "debug 302",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2040,
        "y": 860,
        "wires": []
    },
    {
        "id": "9a44a9949d13ed21",
        "type": "debug",
        "z": "85d4e4ab83afdb00",
        "name": "debug 303",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1960,
        "y": 960,
        "wires": []
    },
    {
        "id": "f97bcd3795846632",
        "type": "debug",
        "z": "85d4e4ab83afdb00",
        "name": "debug 304",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2120,
        "y": 960,
        "wires": []
    },
    {
        "id": "552aadafea34f0cf",
        "type": "debug",
        "z": "85d4e4ab83afdb00",
        "name": "debug 305",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1890,
        "y": 1060,
        "wires": []
    },
    {
        "id": "322d24b913671484",
        "type": "debug",
        "z": "85d4e4ab83afdb00",
        "name": "debug 306",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2050,
        "y": 1060,
        "wires": []
    },
    {
        "id": "0828ace56a1c0b8b",
        "type": "modbus-read",
        "z": "85d4e4ab83afdb00",
        "name": "Robot Light Status",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "InputRegister",
        "adr": "7332",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "f5e59be3ef794208",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 1730,
        "y": 1200,
        "wires": [
            [
                "5e602d1688f9f0ac",
                "4db9494af31003f8"
            ],
            []
        ]
    },
    {
        "id": "4db9494af31003f8",
        "type": "function",
        "z": "85d4e4ab83afdb00",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    //return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1920,
        "y": 1200,
        "wires": [
            [
                "886f27b9b9b087de",
                "6a6d659ba24f2302"
            ]
        ]
    },
    {
        "id": "0580581c3215d842",
        "type": "ui_text",
        "z": "85d4e4ab83afdb00",
        "group": "423958eef1c8a98a",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Robot Light Status : ",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 2310,
        "y": 1200,
        "wires": []
    },
    {
        "id": "886f27b9b9b087de",
        "type": "change",
        "z": "85d4e4ab83afdb00",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "1",
                "fromt": "num",
                "to": "Solid Red, fatal error.",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "2",
                "fromt": "num",
                "to": "Flashing Red, Robot is initializing.",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "3",
                "fromt": "num",
                "to": "Solid Blue, standby in Auto Mode. ",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "4",
                "fromt": "num",
                "to": "Flashing Blue, in Auto Mode.",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "5",
                "fromt": "num",
                "to": "Solid Green, standby in Manual Mode. ",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "6",
                "fromt": "num",
                "to": "Flashing Green, in Manual Mode.",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "9",
                "fromt": "num",
                "to": "Alternating Blue&Red, Auto Mode error. ",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "10",
                "fromt": "num",
                "to": "Alternating Green&Red, Manual Mode  error.",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "13",
                "fromt": "num",
                "to": "Alternating Purple&Green, in Manual  Mode ( User Connected External Safeguard  Input Port for Human - Machine Safety Settings trigger).",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "14",
                "fromt": "num",
                "to": "Alternating Purple&Blue, in Auto Mode  ( User Connected External Safeguard Input  Port for Human - Machine Safety Settings  trigger).",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "17",
                "fromt": "num",
                "to": "Alternating White&Green, in Manual  Mode & Reduced Space.",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "18",
                "fromt": "num",
                "to": "Alternating White&Blue, in Auto Mode &  Reduced Space.",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2110,
        "y": 1200,
        "wires": [
            [
                "0580581c3215d842"
            ]
        ]
    },
    {
        "id": "5e602d1688f9f0ac",
        "type": "debug",
        "z": "85d4e4ab83afdb00",
        "name": "debug 307",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1930,
        "y": 1160,
        "wires": []
    },
    {
        "id": "6a6d659ba24f2302",
        "type": "debug",
        "z": "85d4e4ab83afdb00",
        "name": "debug 308",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2110,
        "y": 1160,
        "wires": []
    },
    {
        "id": "bc587d71d3617465",
        "type": "ui_button",
        "z": "85d4e4ab83afdb00",
        "name": "",
        "group": "21817acc68fe5be5",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Play/Pause",
        "tooltip": "",
        "color": "",
        "bgcolor": "Orange",
        "className": "",
        "icon": "",
        "payload": "true",
        "payloadType": "bool",
        "topic": "topic",
        "topicType": "msg",
        "x": 2650,
        "y": 200,
        "wires": [
            [
                "699386eb64968afd"
            ]
        ]
    },
    {
        "id": "226507b732e969bf",
        "type": "ui_button",
        "z": "85d4e4ab83afdb00",
        "name": "",
        "group": "21817acc68fe5be5",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Stop",
        "tooltip": "",
        "color": "",
        "bgcolor": "Red",
        "className": "",
        "icon": "",
        "payload": "true",
        "payloadType": "bool",
        "topic": "topic",
        "topicType": "msg",
        "x": 2630,
        "y": 280,
        "wires": [
            [
                "8cbfa4dc63518905"
            ]
        ]
    },
    {
        "id": "38b09a5e2b761f4c",
        "type": "ui_button",
        "z": "85d4e4ab83afdb00",
        "name": "",
        "group": "21817acc68fe5be5",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Stick+",
        "tooltip": "",
        "color": "",
        "bgcolor": "blue",
        "className": "",
        "icon": "",
        "payload": "true",
        "payloadType": "bool",
        "topic": "topic",
        "topicType": "msg",
        "x": 2630,
        "y": 360,
        "wires": [
            [
                "16aaad6dec95f3ce"
            ]
        ]
    },
    {
        "id": "af21be51605182ea",
        "type": "ui_button",
        "z": "85d4e4ab83afdb00",
        "name": "",
        "group": "21817acc68fe5be5",
        "order": 16,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Stick-",
        "tooltip": "",
        "color": "",
        "bgcolor": "blue",
        "className": "",
        "icon": "",
        "payload": "true",
        "payloadType": "bool",
        "topic": "topic",
        "topicType": "msg",
        "x": 2630,
        "y": 440,
        "wires": [
            [
                "1f2d84a137ed0817"
            ]
        ]
    },
    {
        "id": "699386eb64968afd",
        "type": "modbus-write",
        "z": "85d4e4ab83afdb00",
        "name": "Play/Pause",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "7104",
        "quantity": "1",
        "server": "f5e59be3ef794208",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 2850,
        "y": 200,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "8cbfa4dc63518905",
        "type": "modbus-write",
        "z": "85d4e4ab83afdb00",
        "name": "Stop",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "7105",
        "quantity": "1",
        "server": "f5e59be3ef794208",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 2790,
        "y": 280,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "16aaad6dec95f3ce",
        "type": "modbus-write",
        "z": "85d4e4ab83afdb00",
        "name": "Stick+",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "7106",
        "quantity": "1",
        "server": "f5e59be3ef794208",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 2790,
        "y": 360,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "1f2d84a137ed0817",
        "type": "modbus-write",
        "z": "85d4e4ab83afdb00",
        "name": "Stick-",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "7107",
        "quantity": "1",
        "server": "f5e59be3ef794208",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 2790,
        "y": 440,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "47a73a369290f6f4",
        "type": "comment",
        "z": "85d4e4ab83afdb00",
        "name": "Robot Stick",
        "info": "# This is Robot Stick Setting",
        "x": 2630,
        "y": 140,
        "wires": []
    },
    {
        "id": "edce91151b78e0ca",
        "type": "ui_switch",
        "z": "797529b4f5ae078c",
        "name": "",
        "label": "DO 0 : ",
        "tooltip": "",
        "group": "9efb5e34ea4e1de5",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 490,
        "y": 160,
        "wires": [
            [
                "ea69dfbcfc20d445",
                "533320d53fd33a89"
            ]
        ]
    },
    {
        "id": "22ab35220351a7c4",
        "type": "ui_switch",
        "z": "797529b4f5ae078c",
        "name": "",
        "label": "DO 1 : ",
        "tooltip": "",
        "group": "9efb5e34ea4e1de5",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 490,
        "y": 260,
        "wires": [
            [
                "735c552e96e46eda",
                "28d1acd224fab191"
            ]
        ]
    },
    {
        "id": "e44e773a197038b4",
        "type": "ui_switch",
        "z": "797529b4f5ae078c",
        "name": "",
        "label": "DO 2 : ",
        "tooltip": "",
        "group": "9efb5e34ea4e1de5",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 490,
        "y": 360,
        "wires": [
            [
                "92442004dedcf180",
                "3fd024dbb33656da"
            ]
        ]
    },
    {
        "id": "76ca4f5c2532e313",
        "type": "ui_switch",
        "z": "797529b4f5ae078c",
        "name": "",
        "label": "DO 3 : ",
        "tooltip": "",
        "group": "9efb5e34ea4e1de5",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 490,
        "y": 460,
        "wires": [
            [
                "1dffa399f94ffe52",
                "62c6f70900000924"
            ]
        ]
    },
    {
        "id": "ee34fecce2182dc5",
        "type": "ui_switch",
        "z": "797529b4f5ae078c",
        "name": "",
        "label": "DO 4 : ",
        "tooltip": "",
        "group": "9efb5e34ea4e1de5",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 490,
        "y": 560,
        "wires": [
            [
                "e65a5fc3e0b339ef",
                "d97f88b1b40f6924"
            ]
        ]
    },
    {
        "id": "bfa51fa79390a2f8",
        "type": "ui_switch",
        "z": "797529b4f5ae078c",
        "name": "",
        "label": "DO 5 : ",
        "tooltip": "",
        "group": "9efb5e34ea4e1de5",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 490,
        "y": 660,
        "wires": [
            [
                "c3e29fae4b9491f5",
                "c9a854603a92da70"
            ]
        ]
    },
    {
        "id": "bc53f2b95553f433",
        "type": "ui_switch",
        "z": "797529b4f5ae078c",
        "name": "",
        "label": "DO 6 : ",
        "tooltip": "",
        "group": "9efb5e34ea4e1de5",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 490,
        "y": 760,
        "wires": [
            [
                "f8ec7b07497859c1",
                "deed8c237a42b920"
            ]
        ]
    },
    {
        "id": "24b55d46796e8dfe",
        "type": "ui_switch",
        "z": "797529b4f5ae078c",
        "name": "",
        "label": "DO 7 : ",
        "tooltip": "",
        "group": "9efb5e34ea4e1de5",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 490,
        "y": 860,
        "wires": [
            [
                "23b37a570e6bb6e8",
                "332ba4363978eeda"
            ]
        ]
    },
    {
        "id": "75fca6302e3e93c8",
        "type": "ui_switch",
        "z": "797529b4f5ae078c",
        "name": "",
        "label": "DO 8 : ",
        "tooltip": "",
        "group": "9efb5e34ea4e1de5",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 490,
        "y": 960,
        "wires": [
            [
                "f506be88df927da6",
                "920fe885a217455d"
            ]
        ]
    },
    {
        "id": "3ff94224bf37aebc",
        "type": "ui_switch",
        "z": "797529b4f5ae078c",
        "name": "",
        "label": "DO 9 : ",
        "tooltip": "",
        "group": "9efb5e34ea4e1de5",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 490,
        "y": 1060,
        "wires": [
            [
                "d1523460b560815a",
                "72964c234357d3fa"
            ]
        ]
    },
    {
        "id": "3d2b6e9a55d99ce3",
        "type": "ui_switch",
        "z": "797529b4f5ae078c",
        "name": "",
        "label": "DO 10 : ",
        "tooltip": "",
        "group": "9efb5e34ea4e1de5",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 500,
        "y": 1160,
        "wires": [
            [
                "2acfe78b61646181",
                "e5124e81629bcc1b"
            ]
        ]
    },
    {
        "id": "ab5e2b138287e303",
        "type": "ui_switch",
        "z": "797529b4f5ae078c",
        "name": "",
        "label": "DO 11 : ",
        "tooltip": "",
        "group": "9efb5e34ea4e1de5",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 500,
        "y": 1260,
        "wires": [
            [
                "46bdcc34c404eebc",
                "037a67176c823465"
            ]
        ]
    },
    {
        "id": "2802a74499c078ee",
        "type": "ui_switch",
        "z": "797529b4f5ae078c",
        "name": "",
        "label": "DO 12 : ",
        "tooltip": "",
        "group": "9efb5e34ea4e1de5",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 500,
        "y": 1360,
        "wires": [
            [
                "170d1d8b2166fadc"
            ]
        ]
    },
    {
        "id": "e7f199eba4fdc793",
        "type": "ui_switch",
        "z": "797529b4f5ae078c",
        "name": "",
        "label": "DO 13 : ",
        "tooltip": "",
        "group": "9efb5e34ea4e1de5",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 500,
        "y": 1460,
        "wires": [
            [
                "e46c6f1e912b45db",
                "ce61fc8f61916c2f"
            ]
        ]
    },
    {
        "id": "cc3a5fc999c45819",
        "type": "ui_switch",
        "z": "797529b4f5ae078c",
        "name": "",
        "label": "DO 14 : ",
        "tooltip": "",
        "group": "9efb5e34ea4e1de5",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 500,
        "y": 1560,
        "wires": [
            [
                "c60ce4681e2726bc",
                "5ec94b09961f9df3"
            ]
        ]
    },
    {
        "id": "cbba906a9bd4cb41",
        "type": "ui_switch",
        "z": "797529b4f5ae078c",
        "name": "",
        "label": "DO 15 : ",
        "tooltip": "",
        "group": "9efb5e34ea4e1de5",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 500,
        "y": 1660,
        "wires": [
            [
                "f3fc580e6e391ed9",
                "33339bc5f1368025"
            ]
        ]
    },
    {
        "id": "61db642d5a599032",
        "type": "function",
        "z": "797529b4f5ae078c",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    //return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 160,
        "wires": [
            [
                "a1232e4cc621de82",
                "edce91151b78e0ca"
            ]
        ]
    },
    {
        "id": "a178b15b24a4dc2b",
        "type": "function",
        "z": "797529b4f5ae078c",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 260,
        "wires": [
            [
                "22ab35220351a7c4",
                "7f0fec865197d822"
            ]
        ]
    },
    {
        "id": "0ea1b87d6726e034",
        "type": "modbus-read",
        "z": "797529b4f5ae078c",
        "name": "DO 0 Read",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "0",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "6734c92f7677d61f",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 160,
        "y": 160,
        "wires": [
            [
                "61db642d5a599032",
                "c96748bedf0d12b2"
            ],
            []
        ]
    },
    {
        "id": "b73c3eb0bee88719",
        "type": "modbus-read",
        "z": "797529b4f5ae078c",
        "name": "DO 1 Read",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "1",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "6734c92f7677d61f",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 160,
        "y": 260,
        "wires": [
            [
                "a178b15b24a4dc2b",
                "31b467e3285d087b"
            ],
            []
        ]
    },
    {
        "id": "e4e3f8f7aa6102ed",
        "type": "modbus-read",
        "z": "797529b4f5ae078c",
        "name": "DO 2 Read",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "0",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "6734c92f7677d61f",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 160,
        "y": 360,
        "wires": [
            [
                "f4d694ab2fed9f65",
                "32494543e470566f"
            ],
            []
        ]
    },
    {
        "id": "ed0b6c1869bfeded",
        "type": "modbus-read",
        "z": "797529b4f5ae078c",
        "name": "DO 3 Read",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "3",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "6734c92f7677d61f",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 160,
        "y": 460,
        "wires": [
            [
                "293174334503185e",
                "a7bbfa1a6957ab5e"
            ],
            []
        ]
    },
    {
        "id": "fdc11ca4301edee7",
        "type": "modbus-read",
        "z": "797529b4f5ae078c",
        "name": "DO 4 Read",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "4",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "6734c92f7677d61f",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 160,
        "y": 560,
        "wires": [
            [
                "c367a0cb5384930b",
                "485c4eac2096fd21"
            ],
            []
        ]
    },
    {
        "id": "535c7c41c25255f3",
        "type": "modbus-read",
        "z": "797529b4f5ae078c",
        "name": "DO 5 Read",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "0",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "6734c92f7677d61f",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 160,
        "y": 660,
        "wires": [
            [
                "85afb56fe7cc3578",
                "7a843017c47d20ab"
            ],
            []
        ]
    },
    {
        "id": "4e7afb55e686dbd6",
        "type": "modbus-read",
        "z": "797529b4f5ae078c",
        "name": "DO 6 Read",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "6",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "6734c92f7677d61f",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 160,
        "y": 760,
        "wires": [
            [
                "750cc7751c3aac28",
                "ea7c481cdcc6179d"
            ],
            []
        ]
    },
    {
        "id": "da7523585e467795",
        "type": "modbus-read",
        "z": "797529b4f5ae078c",
        "name": "DO 7 Read",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "7",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "6734c92f7677d61f",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 160,
        "y": 860,
        "wires": [
            [
                "12c847b0d160b613",
                "f7791c8f49f53fca"
            ],
            []
        ]
    },
    {
        "id": "83a4ca0a7653946f",
        "type": "modbus-read",
        "z": "797529b4f5ae078c",
        "name": "DO 8 Read",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "8",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "6734c92f7677d61f",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 160,
        "y": 960,
        "wires": [
            [
                "ee3fdbaf02f43aee",
                "483f9dc105e1dfed"
            ],
            []
        ]
    },
    {
        "id": "a8da4e00a245a7bd",
        "type": "modbus-read",
        "z": "797529b4f5ae078c",
        "name": "DO 9 Read",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "9",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "6734c92f7677d61f",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 160,
        "y": 1060,
        "wires": [
            [
                "57b998c1ae7cfdfe",
                "c9e77d16803cc529"
            ],
            []
        ]
    },
    {
        "id": "edde7257f8a5634e",
        "type": "modbus-read",
        "z": "797529b4f5ae078c",
        "name": "DO 10 Read",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "10",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "6734c92f7677d61f",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 170,
        "y": 1160,
        "wires": [
            [
                "3238b8eb3a4817d6",
                "91889a340ea799df"
            ],
            []
        ]
    },
    {
        "id": "caa2168e96ce1cf7",
        "type": "modbus-read",
        "z": "797529b4f5ae078c",
        "name": "DO 11 Read",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "11",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "6734c92f7677d61f",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 170,
        "y": 1260,
        "wires": [
            [
                "3014d4d008ebf280",
                "beb1c937cef5b851"
            ],
            []
        ]
    },
    {
        "id": "9c236221e10b4fe8",
        "type": "modbus-read",
        "z": "797529b4f5ae078c",
        "name": "DO 12 Read",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "12",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "6734c92f7677d61f",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 170,
        "y": 1360,
        "wires": [
            [
                "d219861190b332e7"
            ],
            []
        ]
    },
    {
        "id": "c2bf9dc386014460",
        "type": "modbus-read",
        "z": "797529b4f5ae078c",
        "name": "DO 13 Read",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "13",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "6734c92f7677d61f",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 170,
        "y": 1460,
        "wires": [
            [
                "187ff6d1bf1dc67e",
                "8a408cf8610c77c2"
            ],
            []
        ]
    },
    {
        "id": "68e1edf5c371dee9",
        "type": "modbus-read",
        "z": "797529b4f5ae078c",
        "name": "DO 14 Read",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "14",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "6734c92f7677d61f",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 170,
        "y": 1560,
        "wires": [
            [
                "bf34ef7a2d1c26d9",
                "fa59d0a1c58e1829"
            ],
            []
        ]
    },
    {
        "id": "2de55f63a776ea7e",
        "type": "modbus-read",
        "z": "797529b4f5ae078c",
        "name": "DO 15 Read",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "15",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "6734c92f7677d61f",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 170,
        "y": 1660,
        "wires": [
            [
                "9547d9e944849258",
                "6d3cd50653379a75"
            ],
            []
        ]
    },
    {
        "id": "f4d694ab2fed9f65",
        "type": "function",
        "z": "797529b4f5ae078c",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 360,
        "wires": [
            [
                "e44e773a197038b4",
                "4a25130c5b867c0d"
            ]
        ]
    },
    {
        "id": "293174334503185e",
        "type": "function",
        "z": "797529b4f5ae078c",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 460,
        "wires": [
            [
                "76ca4f5c2532e313",
                "959d256beaf93c34"
            ]
        ]
    },
    {
        "id": "c367a0cb5384930b",
        "type": "function",
        "z": "797529b4f5ae078c",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 560,
        "wires": [
            [
                "ee34fecce2182dc5",
                "b9998e800fdf7b73"
            ]
        ]
    },
    {
        "id": "85afb56fe7cc3578",
        "type": "function",
        "z": "797529b4f5ae078c",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 660,
        "wires": [
            [
                "bfa51fa79390a2f8",
                "ea4812164f4b3b88"
            ]
        ]
    },
    {
        "id": "750cc7751c3aac28",
        "type": "function",
        "z": "797529b4f5ae078c",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 760,
        "wires": [
            [
                "bc53f2b95553f433",
                "652f29aa026a898e"
            ]
        ]
    },
    {
        "id": "12c847b0d160b613",
        "type": "function",
        "z": "797529b4f5ae078c",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 860,
        "wires": [
            [
                "24b55d46796e8dfe",
                "1a0810e09007489d"
            ]
        ]
    },
    {
        "id": "ee3fdbaf02f43aee",
        "type": "function",
        "z": "797529b4f5ae078c",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 960,
        "wires": [
            [
                "75fca6302e3e93c8",
                "d88d4845d4cbb0c0"
            ]
        ]
    },
    {
        "id": "57b998c1ae7cfdfe",
        "type": "function",
        "z": "797529b4f5ae078c",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 1060,
        "wires": [
            [
                "3ff94224bf37aebc",
                "fba782afc3d1c8d7"
            ]
        ]
    },
    {
        "id": "3238b8eb3a4817d6",
        "type": "function",
        "z": "797529b4f5ae078c",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 1160,
        "wires": [
            [
                "3d2b6e9a55d99ce3",
                "3d343336e166ee75"
            ]
        ]
    },
    {
        "id": "3014d4d008ebf280",
        "type": "function",
        "z": "797529b4f5ae078c",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 1260,
        "wires": [
            [
                "ab5e2b138287e303",
                "dd4f6b63e3ed5d1f"
            ]
        ]
    },
    {
        "id": "d219861190b332e7",
        "type": "function",
        "z": "797529b4f5ae078c",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 1360,
        "wires": [
            [
                "2802a74499c078ee"
            ]
        ]
    },
    {
        "id": "187ff6d1bf1dc67e",
        "type": "function",
        "z": "797529b4f5ae078c",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 1460,
        "wires": [
            [
                "e7f199eba4fdc793",
                "adbd2ecf5ee89bf0"
            ]
        ]
    },
    {
        "id": "bf34ef7a2d1c26d9",
        "type": "function",
        "z": "797529b4f5ae078c",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 1560,
        "wires": [
            [
                "cc3a5fc999c45819",
                "7b562db7c76848cf"
            ]
        ]
    },
    {
        "id": "9547d9e944849258",
        "type": "function",
        "z": "797529b4f5ae078c",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 1660,
        "wires": [
            [
                "cbba906a9bd4cb41",
                "427c31d7a0aa87cb"
            ]
        ]
    },
    {
        "id": "ea69dfbcfc20d445",
        "type": "modbus-write",
        "z": "797529b4f5ae078c",
        "name": "DO 0 Write",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "0",
        "quantity": "1",
        "server": "790b46a78b33b4e0",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 650,
        "y": 160,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "735c552e96e46eda",
        "type": "modbus-write",
        "z": "797529b4f5ae078c",
        "name": "DO 1 Write",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "1",
        "quantity": "1",
        "server": "790b46a78b33b4e0",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 650,
        "y": 260,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "92442004dedcf180",
        "type": "modbus-write",
        "z": "797529b4f5ae078c",
        "name": "DO 2 Write",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "2",
        "quantity": "1",
        "server": "790b46a78b33b4e0",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 650,
        "y": 360,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "1dffa399f94ffe52",
        "type": "modbus-write",
        "z": "797529b4f5ae078c",
        "name": "DO 3 Write",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "3",
        "quantity": "1",
        "server": "790b46a78b33b4e0",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 650,
        "y": 460,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "e65a5fc3e0b339ef",
        "type": "modbus-write",
        "z": "797529b4f5ae078c",
        "name": "DO 4 Write",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "4",
        "quantity": "1",
        "server": "790b46a78b33b4e0",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 650,
        "y": 560,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "c3e29fae4b9491f5",
        "type": "modbus-write",
        "z": "797529b4f5ae078c",
        "name": "DO 5 Write",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "5",
        "quantity": "1",
        "server": "790b46a78b33b4e0",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 650,
        "y": 660,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "f8ec7b07497859c1",
        "type": "modbus-write",
        "z": "797529b4f5ae078c",
        "name": "DO 6 Write",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "6",
        "quantity": "1",
        "server": "790b46a78b33b4e0",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 650,
        "y": 760,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "23b37a570e6bb6e8",
        "type": "modbus-write",
        "z": "797529b4f5ae078c",
        "name": "DO 7 Write",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "7",
        "quantity": "1",
        "server": "790b46a78b33b4e0",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 650,
        "y": 860,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "f506be88df927da6",
        "type": "modbus-write",
        "z": "797529b4f5ae078c",
        "name": "DO 8 Write",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "8",
        "quantity": "1",
        "server": "790b46a78b33b4e0",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 650,
        "y": 960,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "d1523460b560815a",
        "type": "modbus-write",
        "z": "797529b4f5ae078c",
        "name": "DO 9 Write",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "9",
        "quantity": "1",
        "server": "790b46a78b33b4e0",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 650,
        "y": 1060,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "2acfe78b61646181",
        "type": "modbus-write",
        "z": "797529b4f5ae078c",
        "name": "DO 10 Write",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "10",
        "quantity": "1",
        "server": "790b46a78b33b4e0",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 650,
        "y": 1160,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "46bdcc34c404eebc",
        "type": "modbus-write",
        "z": "797529b4f5ae078c",
        "name": "DO 11 Write",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "11",
        "quantity": "1",
        "server": "790b46a78b33b4e0",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 650,
        "y": 1260,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "170d1d8b2166fadc",
        "type": "modbus-write",
        "z": "797529b4f5ae078c",
        "name": "DO 12 Write",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "12",
        "quantity": "1",
        "server": "790b46a78b33b4e0",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 650,
        "y": 1360,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "e46c6f1e912b45db",
        "type": "modbus-write",
        "z": "797529b4f5ae078c",
        "name": "DO 13 Write",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "13",
        "quantity": "1",
        "server": "790b46a78b33b4e0",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 650,
        "y": 1460,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "c60ce4681e2726bc",
        "type": "modbus-write",
        "z": "797529b4f5ae078c",
        "name": "DO 14 Write",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "14",
        "quantity": "1",
        "server": "790b46a78b33b4e0",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 650,
        "y": 1560,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "f3fc580e6e391ed9",
        "type": "modbus-write",
        "z": "797529b4f5ae078c",
        "name": "DO 15 Write",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "15",
        "quantity": "1",
        "server": "790b46a78b33b4e0",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 650,
        "y": 1660,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "a1232e4cc621de82",
        "type": "debug",
        "z": "797529b4f5ae078c",
        "name": "debug 309",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 500,
        "y": 120,
        "wires": []
    },
    {
        "id": "c96748bedf0d12b2",
        "type": "debug",
        "z": "797529b4f5ae078c",
        "name": "debug 310",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 340,
        "y": 120,
        "wires": []
    },
    {
        "id": "590f08844094f5eb",
        "type": "comment",
        "z": "797529b4f5ae078c",
        "name": "ControlBox DO Robot",
        "info": "# This is ControlBox Output Setting",
        "x": 180,
        "y": 80,
        "wires": []
    },
    {
        "id": "533320d53fd33a89",
        "type": "debug",
        "z": "797529b4f5ae078c",
        "name": "debug 311",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 660,
        "y": 120,
        "wires": []
    },
    {
        "id": "7f0fec865197d822",
        "type": "debug",
        "z": "797529b4f5ae078c",
        "name": "debug 312",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 500,
        "y": 220,
        "wires": []
    },
    {
        "id": "31b467e3285d087b",
        "type": "debug",
        "z": "797529b4f5ae078c",
        "name": "debug 313",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 340,
        "y": 220,
        "wires": []
    },
    {
        "id": "28d1acd224fab191",
        "type": "debug",
        "z": "797529b4f5ae078c",
        "name": "debug 314",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 660,
        "y": 220,
        "wires": []
    },
    {
        "id": "4a25130c5b867c0d",
        "type": "debug",
        "z": "797529b4f5ae078c",
        "name": "debug 315",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 500,
        "y": 320,
        "wires": []
    },
    {
        "id": "32494543e470566f",
        "type": "debug",
        "z": "797529b4f5ae078c",
        "name": "debug 316",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 340,
        "y": 320,
        "wires": []
    },
    {
        "id": "3fd024dbb33656da",
        "type": "debug",
        "z": "797529b4f5ae078c",
        "name": "debug 317",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 660,
        "y": 320,
        "wires": []
    },
    {
        "id": "959d256beaf93c34",
        "type": "debug",
        "z": "797529b4f5ae078c",
        "name": "debug 318",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 500,
        "y": 420,
        "wires": []
    },
    {
        "id": "a7bbfa1a6957ab5e",
        "type": "debug",
        "z": "797529b4f5ae078c",
        "name": "debug 319",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 340,
        "y": 420,
        "wires": []
    },
    {
        "id": "62c6f70900000924",
        "type": "debug",
        "z": "797529b4f5ae078c",
        "name": "debug 320",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 660,
        "y": 420,
        "wires": []
    },
    {
        "id": "b9998e800fdf7b73",
        "type": "debug",
        "z": "797529b4f5ae078c",
        "name": "debug 321",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 500,
        "y": 520,
        "wires": []
    },
    {
        "id": "485c4eac2096fd21",
        "type": "debug",
        "z": "797529b4f5ae078c",
        "name": "debug 322",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 340,
        "y": 520,
        "wires": []
    },
    {
        "id": "d97f88b1b40f6924",
        "type": "debug",
        "z": "797529b4f5ae078c",
        "name": "debug 323",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 660,
        "y": 520,
        "wires": []
    },
    {
        "id": "ea4812164f4b3b88",
        "type": "debug",
        "z": "797529b4f5ae078c",
        "name": "debug 324",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 500,
        "y": 620,
        "wires": []
    },
    {
        "id": "7a843017c47d20ab",
        "type": "debug",
        "z": "797529b4f5ae078c",
        "name": "debug 325",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 340,
        "y": 620,
        "wires": []
    },
    {
        "id": "c9a854603a92da70",
        "type": "debug",
        "z": "797529b4f5ae078c",
        "name": "debug 326",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 660,
        "y": 620,
        "wires": []
    },
    {
        "id": "652f29aa026a898e",
        "type": "debug",
        "z": "797529b4f5ae078c",
        "name": "debug 327",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 500,
        "y": 720,
        "wires": []
    },
    {
        "id": "ea7c481cdcc6179d",
        "type": "debug",
        "z": "797529b4f5ae078c",
        "name": "debug 328",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 340,
        "y": 720,
        "wires": []
    },
    {
        "id": "deed8c237a42b920",
        "type": "debug",
        "z": "797529b4f5ae078c",
        "name": "debug 329",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 660,
        "y": 720,
        "wires": []
    },
    {
        "id": "1a0810e09007489d",
        "type": "debug",
        "z": "797529b4f5ae078c",
        "name": "debug 330",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 500,
        "y": 820,
        "wires": []
    },
    {
        "id": "f7791c8f49f53fca",
        "type": "debug",
        "z": "797529b4f5ae078c",
        "name": "debug 331",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 340,
        "y": 820,
        "wires": []
    },
    {
        "id": "332ba4363978eeda",
        "type": "debug",
        "z": "797529b4f5ae078c",
        "name": "debug 332",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 660,
        "y": 820,
        "wires": []
    },
    {
        "id": "d88d4845d4cbb0c0",
        "type": "debug",
        "z": "797529b4f5ae078c",
        "name": "debug 333",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 500,
        "y": 920,
        "wires": []
    },
    {
        "id": "483f9dc105e1dfed",
        "type": "debug",
        "z": "797529b4f5ae078c",
        "name": "debug 334",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 340,
        "y": 920,
        "wires": []
    },
    {
        "id": "920fe885a217455d",
        "type": "debug",
        "z": "797529b4f5ae078c",
        "name": "debug 335",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 660,
        "y": 920,
        "wires": []
    },
    {
        "id": "fba782afc3d1c8d7",
        "type": "debug",
        "z": "797529b4f5ae078c",
        "name": "debug 336",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 500,
        "y": 1020,
        "wires": []
    },
    {
        "id": "c9e77d16803cc529",
        "type": "debug",
        "z": "797529b4f5ae078c",
        "name": "debug 337",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 340,
        "y": 1020,
        "wires": []
    },
    {
        "id": "72964c234357d3fa",
        "type": "debug",
        "z": "797529b4f5ae078c",
        "name": "debug 338",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 660,
        "y": 1020,
        "wires": []
    },
    {
        "id": "3d343336e166ee75",
        "type": "debug",
        "z": "797529b4f5ae078c",
        "name": "debug 339",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 500,
        "y": 1120,
        "wires": []
    },
    {
        "id": "91889a340ea799df",
        "type": "debug",
        "z": "797529b4f5ae078c",
        "name": "debug 340",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 340,
        "y": 1120,
        "wires": []
    },
    {
        "id": "e5124e81629bcc1b",
        "type": "debug",
        "z": "797529b4f5ae078c",
        "name": "debug 341",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 660,
        "y": 1120,
        "wires": []
    },
    {
        "id": "dd4f6b63e3ed5d1f",
        "type": "debug",
        "z": "797529b4f5ae078c",
        "name": "debug 342",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 500,
        "y": 1220,
        "wires": []
    },
    {
        "id": "beb1c937cef5b851",
        "type": "debug",
        "z": "797529b4f5ae078c",
        "name": "debug 343",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 340,
        "y": 1220,
        "wires": []
    },
    {
        "id": "037a67176c823465",
        "type": "debug",
        "z": "797529b4f5ae078c",
        "name": "debug 344",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 660,
        "y": 1220,
        "wires": []
    },
    {
        "id": "70a91fb96d849ed3",
        "type": "debug",
        "z": "797529b4f5ae078c",
        "name": "debug 345",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 500,
        "y": 1320,
        "wires": []
    },
    {
        "id": "ca0f6f7685d8035b",
        "type": "debug",
        "z": "797529b4f5ae078c",
        "name": "debug 346",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 340,
        "y": 1320,
        "wires": []
    },
    {
        "id": "094dacb60784e35d",
        "type": "debug",
        "z": "797529b4f5ae078c",
        "name": "debug 347",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 660,
        "y": 1320,
        "wires": []
    },
    {
        "id": "adbd2ecf5ee89bf0",
        "type": "debug",
        "z": "797529b4f5ae078c",
        "name": "debug 348",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 500,
        "y": 1420,
        "wires": []
    },
    {
        "id": "8a408cf8610c77c2",
        "type": "debug",
        "z": "797529b4f5ae078c",
        "name": "debug 349",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 340,
        "y": 1420,
        "wires": []
    },
    {
        "id": "ce61fc8f61916c2f",
        "type": "debug",
        "z": "797529b4f5ae078c",
        "name": "debug 350",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 660,
        "y": 1420,
        "wires": []
    },
    {
        "id": "7b562db7c76848cf",
        "type": "debug",
        "z": "797529b4f5ae078c",
        "name": "debug 351",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 500,
        "y": 1520,
        "wires": []
    },
    {
        "id": "fa59d0a1c58e1829",
        "type": "debug",
        "z": "797529b4f5ae078c",
        "name": "debug 352",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 340,
        "y": 1520,
        "wires": []
    },
    {
        "id": "5ec94b09961f9df3",
        "type": "debug",
        "z": "797529b4f5ae078c",
        "name": "debug 353",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 660,
        "y": 1520,
        "wires": []
    },
    {
        "id": "427c31d7a0aa87cb",
        "type": "debug",
        "z": "797529b4f5ae078c",
        "name": "debug 354",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 500,
        "y": 1620,
        "wires": []
    },
    {
        "id": "6d3cd50653379a75",
        "type": "debug",
        "z": "797529b4f5ae078c",
        "name": "debug 355",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 340,
        "y": 1620,
        "wires": []
    },
    {
        "id": "33339bc5f1368025",
        "type": "debug",
        "z": "797529b4f5ae078c",
        "name": "debug 356",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 660,
        "y": 1620,
        "wires": []
    },
    {
        "id": "d078f1834cf2a63e",
        "type": "modbus-read",
        "z": "797529b4f5ae078c",
        "name": "DI 0 Read",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Input",
        "adr": "0",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "6734c92f7677d61f",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 900,
        "y": 160,
        "wires": [
            [
                "335e9d8b7e038859",
                "603e1ee79b903622"
            ],
            []
        ]
    },
    {
        "id": "335e9d8b7e038859",
        "type": "function",
        "z": "797529b4f5ae078c",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    //return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1080,
        "y": 160,
        "wires": [
            [
                "5834bd2c043638ac",
                "45e5db8790903c1f"
            ]
        ]
    },
    {
        "id": "692a4e0b4f161500",
        "type": "modbus-read",
        "z": "797529b4f5ae078c",
        "name": "DI 1 Read",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Input",
        "adr": "1",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "6734c92f7677d61f",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 900,
        "y": 260,
        "wires": [
            [
                "e40387eaa07c1712",
                "9f78d699d33c7e86"
            ],
            []
        ]
    },
    {
        "id": "e40387eaa07c1712",
        "type": "function",
        "z": "797529b4f5ae078c",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    //return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1080,
        "y": 260,
        "wires": [
            [
                "81fd54787a4068b1",
                "5c0d1991b5cb2dbf"
            ]
        ]
    },
    {
        "id": "fa8f519eda3fab2c",
        "type": "modbus-read",
        "z": "797529b4f5ae078c",
        "name": "DI 2 Read",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Input",
        "adr": "2",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "6734c92f7677d61f",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 900,
        "y": 360,
        "wires": [
            [
                "6d9a0c9e12454079",
                "d32284014239b84b"
            ],
            []
        ]
    },
    {
        "id": "6d9a0c9e12454079",
        "type": "function",
        "z": "797529b4f5ae078c",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    //return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1080,
        "y": 360,
        "wires": [
            [
                "a37f11711cfba6d8",
                "9e061e5eb2d4e0d5"
            ]
        ]
    },
    {
        "id": "57bdc601d0b471cd",
        "type": "modbus-read",
        "z": "797529b4f5ae078c",
        "name": "DI 3 Read",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Input",
        "adr": "3",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "6734c92f7677d61f",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 900,
        "y": 460,
        "wires": [
            [
                "494f7613eed91c35",
                "7f2760f0087910bf"
            ],
            []
        ]
    },
    {
        "id": "494f7613eed91c35",
        "type": "function",
        "z": "797529b4f5ae078c",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    //return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1080,
        "y": 460,
        "wires": [
            [
                "ac0ee085824c4cfd",
                "1f0bb252c6210c88"
            ]
        ]
    },
    {
        "id": "7f2132be48024754",
        "type": "modbus-read",
        "z": "797529b4f5ae078c",
        "name": "DI 4 Read",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Input",
        "adr": "4",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "6734c92f7677d61f",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 900,
        "y": 560,
        "wires": [
            [
                "862a16cd702d28ed",
                "fcc8327e6c982705"
            ],
            []
        ]
    },
    {
        "id": "862a16cd702d28ed",
        "type": "function",
        "z": "797529b4f5ae078c",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    //return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1080,
        "y": 560,
        "wires": [
            [
                "6ac3e6e94bc1d452",
                "2fc9cec62355351f"
            ]
        ]
    },
    {
        "id": "75828304503b86e2",
        "type": "modbus-read",
        "z": "797529b4f5ae078c",
        "name": "DI 5 Read",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Input",
        "adr": "5",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "6734c92f7677d61f",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 900,
        "y": 660,
        "wires": [
            [
                "f8636f2088bb0e71",
                "5c492639ab0b5ab0"
            ],
            []
        ]
    },
    {
        "id": "f8636f2088bb0e71",
        "type": "function",
        "z": "797529b4f5ae078c",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    //return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1080,
        "y": 660,
        "wires": [
            [
                "5f48c63b13351455",
                "599b082fa8de287c"
            ]
        ]
    },
    {
        "id": "b79cbeebd2fc65bb",
        "type": "modbus-read",
        "z": "797529b4f5ae078c",
        "name": "DI 6 Read",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Input",
        "adr": "6",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "6734c92f7677d61f",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 900,
        "y": 760,
        "wires": [
            [
                "bf3f37f793f26d37",
                "2ee8e67d5bd3336f"
            ],
            []
        ]
    },
    {
        "id": "bf3f37f793f26d37",
        "type": "function",
        "z": "797529b4f5ae078c",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    //return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1080,
        "y": 760,
        "wires": [
            [
                "cab57afbebacdce2",
                "37abcf5f131ee1b0"
            ]
        ]
    },
    {
        "id": "700f3b697b5c9651",
        "type": "modbus-read",
        "z": "797529b4f5ae078c",
        "name": "DI 7 Read",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Input",
        "adr": "7",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "6734c92f7677d61f",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 900,
        "y": 860,
        "wires": [
            [
                "0820ee24c8bd16b8",
                "f28fbe5a8e300c4b"
            ],
            []
        ]
    },
    {
        "id": "0820ee24c8bd16b8",
        "type": "function",
        "z": "797529b4f5ae078c",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    //return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1080,
        "y": 860,
        "wires": [
            [
                "d4f5363fa8618976",
                "ed5e30b7e5f6675b"
            ]
        ]
    },
    {
        "id": "ab15ddeeac8d5a57",
        "type": "modbus-read",
        "z": "797529b4f5ae078c",
        "name": "DI 8 Read",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Input",
        "adr": "8",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "6734c92f7677d61f",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 900,
        "y": 960,
        "wires": [
            [
                "ad3a501f1b8f2ccd",
                "bbc7727d064d6f9c"
            ],
            []
        ]
    },
    {
        "id": "ad3a501f1b8f2ccd",
        "type": "function",
        "z": "797529b4f5ae078c",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    //return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1080,
        "y": 960,
        "wires": [
            [
                "93207f91bf20116e",
                "ec07e1c062dd82be"
            ]
        ]
    },
    {
        "id": "eb036c175398225a",
        "type": "modbus-read",
        "z": "797529b4f5ae078c",
        "name": "DI 9 Read",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Input",
        "adr": "9",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "6734c92f7677d61f",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 900,
        "y": 1060,
        "wires": [
            [
                "ad26453bbe8a25fe",
                "5a12a7e654b793ff"
            ],
            []
        ]
    },
    {
        "id": "ad26453bbe8a25fe",
        "type": "function",
        "z": "797529b4f5ae078c",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    //return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1080,
        "y": 1060,
        "wires": [
            [
                "9e7c7921330efc57",
                "bfca0bbaf61d1553"
            ]
        ]
    },
    {
        "id": "0bd2e98cf25e91c4",
        "type": "modbus-read",
        "z": "797529b4f5ae078c",
        "name": "DI 10 Read",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Input",
        "adr": "10",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "6734c92f7677d61f",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 910,
        "y": 1160,
        "wires": [
            [
                "68a4db2e7533a57c"
            ],
            []
        ]
    },
    {
        "id": "68a4db2e7533a57c",
        "type": "function",
        "z": "797529b4f5ae078c",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    //return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1080,
        "y": 1160,
        "wires": [
            [
                "240389a121cbea77"
            ]
        ]
    },
    {
        "id": "4bb95e25997a6461",
        "type": "modbus-read",
        "z": "797529b4f5ae078c",
        "name": "DI 11 Read",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Input",
        "adr": "11",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "6734c92f7677d61f",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 900,
        "y": 1260,
        "wires": [
            [
                "feb3243a2754adb7",
                "1dde68eb1c0179ff"
            ],
            []
        ]
    },
    {
        "id": "feb3243a2754adb7",
        "type": "function",
        "z": "797529b4f5ae078c",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    //return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1080,
        "y": 1260,
        "wires": [
            [
                "1b5ffc8b6f5d432a",
                "f2564ef6cd2ef1d5"
            ]
        ]
    },
    {
        "id": "629a741632221081",
        "type": "modbus-read",
        "z": "797529b4f5ae078c",
        "name": "DI 12 Read",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Input",
        "adr": "12",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "6734c92f7677d61f",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 910,
        "y": 1360,
        "wires": [
            [
                "133bb384ac6ff315",
                "9b95ac37cbecd9ea"
            ],
            []
        ]
    },
    {
        "id": "133bb384ac6ff315",
        "type": "function",
        "z": "797529b4f5ae078c",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    //return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1080,
        "y": 1360,
        "wires": [
            [
                "add09c7e5e61d303",
                "bab7290fe5369128"
            ]
        ]
    },
    {
        "id": "0b558359de492aec",
        "type": "modbus-read",
        "z": "797529b4f5ae078c",
        "name": "DI 13 Read",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Input",
        "adr": "13",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "6734c92f7677d61f",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 910,
        "y": 1460,
        "wires": [
            [
                "f1f57e498841e01b",
                "863278f790efcb3a"
            ],
            []
        ]
    },
    {
        "id": "f1f57e498841e01b",
        "type": "function",
        "z": "797529b4f5ae078c",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    //return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1080,
        "y": 1460,
        "wires": [
            [
                "e23267166980e909",
                "20fd86c4850c2bae"
            ]
        ]
    },
    {
        "id": "d58c80e36aee6b17",
        "type": "modbus-read",
        "z": "797529b4f5ae078c",
        "name": "DI 14 Read",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Input",
        "adr": "14",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "6734c92f7677d61f",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 910,
        "y": 1560,
        "wires": [
            [
                "f4f4d453fb7e6be2",
                "a9e365e02c77b035"
            ],
            []
        ]
    },
    {
        "id": "f4f4d453fb7e6be2",
        "type": "function",
        "z": "797529b4f5ae078c",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    //return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1080,
        "y": 1560,
        "wires": [
            [
                "ef2834d9805591c6",
                "6a79feeafca77a1f"
            ]
        ]
    },
    {
        "id": "958a863ac235ba60",
        "type": "modbus-read",
        "z": "797529b4f5ae078c",
        "name": "DI 15 Read",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Input",
        "adr": "15",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "6734c92f7677d61f",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 910,
        "y": 1660,
        "wires": [
            [
                "a44127423b100529",
                "796cd6f5b3ea4c37"
            ],
            []
        ]
    },
    {
        "id": "a44127423b100529",
        "type": "function",
        "z": "797529b4f5ae078c",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    //return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1080,
        "y": 1660,
        "wires": [
            [
                "e31a50c99d8ae6fb",
                "02ef1a0268c3709b"
            ]
        ]
    },
    {
        "id": "3e13233c68058c27",
        "type": "ui_text",
        "z": "797529b4f5ae078c",
        "group": "4ab021b052368581",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "DI 0 : ",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1470,
        "y": 160,
        "wires": []
    },
    {
        "id": "5834bd2c043638ac",
        "type": "change",
        "z": "797529b4f5ae078c",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "bool",
                "to": "Working",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "bool",
                "to": "Not Working",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1280,
        "y": 160,
        "wires": [
            [
                "3e13233c68058c27"
            ]
        ]
    },
    {
        "id": "9544a321eedbd9b0",
        "type": "ui_text",
        "z": "797529b4f5ae078c",
        "group": "4ab021b052368581",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "DI 1 : ",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1470,
        "y": 260,
        "wires": []
    },
    {
        "id": "81fd54787a4068b1",
        "type": "change",
        "z": "797529b4f5ae078c",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "bool",
                "to": "Working",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "bool",
                "to": "Not Working",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1280,
        "y": 260,
        "wires": [
            [
                "9544a321eedbd9b0"
            ]
        ]
    },
    {
        "id": "0387f28a96471cef",
        "type": "ui_text",
        "z": "797529b4f5ae078c",
        "group": "4ab021b052368581",
        "order": 16,
        "width": "0",
        "height": "0",
        "name": "",
        "label": "DI 2 : ",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1470,
        "y": 360,
        "wires": []
    },
    {
        "id": "a37f11711cfba6d8",
        "type": "change",
        "z": "797529b4f5ae078c",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "bool",
                "to": "Working",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "bool",
                "to": "Not Working",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1280,
        "y": 360,
        "wires": [
            [
                "0387f28a96471cef"
            ]
        ]
    },
    {
        "id": "7f7c01c68e3ffbcc",
        "type": "ui_text",
        "z": "797529b4f5ae078c",
        "group": "4ab021b052368581",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "DI 3 : ",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1470,
        "y": 460,
        "wires": []
    },
    {
        "id": "ac0ee085824c4cfd",
        "type": "change",
        "z": "797529b4f5ae078c",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "bool",
                "to": "Working",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "bool",
                "to": "Not Working",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1280,
        "y": 460,
        "wires": [
            [
                "7f7c01c68e3ffbcc"
            ]
        ]
    },
    {
        "id": "561d5f32c04fc316",
        "type": "ui_text",
        "z": "797529b4f5ae078c",
        "group": "4ab021b052368581",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "DI 4 : ",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1470,
        "y": 560,
        "wires": []
    },
    {
        "id": "6ac3e6e94bc1d452",
        "type": "change",
        "z": "797529b4f5ae078c",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "bool",
                "to": "Working",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "bool",
                "to": "Not Working",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1280,
        "y": 560,
        "wires": [
            [
                "561d5f32c04fc316"
            ]
        ]
    },
    {
        "id": "75afeaea14aa41f2",
        "type": "ui_text",
        "z": "797529b4f5ae078c",
        "group": "4ab021b052368581",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "DI 5 : ",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1470,
        "y": 660,
        "wires": []
    },
    {
        "id": "5f48c63b13351455",
        "type": "change",
        "z": "797529b4f5ae078c",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "bool",
                "to": "Working",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "bool",
                "to": "Not Working",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1280,
        "y": 660,
        "wires": [
            [
                "75afeaea14aa41f2"
            ]
        ]
    },
    {
        "id": "4c505148ec6590a5",
        "type": "ui_text",
        "z": "797529b4f5ae078c",
        "group": "4ab021b052368581",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "DI 6 : ",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1470,
        "y": 760,
        "wires": []
    },
    {
        "id": "cab57afbebacdce2",
        "type": "change",
        "z": "797529b4f5ae078c",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "bool",
                "to": "Working",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "bool",
                "to": "Not Working",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1280,
        "y": 760,
        "wires": [
            [
                "4c505148ec6590a5"
            ]
        ]
    },
    {
        "id": "1ef3cf8fe818f6ca",
        "type": "ui_text",
        "z": "797529b4f5ae078c",
        "group": "4ab021b052368581",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "DI 7 : ",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1470,
        "y": 860,
        "wires": []
    },
    {
        "id": "d4f5363fa8618976",
        "type": "change",
        "z": "797529b4f5ae078c",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "bool",
                "to": "Working",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "bool",
                "to": "Not Working",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1280,
        "y": 860,
        "wires": [
            [
                "1ef3cf8fe818f6ca"
            ]
        ]
    },
    {
        "id": "232a6710e99996c0",
        "type": "ui_text",
        "z": "797529b4f5ae078c",
        "group": "4ab021b052368581",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "DI 8 : ",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1470,
        "y": 960,
        "wires": []
    },
    {
        "id": "93207f91bf20116e",
        "type": "change",
        "z": "797529b4f5ae078c",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "bool",
                "to": "Working",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "bool",
                "to": "Not Working",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1280,
        "y": 960,
        "wires": [
            [
                "232a6710e99996c0"
            ]
        ]
    },
    {
        "id": "486ce2559dbb9e5a",
        "type": "ui_text",
        "z": "797529b4f5ae078c",
        "group": "4ab021b052368581",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "DI 9 : ",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1470,
        "y": 1060,
        "wires": []
    },
    {
        "id": "9e7c7921330efc57",
        "type": "change",
        "z": "797529b4f5ae078c",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "bool",
                "to": "Working",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "bool",
                "to": "Not Working",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1280,
        "y": 1060,
        "wires": [
            [
                "486ce2559dbb9e5a"
            ]
        ]
    },
    {
        "id": "13ef0f96325300bd",
        "type": "ui_text",
        "z": "797529b4f5ae078c",
        "group": "4ab021b052368581",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "DI 10 : ",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1470,
        "y": 1160,
        "wires": []
    },
    {
        "id": "240389a121cbea77",
        "type": "change",
        "z": "797529b4f5ae078c",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "bool",
                "to": "Working",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "bool",
                "to": "Not Working",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1280,
        "y": 1160,
        "wires": [
            [
                "13ef0f96325300bd"
            ]
        ]
    },
    {
        "id": "2582deba7447b103",
        "type": "ui_text",
        "z": "797529b4f5ae078c",
        "group": "4ab021b052368581",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "DI 11 : ",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1470,
        "y": 1260,
        "wires": []
    },
    {
        "id": "1b5ffc8b6f5d432a",
        "type": "change",
        "z": "797529b4f5ae078c",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "bool",
                "to": "Working",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "bool",
                "to": "Not Working",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1280,
        "y": 1260,
        "wires": [
            [
                "2582deba7447b103"
            ]
        ]
    },
    {
        "id": "315353af54734a62",
        "type": "ui_text",
        "z": "797529b4f5ae078c",
        "group": "4ab021b052368581",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "DI 12 : ",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1470,
        "y": 1360,
        "wires": []
    },
    {
        "id": "add09c7e5e61d303",
        "type": "change",
        "z": "797529b4f5ae078c",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "bool",
                "to": "Working",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "bool",
                "to": "Not Working",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1280,
        "y": 1360,
        "wires": [
            [
                "315353af54734a62"
            ]
        ]
    },
    {
        "id": "6fed3dbd3c40cf35",
        "type": "ui_text",
        "z": "797529b4f5ae078c",
        "group": "4ab021b052368581",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "DI 13 : ",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1470,
        "y": 1460,
        "wires": []
    },
    {
        "id": "e23267166980e909",
        "type": "change",
        "z": "797529b4f5ae078c",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "bool",
                "to": "Working",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "bool",
                "to": "Not Working",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1280,
        "y": 1460,
        "wires": [
            [
                "6fed3dbd3c40cf35"
            ]
        ]
    },
    {
        "id": "5b1f1479c55d4973",
        "type": "ui_text",
        "z": "797529b4f5ae078c",
        "group": "4ab021b052368581",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "DI 14 : ",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1470,
        "y": 1560,
        "wires": []
    },
    {
        "id": "ef2834d9805591c6",
        "type": "change",
        "z": "797529b4f5ae078c",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "bool",
                "to": "Working",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "bool",
                "to": "Not Working",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1280,
        "y": 1560,
        "wires": [
            [
                "5b1f1479c55d4973"
            ]
        ]
    },
    {
        "id": "1bed8dbd928209a6",
        "type": "ui_text",
        "z": "797529b4f5ae078c",
        "group": "4ab021b052368581",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "DI 15 : ",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1470,
        "y": 1660,
        "wires": []
    },
    {
        "id": "e31a50c99d8ae6fb",
        "type": "change",
        "z": "797529b4f5ae078c",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "bool",
                "to": "Working",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "bool",
                "to": "Not Working",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1280,
        "y": 1660,
        "wires": [
            [
                "1bed8dbd928209a6"
            ]
        ]
    },
    {
        "id": "5ac6df5e952c551c",
        "type": "comment",
        "z": "797529b4f5ae078c",
        "name": "ControlBox DI Robot",
        "info": "# This is ControlBox Input Setting",
        "x": 910,
        "y": 100,
        "wires": []
    },
    {
        "id": "603e1ee79b903622",
        "type": "debug",
        "z": "797529b4f5ae078c",
        "name": "debug 357",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1080,
        "y": 120,
        "wires": []
    },
    {
        "id": "45e5db8790903c1f",
        "type": "debug",
        "z": "797529b4f5ae078c",
        "name": "debug 358",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1260,
        "y": 120,
        "wires": []
    },
    {
        "id": "9f78d699d33c7e86",
        "type": "debug",
        "z": "797529b4f5ae078c",
        "name": "debug 359",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1080,
        "y": 220,
        "wires": []
    },
    {
        "id": "5c0d1991b5cb2dbf",
        "type": "debug",
        "z": "797529b4f5ae078c",
        "name": "debug 360",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1260,
        "y": 220,
        "wires": []
    },
    {
        "id": "d32284014239b84b",
        "type": "debug",
        "z": "797529b4f5ae078c",
        "name": "debug 361",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1080,
        "y": 320,
        "wires": []
    },
    {
        "id": "9e061e5eb2d4e0d5",
        "type": "debug",
        "z": "797529b4f5ae078c",
        "name": "debug 362",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1260,
        "y": 320,
        "wires": []
    },
    {
        "id": "7f2760f0087910bf",
        "type": "debug",
        "z": "797529b4f5ae078c",
        "name": "debug 363",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1080,
        "y": 420,
        "wires": []
    },
    {
        "id": "1f0bb252c6210c88",
        "type": "debug",
        "z": "797529b4f5ae078c",
        "name": "debug 364",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1260,
        "y": 420,
        "wires": []
    },
    {
        "id": "fcc8327e6c982705",
        "type": "debug",
        "z": "797529b4f5ae078c",
        "name": "debug 365",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1080,
        "y": 520,
        "wires": []
    },
    {
        "id": "2fc9cec62355351f",
        "type": "debug",
        "z": "797529b4f5ae078c",
        "name": "debug 366",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1260,
        "y": 520,
        "wires": []
    },
    {
        "id": "5c492639ab0b5ab0",
        "type": "debug",
        "z": "797529b4f5ae078c",
        "name": "debug 367",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1080,
        "y": 620,
        "wires": []
    },
    {
        "id": "599b082fa8de287c",
        "type": "debug",
        "z": "797529b4f5ae078c",
        "name": "debug 368",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1260,
        "y": 620,
        "wires": []
    },
    {
        "id": "2ee8e67d5bd3336f",
        "type": "debug",
        "z": "797529b4f5ae078c",
        "name": "debug 369",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1080,
        "y": 720,
        "wires": []
    },
    {
        "id": "37abcf5f131ee1b0",
        "type": "debug",
        "z": "797529b4f5ae078c",
        "name": "debug 370",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1260,
        "y": 720,
        "wires": []
    },
    {
        "id": "f28fbe5a8e300c4b",
        "type": "debug",
        "z": "797529b4f5ae078c",
        "name": "debug 371",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1080,
        "y": 820,
        "wires": []
    },
    {
        "id": "ed5e30b7e5f6675b",
        "type": "debug",
        "z": "797529b4f5ae078c",
        "name": "debug 372",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1260,
        "y": 820,
        "wires": []
    },
    {
        "id": "bbc7727d064d6f9c",
        "type": "debug",
        "z": "797529b4f5ae078c",
        "name": "debug 373",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1080,
        "y": 920,
        "wires": []
    },
    {
        "id": "ec07e1c062dd82be",
        "type": "debug",
        "z": "797529b4f5ae078c",
        "name": "debug 374",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1260,
        "y": 920,
        "wires": []
    },
    {
        "id": "5a12a7e654b793ff",
        "type": "debug",
        "z": "797529b4f5ae078c",
        "name": "debug 375",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1080,
        "y": 1020,
        "wires": []
    },
    {
        "id": "bfca0bbaf61d1553",
        "type": "debug",
        "z": "797529b4f5ae078c",
        "name": "debug 376",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1260,
        "y": 1020,
        "wires": []
    },
    {
        "id": "e54e106b27999f23",
        "type": "debug",
        "z": "797529b4f5ae078c",
        "name": "debug 377",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1080,
        "y": 1120,
        "wires": []
    },
    {
        "id": "f629a0918e7c9f5b",
        "type": "debug",
        "z": "797529b4f5ae078c",
        "name": "debug 378",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1260,
        "y": 1120,
        "wires": []
    },
    {
        "id": "1dde68eb1c0179ff",
        "type": "debug",
        "z": "797529b4f5ae078c",
        "name": "debug 379",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1080,
        "y": 1220,
        "wires": []
    },
    {
        "id": "f2564ef6cd2ef1d5",
        "type": "debug",
        "z": "797529b4f5ae078c",
        "name": "debug 380",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1260,
        "y": 1220,
        "wires": []
    },
    {
        "id": "9b95ac37cbecd9ea",
        "type": "debug",
        "z": "797529b4f5ae078c",
        "name": "debug 381",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1080,
        "y": 1320,
        "wires": []
    },
    {
        "id": "bab7290fe5369128",
        "type": "debug",
        "z": "797529b4f5ae078c",
        "name": "debug 382",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1260,
        "y": 1320,
        "wires": []
    },
    {
        "id": "863278f790efcb3a",
        "type": "debug",
        "z": "797529b4f5ae078c",
        "name": "debug 383",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1080,
        "y": 1420,
        "wires": []
    },
    {
        "id": "20fd86c4850c2bae",
        "type": "debug",
        "z": "797529b4f5ae078c",
        "name": "debug 384",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1260,
        "y": 1420,
        "wires": []
    },
    {
        "id": "a9e365e02c77b035",
        "type": "debug",
        "z": "797529b4f5ae078c",
        "name": "debug 385",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1080,
        "y": 1520,
        "wires": []
    },
    {
        "id": "6a79feeafca77a1f",
        "type": "debug",
        "z": "797529b4f5ae078c",
        "name": "debug 386",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1260,
        "y": 1520,
        "wires": []
    },
    {
        "id": "796cd6f5b3ea4c37",
        "type": "debug",
        "z": "797529b4f5ae078c",
        "name": "debug 387",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1080,
        "y": 1620,
        "wires": []
    },
    {
        "id": "02ef1a0268c3709b",
        "type": "debug",
        "z": "797529b4f5ae078c",
        "name": "debug 388",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1260,
        "y": 1620,
        "wires": []
    },
    {
        "id": "1fa5c4ff36e2ab73",
        "type": "modbus-read",
        "z": "797529b4f5ae078c",
        "name": "Error or Not",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Input",
        "adr": "7201",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "6734c92f7677d61f",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 1710,
        "y": 180,
        "wires": [
            [
                "46af57174d770506",
                "82966c4712e45a2c"
            ],
            []
        ]
    },
    {
        "id": "241b6bc070720608",
        "type": "comment",
        "z": "797529b4f5ae078c",
        "name": "Robot Status",
        "info": "# This is Robot Status",
        "x": 1710,
        "y": 120,
        "wires": []
    },
    {
        "id": "cc2561a6824031ef",
        "type": "modbus-read",
        "z": "797529b4f5ae078c",
        "name": "Project Running or Not",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Input",
        "adr": "7202",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "6734c92f7677d61f",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 1740,
        "y": 280,
        "wires": [
            [
                "54ab45e4f942e05d",
                "06d6611460fd9037"
            ],
            []
        ]
    },
    {
        "id": "8e573b3f543643a5",
        "type": "modbus-read",
        "z": "797529b4f5ae078c",
        "name": "Project Editing or Not",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Input",
        "adr": "7203",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "6734c92f7677d61f",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 1740,
        "y": 380,
        "wires": [
            [
                "adcbbfc203d86d09",
                "948d9c564a1684b0"
            ],
            []
        ]
    },
    {
        "id": "8ddb2bf1dec42210",
        "type": "modbus-read",
        "z": "797529b4f5ae078c",
        "name": "Project Pause or Not",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Input",
        "adr": "7204",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "6734c92f7677d61f",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 1730,
        "y": 480,
        "wires": [
            [
                "0d6dc7f0162d5526",
                "d0ccb9b650a7fe27"
            ],
            []
        ]
    },
    {
        "id": "2d0e3369f4494e40",
        "type": "modbus-read",
        "z": "797529b4f5ae078c",
        "name": "Get Control or Not",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Input",
        "adr": "7205",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "6734c92f7677d61f",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 1730,
        "y": 580,
        "wires": [
            [
                "e08bbca9d4fece6a",
                "5f9c8bdda544955e"
            ],
            []
        ]
    },
    {
        "id": "a2880c915609eeca",
        "type": "modbus-read",
        "z": "797529b4f5ae078c",
        "name": "Light on or not",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Input",
        "adr": "7206",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "6734c92f7677d61f",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 1710,
        "y": 680,
        "wires": [
            [
                "e31a4dbad4ccca47",
                "e7798ab1941d43f3"
            ],
            []
        ]
    },
    {
        "id": "a427ae654bd26fc8",
        "type": "modbus-read",
        "z": "797529b4f5ae078c",
        "name": "Safety IO or not",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Input",
        "adr": "7207",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "6734c92f7677d61f",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 1720,
        "y": 780,
        "wires": [
            [
                "cbca2d6c3544e311",
                "57ef14e1ff020f03"
            ],
            []
        ]
    },
    {
        "id": "5fcf1494987d9b22",
        "type": "modbus-read",
        "z": "797529b4f5ae078c",
        "name": "E-Stop or not",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Input",
        "adr": "7208",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "6734c92f7677d61f",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 1710,
        "y": 880,
        "wires": [
            [
                "144a82e81cd9d64b",
                "99e88f5280382368"
            ],
            []
        ]
    },
    {
        "id": "46af57174d770506",
        "type": "function",
        "z": "797529b4f5ae078c",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    //return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1900,
        "y": 180,
        "wires": [
            [
                "03a3582c7cb0aac9",
                "3ff9a5d171038e8e"
            ]
        ]
    },
    {
        "id": "54ab45e4f942e05d",
        "type": "function",
        "z": "797529b4f5ae078c",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    //return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1940,
        "y": 280,
        "wires": [
            [
                "ded97d557006bbdd",
                "8044b46fddac5f84"
            ]
        ]
    },
    {
        "id": "adcbbfc203d86d09",
        "type": "function",
        "z": "797529b4f5ae078c",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    //return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1940,
        "y": 380,
        "wires": [
            [
                "030e4e0223a15f43",
                "685f21048957b6fa"
            ]
        ]
    },
    {
        "id": "0d6dc7f0162d5526",
        "type": "function",
        "z": "797529b4f5ae078c",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    //return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1920,
        "y": 480,
        "wires": [
            [
                "02a20b846588b3cd",
                "0c13ac7ec3e9f85d"
            ]
        ]
    },
    {
        "id": "e08bbca9d4fece6a",
        "type": "function",
        "z": "797529b4f5ae078c",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    //return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1920,
        "y": 580,
        "wires": [
            [
                "f36553b7e4a40a87",
                "8e0ee3a960533520"
            ]
        ]
    },
    {
        "id": "e31a4dbad4ccca47",
        "type": "function",
        "z": "797529b4f5ae078c",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    //return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1880,
        "y": 680,
        "wires": [
            [
                "78e7990f485597ec",
                "384e6ca9bfd663b0"
            ]
        ]
    },
    {
        "id": "cbca2d6c3544e311",
        "type": "function",
        "z": "797529b4f5ae078c",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    //return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1900,
        "y": 780,
        "wires": [
            [
                "adc12f76c4c25215",
                "13d346f35295b262"
            ]
        ]
    },
    {
        "id": "144a82e81cd9d64b",
        "type": "function",
        "z": "797529b4f5ae078c",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    //return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1880,
        "y": 880,
        "wires": [
            [
                "e49a8fb67847acea",
                "fdad9a95087cb56e"
            ]
        ]
    },
    {
        "id": "03a3582c7cb0aac9",
        "type": "change",
        "z": "797529b4f5ae078c",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "bool",
                "to": "Yes",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "bool",
                "to": "No",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2080,
        "y": 180,
        "wires": [
            [
                "40ca2bfbda418c1d"
            ]
        ]
    },
    {
        "id": "ded97d557006bbdd",
        "type": "change",
        "z": "797529b4f5ae078c",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "bool",
                "to": "Yes",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "bool",
                "to": "No",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2120,
        "y": 280,
        "wires": [
            [
                "d71eb91a58b410ec"
            ]
        ]
    },
    {
        "id": "030e4e0223a15f43",
        "type": "change",
        "z": "797529b4f5ae078c",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "bool",
                "to": "Yes",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "bool",
                "to": "No",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2120,
        "y": 380,
        "wires": [
            [
                "0d1596820e243a54"
            ]
        ]
    },
    {
        "id": "02a20b846588b3cd",
        "type": "change",
        "z": "797529b4f5ae078c",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "bool",
                "to": "Yes",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "bool",
                "to": "No",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2100,
        "y": 480,
        "wires": [
            [
                "93caed69532fc8ce"
            ]
        ]
    },
    {
        "id": "f36553b7e4a40a87",
        "type": "change",
        "z": "797529b4f5ae078c",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "bool",
                "to": "Yes",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "bool",
                "to": "No",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2100,
        "y": 580,
        "wires": [
            [
                "8f04bb939cd9ce9f"
            ]
        ]
    },
    {
        "id": "78e7990f485597ec",
        "type": "change",
        "z": "797529b4f5ae078c",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "bool",
                "to": "Enable",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "bool",
                "to": "Disable",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2060,
        "y": 680,
        "wires": [
            [
                "62e2e32e072a6067"
            ]
        ]
    },
    {
        "id": "adc12f76c4c25215",
        "type": "change",
        "z": "797529b4f5ae078c",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "bool",
                "to": "Triggered",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "bool",
                "to": "Restored",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2080,
        "y": 780,
        "wires": [
            [
                "dcbfd5e26aad442d"
            ]
        ]
    },
    {
        "id": "e49a8fb67847acea",
        "type": "change",
        "z": "797529b4f5ae078c",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "bool",
                "to": "Triggered",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "bool",
                "to": "Restored",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2060,
        "y": 880,
        "wires": [
            [
                "112b29d28013c769"
            ]
        ]
    },
    {
        "id": "40ca2bfbda418c1d",
        "type": "ui_text",
        "z": "797529b4f5ae078c",
        "group": "2adb62999c91256c",
        "order": 6,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Error or Not",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 2270,
        "y": 180,
        "wires": []
    },
    {
        "id": "d71eb91a58b410ec",
        "type": "ui_text",
        "z": "797529b4f5ae078c",
        "group": "2adb62999c91256c",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Project Running or Not",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 2340,
        "y": 280,
        "wires": []
    },
    {
        "id": "0d1596820e243a54",
        "type": "ui_text",
        "z": "797529b4f5ae078c",
        "group": "2adb62999c91256c",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Project Editing or Not",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 2340,
        "y": 380,
        "wires": []
    },
    {
        "id": "93caed69532fc8ce",
        "type": "ui_text",
        "z": "797529b4f5ae078c",
        "group": "2adb62999c91256c",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Project Pause or Not",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 2320,
        "y": 480,
        "wires": []
    },
    {
        "id": "8f04bb939cd9ce9f",
        "type": "ui_text",
        "z": "797529b4f5ae078c",
        "group": "2adb62999c91256c",
        "order": 7,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Get Control or Not",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 2310,
        "y": 580,
        "wires": []
    },
    {
        "id": "62e2e32e072a6067",
        "type": "ui_text",
        "z": "797529b4f5ae078c",
        "group": "2adb62999c91256c",
        "order": 8,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Light on or not",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 2260,
        "y": 680,
        "wires": []
    },
    {
        "id": "dcbfd5e26aad442d",
        "type": "ui_text",
        "z": "797529b4f5ae078c",
        "group": "2adb62999c91256c",
        "order": 9,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Safety IO or not",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 2280,
        "y": 780,
        "wires": []
    },
    {
        "id": "112b29d28013c769",
        "type": "ui_text",
        "z": "797529b4f5ae078c",
        "group": "2adb62999c91256c",
        "order": 10,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "E-Stop or not",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 2250,
        "y": 880,
        "wires": []
    },
    {
        "id": "3193ab02e0c429ea",
        "type": "modbus-read",
        "z": "797529b4f5ae078c",
        "name": "Project Running Speed",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "InputRegister",
        "adr": "7101",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "6734c92f7677d61f",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 1740,
        "y": 980,
        "wires": [
            [
                "22c8f22830da4c9b",
                "d3bf672329c7b309"
            ],
            []
        ]
    },
    {
        "id": "e52f460698d4eb50",
        "type": "modbus-read",
        "z": "797529b4f5ae078c",
        "name": "M/A Mode",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "InputRegister",
        "adr": "7102",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "6734c92f7677d61f",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 1700,
        "y": 1080,
        "wires": [
            [
                "adc50c2736fac7f4",
                "9ae3da27e6798f72"
            ],
            []
        ]
    },
    {
        "id": "22c8f22830da4c9b",
        "type": "function",
        "z": "797529b4f5ae078c",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    //return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1960,
        "y": 980,
        "wires": [
            [
                "f7f7ad25c1d9c5b2",
                "986e1cfc38c0e75a"
            ]
        ]
    },
    {
        "id": "adc50c2736fac7f4",
        "type": "function",
        "z": "797529b4f5ae078c",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    //return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1880,
        "y": 1080,
        "wires": [
            [
                "a02d8eabdbe51eda",
                "7140c3dc7d98a330"
            ]
        ]
    },
    {
        "id": "f7f7ad25c1d9c5b2",
        "type": "ui_gauge",
        "z": "797529b4f5ae078c",
        "name": "",
        "group": "2adb62999c91256c",
        "order": 1,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Speed",
        "label": "%",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 2130,
        "y": 980,
        "wires": []
    },
    {
        "id": "0d1f2d84992b3b5b",
        "type": "ui_text",
        "z": "797529b4f5ae078c",
        "group": "2adb62999c91256c",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Robot Mode : ",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 2220,
        "y": 1080,
        "wires": []
    },
    {
        "id": "a02d8eabdbe51eda",
        "type": "change",
        "z": "797529b4f5ae078c",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "1",
                "fromt": "num",
                "to": "Automatic",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "2",
                "fromt": "num",
                "to": "Manual",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2040,
        "y": 1080,
        "wires": [
            [
                "0d1f2d84992b3b5b"
            ]
        ]
    },
    {
        "id": "82966c4712e45a2c",
        "type": "debug",
        "z": "797529b4f5ae078c",
        "name": "debug 389",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1900,
        "y": 140,
        "wires": []
    },
    {
        "id": "3ff9a5d171038e8e",
        "type": "debug",
        "z": "797529b4f5ae078c",
        "name": "debug 390",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2060,
        "y": 140,
        "wires": []
    },
    {
        "id": "06d6611460fd9037",
        "type": "debug",
        "z": "797529b4f5ae078c",
        "name": "debug 391",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1940,
        "y": 240,
        "wires": []
    },
    {
        "id": "8044b46fddac5f84",
        "type": "debug",
        "z": "797529b4f5ae078c",
        "name": "debug 392",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2100,
        "y": 240,
        "wires": []
    },
    {
        "id": "948d9c564a1684b0",
        "type": "debug",
        "z": "797529b4f5ae078c",
        "name": "debug 393",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1940,
        "y": 340,
        "wires": []
    },
    {
        "id": "685f21048957b6fa",
        "type": "debug",
        "z": "797529b4f5ae078c",
        "name": "debug 394",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2100,
        "y": 340,
        "wires": []
    },
    {
        "id": "d0ccb9b650a7fe27",
        "type": "debug",
        "z": "797529b4f5ae078c",
        "name": "debug 395",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1920,
        "y": 440,
        "wires": []
    },
    {
        "id": "0c13ac7ec3e9f85d",
        "type": "debug",
        "z": "797529b4f5ae078c",
        "name": "debug 396",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2080,
        "y": 440,
        "wires": []
    },
    {
        "id": "5f9c8bdda544955e",
        "type": "debug",
        "z": "797529b4f5ae078c",
        "name": "debug 397",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1920,
        "y": 540,
        "wires": []
    },
    {
        "id": "8e0ee3a960533520",
        "type": "debug",
        "z": "797529b4f5ae078c",
        "name": "debug 398",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2080,
        "y": 540,
        "wires": []
    },
    {
        "id": "e7798ab1941d43f3",
        "type": "debug",
        "z": "797529b4f5ae078c",
        "name": "debug 399",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1880,
        "y": 640,
        "wires": []
    },
    {
        "id": "384e6ca9bfd663b0",
        "type": "debug",
        "z": "797529b4f5ae078c",
        "name": "debug 400",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2040,
        "y": 640,
        "wires": []
    },
    {
        "id": "57ef14e1ff020f03",
        "type": "debug",
        "z": "797529b4f5ae078c",
        "name": "debug 401",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1900,
        "y": 740,
        "wires": []
    },
    {
        "id": "13d346f35295b262",
        "type": "debug",
        "z": "797529b4f5ae078c",
        "name": "debug 402",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2060,
        "y": 740,
        "wires": []
    },
    {
        "id": "99e88f5280382368",
        "type": "debug",
        "z": "797529b4f5ae078c",
        "name": "debug 403",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1880,
        "y": 840,
        "wires": []
    },
    {
        "id": "fdad9a95087cb56e",
        "type": "debug",
        "z": "797529b4f5ae078c",
        "name": "debug 404",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2040,
        "y": 840,
        "wires": []
    },
    {
        "id": "d3bf672329c7b309",
        "type": "debug",
        "z": "797529b4f5ae078c",
        "name": "debug 405",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1960,
        "y": 940,
        "wires": []
    },
    {
        "id": "986e1cfc38c0e75a",
        "type": "debug",
        "z": "797529b4f5ae078c",
        "name": "debug 406",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2120,
        "y": 940,
        "wires": []
    },
    {
        "id": "9ae3da27e6798f72",
        "type": "debug",
        "z": "797529b4f5ae078c",
        "name": "debug 407",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1890,
        "y": 1040,
        "wires": []
    },
    {
        "id": "7140c3dc7d98a330",
        "type": "debug",
        "z": "797529b4f5ae078c",
        "name": "debug 408",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2050,
        "y": 1040,
        "wires": []
    },
    {
        "id": "322ffc0327351cfb",
        "type": "modbus-read",
        "z": "797529b4f5ae078c",
        "name": "Robot Light Status",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "InputRegister",
        "adr": "7332",
        "quantity": "1",
        "rate": "200",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "6734c92f7677d61f",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 1730,
        "y": 1180,
        "wires": [
            [
                "743a7c93b2df1f83",
                "be17f9773358f5d5"
            ],
            []
        ]
    },
    {
        "id": "be17f9773358f5d5",
        "type": "function",
        "z": "797529b4f5ae078c",
        "name": "Array[0]",
        "func": "// Get the first value from the array\nvar firstValue = msg.payload[0];\n\n// Get the last firstValue from persistent context\nvar lastFirstValue = flow.get('lastFirstValue');\n\n// Check if this is the first run or if the firstValue has changed\nif (lastFirstValue === undefined || lastFirstValue !== firstValue) {\n    // Save the current firstValue to persistent context\n    flow.set('lastFirstValue', firstValue);\n    // Update the payload to be the firstValue\n    msg.payload = firstValue;\n    // Send the message forward\n    return msg;\n} else {\n    // If the firstValue hasn't changed, stop the flow here by returning null\n    //return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1920,
        "y": 1180,
        "wires": [
            [
                "f94dbcc5e0a56f25",
                "ac2368efc6d4ce30"
            ]
        ]
    },
    {
        "id": "21996899a6b51677",
        "type": "ui_text",
        "z": "797529b4f5ae078c",
        "group": "2adb62999c91256c",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Robot Light Status : ",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 2310,
        "y": 1180,
        "wires": []
    },
    {
        "id": "f94dbcc5e0a56f25",
        "type": "change",
        "z": "797529b4f5ae078c",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "1",
                "fromt": "num",
                "to": "Solid Red, fatal error.",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "2",
                "fromt": "num",
                "to": "Flashing Red, Robot is initializing.",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "3",
                "fromt": "num",
                "to": "Solid Blue, standby in Auto Mode. ",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "4",
                "fromt": "num",
                "to": "Flashing Blue, in Auto Mode.",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "5",
                "fromt": "num",
                "to": "Solid Green, standby in Manual Mode. ",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "6",
                "fromt": "num",
                "to": "Flashing Green, in Manual Mode.",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "9",
                "fromt": "num",
                "to": "Alternating Blue&Red, Auto Mode error. ",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "10",
                "fromt": "num",
                "to": "Alternating Green&Red, Manual Mode  error.",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "13",
                "fromt": "num",
                "to": "Alternating Purple&Green, in Manual  Mode ( User Connected External Safeguard  Input Port for Human - Machine Safety Settings trigger).",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "14",
                "fromt": "num",
                "to": "Alternating Purple&Blue, in Auto Mode  ( User Connected External Safeguard Input  Port for Human - Machine Safety Settings  trigger).",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "17",
                "fromt": "num",
                "to": "Alternating White&Green, in Manual  Mode & Reduced Space.",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "18",
                "fromt": "num",
                "to": "Alternating White&Blue, in Auto Mode &  Reduced Space.",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2110,
        "y": 1180,
        "wires": [
            [
                "21996899a6b51677"
            ]
        ]
    },
    {
        "id": "743a7c93b2df1f83",
        "type": "debug",
        "z": "797529b4f5ae078c",
        "name": "debug 409",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1930,
        "y": 1140,
        "wires": []
    },
    {
        "id": "ac2368efc6d4ce30",
        "type": "debug",
        "z": "797529b4f5ae078c",
        "name": "debug 410",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2110,
        "y": 1140,
        "wires": []
    },
    {
        "id": "40176f73f2d9e980",
        "type": "ui_button",
        "z": "797529b4f5ae078c",
        "name": "",
        "group": "45b5965ca4769fae",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Play/Pause",
        "tooltip": "",
        "color": "",
        "bgcolor": "Orange",
        "className": "",
        "icon": "",
        "payload": "true",
        "payloadType": "bool",
        "topic": "topic",
        "topicType": "msg",
        "x": 2650,
        "y": 180,
        "wires": [
            [
                "ef682fc7d3a30563"
            ]
        ]
    },
    {
        "id": "7ac08df4c4f0c141",
        "type": "ui_button",
        "z": "797529b4f5ae078c",
        "name": "",
        "group": "45b5965ca4769fae",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Stop",
        "tooltip": "",
        "color": "",
        "bgcolor": "Red",
        "className": "",
        "icon": "",
        "payload": "true",
        "payloadType": "bool",
        "topic": "topic",
        "topicType": "msg",
        "x": 2630,
        "y": 260,
        "wires": [
            [
                "c725544c430ed2e3"
            ]
        ]
    },
    {
        "id": "5d32c735bc933906",
        "type": "ui_button",
        "z": "797529b4f5ae078c",
        "name": "",
        "group": "45b5965ca4769fae",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Stick+",
        "tooltip": "",
        "color": "",
        "bgcolor": "blue",
        "className": "",
        "icon": "",
        "payload": "true",
        "payloadType": "bool",
        "topic": "topic",
        "topicType": "msg",
        "x": 2630,
        "y": 340,
        "wires": [
            [
                "c0b130563a3ef83a"
            ]
        ]
    },
    {
        "id": "25d70d8b213d4f7e",
        "type": "ui_button",
        "z": "797529b4f5ae078c",
        "name": "",
        "group": "45b5965ca4769fae",
        "order": 16,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Stick-",
        "tooltip": "",
        "color": "",
        "bgcolor": "blue",
        "className": "",
        "icon": "",
        "payload": "true",
        "payloadType": "bool",
        "topic": "topic",
        "topicType": "msg",
        "x": 2630,
        "y": 420,
        "wires": [
            [
                "b440bf9619395a2e"
            ]
        ]
    },
    {
        "id": "ef682fc7d3a30563",
        "type": "modbus-write",
        "z": "797529b4f5ae078c",
        "name": "Play/Pause",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "7104",
        "quantity": "1",
        "server": "6734c92f7677d61f",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 2850,
        "y": 180,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "c725544c430ed2e3",
        "type": "modbus-write",
        "z": "797529b4f5ae078c",
        "name": "Stop",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "7105",
        "quantity": "1",
        "server": "6734c92f7677d61f",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 2790,
        "y": 260,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "c0b130563a3ef83a",
        "type": "modbus-write",
        "z": "797529b4f5ae078c",
        "name": "Stick+",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "7106",
        "quantity": "1",
        "server": "6734c92f7677d61f",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 2790,
        "y": 340,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "b440bf9619395a2e",
        "type": "modbus-write",
        "z": "797529b4f5ae078c",
        "name": "Stick-",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "Coil",
        "adr": "7107",
        "quantity": "1",
        "server": "6734c92f7677d61f",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 2790,
        "y": 420,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "b7f4e7cd06b62acd",
        "type": "comment",
        "z": "797529b4f5ae078c",
        "name": "Robot Stick",
        "info": "# This is Robot Stick Setting",
        "x": 2630,
        "y": 120,
        "wires": []
    }
]
